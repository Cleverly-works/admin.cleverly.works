(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3731],{93443:function(n,e,t){"use strict";var r=t(67294),i=t(45697),a=t(22796),o=t(18944),s=function(n){var e=n.content,t=n.text;return r.createElement(r.Fragment,null,r.createElement(a.Z,{marginBottom:"sm"}),r.createElement(o.Z,{content:e,context:"dark",size:"sm"}),r.createElement(o.Z,null,t))};s.propTypes={content:i.string.isRequired,text:(0,i.oneOfType)([i.node,i.string]).isRequired},e.Z=s},80285:function(n,e){"use strict";e.Z=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"GBP",t=new Intl.NumberFormat(["en-GB"],{currency:e,currencyDisplay:"symbol",style:"currency"});return t.format(n)}},76585:function(n,e,t){"use strict";t.d(e,{z:function(){return a}});var r,i=t(52209),a=(0,t(54397).Ps)(r||(r=(0,i.Z)(["\n  fragment AccountFields on Account {\n    id\n    type\n    name\n    status\n    vatId\n  }\n"])))},48963:function(n,e,t){"use strict";t.d(e,{N:function(){return o}});var r=t(84550),i=t(85893),a=[{id:"assignedToMe",label:"Assigned to me",value:"assignedToMe"}],o=function(n){var e=n.data,t=n.errors,o=n.name,s=n.onChange,u=n.register;return(0,i.jsx)(r.Z,{errors:t,data:e||a,legend:"",name:o,onChange:s,register:u})};o.defaultProps={name:"assignedToMe"}},24019:function(n,e,t){"use strict";t.d(e,{h:function(){return y}});var r=t(92809),i=t(67294),a=t(42593),o=t(78215),s=t(2356),u=t(65375),c=t(93515),d=t(83894),l=t(48963),m=t(76800),p=t(95146),_=t(1071),f=t(85893);function $(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function b(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?$(Object(t),!0).forEach((function(e){(0,r.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):$(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var y=function(n){var e=n.initialValues,t=n.control,r=n.errors,$=n.register,y=n.setFilters,g=n.watch,I=n.setValue,v=n.show,h=n.reset,q=(0,i.useContext)(a.Z).hasRole,S={control:t,errors:r,register:$},j=g("customerId"),x=g("locationId"),k=g("supplierId"),O=g("userId");return(0,i.useEffect)((function(){e.customerId||y((function(n){return b(b({},n),{},{customerId:"number"===typeof j?j:(null===j||void 0===j?void 0:j.value)||null})}))}),[j]),(0,i.useEffect)((function(){y((function(n){return b(b({},n),{},{locationId:"number"===typeof x?x:(null===x||void 0===x?void 0:x.value)||null})}))}),[x]),(0,i.useEffect)((function(){y((function(n){return b(b({},n),{},{supplierId:"number"===typeof k?k:(null===k||void 0===k?void 0:k.value)||null})}))}),[k]),(0,i.useEffect)((function(){y((function(n){return b(b({},n),{},{userId:"number"===typeof O?O:(null===O||void 0===O?void 0:O.value)||null})}))}),[O]),(0,i.useEffect)((function(){return function(){y(e),h(e)}}),[v]),(0,f.jsxs)(o.Z,{children:[(0,f.jsx)(s.Z,{md:6,children:(0,f.jsx)(u.Z,{label:null,children:(0,f.jsx)(c.Z,b(b({},S),{},{placeholder:"Select status",name:"status",isMulti:!0,onChange:function(n){var e=n.map((function(n){return n.value}));y((function(n){return b(b({},n),{},{status:e.length>0?e:null})})),y((function(n){return b(b({},n),{},{isChangedStatusSelect:!0})})),I("status",n),n.length||y((function(n){return b(b({},n),{},{isChangedStatusSelect:!1})}))},options:(0,_.lR)(v)}))})}),q("supplier")&&(0,f.jsx)(s.Z,{md:6,children:(0,f.jsx)(p.P,b(b({},S),{},{errors:b({},r),label:"",userId:e.userId,name:"userId",placeholder:"Select user",type:"user"}))}),!e.customerId&&q("admin")&&(0,f.jsx)(s.Z,{md:6,children:(0,f.jsx)(p.P,b(b({},S),{},{errors:b({},r),label:"",name:"customerId",placeholder:"Select customer",type:"customer"}))}),q("admin")&&(0,f.jsx)(s.Z,{md:6,children:(0,f.jsx)(p.P,b(b({},S),{},{errors:b({},r),label:"",accountId:e.customerId,name:"locationId",placeholder:"Select location",type:"property"}))}),q("admin")&&(0,f.jsx)(s.Z,{md:6,children:(0,f.jsx)(p.P,b(b({},S),{},{errors:b({},r),label:"",name:"supplierId",placeholder:"Select supplier",type:"supplier"}))}),(0,f.jsx)(s.Z,{md:12,children:(0,f.jsxs)(o.Z,{children:[(0,f.jsx)(s.Z,{md:6,children:(0,f.jsx)(m.M,b(b({},S),{},{name:"startDate",onChange:function(n){y((function(e){return b(b({},e),{},{startDate:n||null})})),I("startDate",n)},placeholder:"Start date"}))}),(0,f.jsx)(s.Z,{md:6,children:(0,f.jsx)(m.M,b(b({},S),{},{name:"endDate",onChange:function(n){var e=n?(0,d.Z)(n):n;y((function(n){return b(b({},n),{},{endDate:e})})),I("endDate",e)},placeholder:"End date"}))})]})}),!e.noAssignToMeFilter&&(0,f.jsx)(s.Z,{md:12,children:(0,f.jsx)(l.N,b(b({},S),{},{name:"managerId",onChange:function(n){return y((function(e){return b(b({},e),{},{managerId:n.target.checked})}))}}))})]})}},1071:function(n,e,t){"use strict";t.d(e,{fI:function(){return x},lR:function(){return O},Uu:function(){return k}});var r,i,a,o,s,u=t(80318),c=t(92809),d=t(52209),l=t(54397),m=t(38478),p=t(76585),_=t(88402),f=t(27834),$=(0,l.Ps)(r||(r=(0,d.Z)(['\n  query GetJobs(\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $offset: Int\n    $orderBy: Job_order_by!\n    $q: String\n    $startDate: timestamptz\n    $status: [String!]\n    $type: String\n    $userId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n          { _or: [{ number: { _eq: $number } }, { Invoices: { invoiceNumber: { _eq: $number } } }] }\n        ]\n        status: { _in: $status }\n        type: { _eq: $type }\n        supplierUserId: { _eq: $userId }\n      }\n      order_by: [$orderBy]\n    ) {\n      Assets(where: { entity: { _eq: "Job" } }) {\n        id\n        assetId\n      }\n      ...JobFields\n      ...JobSupplierFields\n      admin: Admin {\n        id\n        name\n      }\n      location: Location {\n        id\n        name\n      }\n      invoices: Invoices {\n        invoiceNumber\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        id\n        name\n      }\n      supplierOffers: SupplierOffers {\n        id\n        status\n        rate\n        dayRate\n        notes\n        account: Supplier {\n          id\n          type\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n          { _or: [{ number: { _eq: $number } }, { Invoices: { invoiceNumber: { _eq: $number } } }] }\n        ]\n        status: { _in: $status }\n        type: { _eq: $type }\n        supplierUserId: { _eq: $userId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n  ',"\n  ","\n  ","\n"])),m.aL,m.H_,f.Px),b=(0,l.Ps)(i||(i=(0,d.Z)(['\n  query GetJobs(\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: Job_order_by!\n    $startDate: timestamptz\n    $status: [String!]\n    $type: [String!]\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n          { _or: [{ number: { _eq: $number } }, { Invoices: { invoiceNumber: { _eq: $number } } }] }\n        ]\n        status: { _in: $status }\n        type: { _in: $type }\n      }\n      order_by: [$orderBy]\n    ) {\n      Assets(where: { entity: { _eq: "Job" } }) {\n        id\n        assetId\n      }\n      ...JobFields\n      ...JobSupplierFields\n      admin: Admin {\n        id\n        name\n      }\n      location: Location {\n        id\n        name\n      }\n      invoices: Invoices {\n        invoiceNumber\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        id\n        name\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n          { _or: [{ number: { _eq: $number } }, { Invoices: { invoiceNumber: { _eq: $number } } }] }\n        ]\n        status: { _in: $status }\n        type: { _in: $type }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n  ',"\n  ","\n  ","\n"])),m.aL,m.H_,f.Px),y=(0,l.Ps)(a||(a=(0,d.Z)(['\n  query GetJobs(\n    $assetId: Int\n    $customerId: Int\n    $endDate: timestamptz\n    $number: String\n    $meta: jsonb\n    $limit: Int\n    $locationId: Int\n    $managerId: Int\n    $offset: Int\n    $orderBy: Job_order_by!\n    $paid: Boolean\n    $type: [String!]\n    $q: String\n    $startDate: timestamptz\n    $status: [String!]\n    $supplierId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n            ]\n          }\n          {\n            _or: [\n              { number: { _eq: $number } }\n              { meta: { _contains: $meta } }\n              { Invoices: { invoiceNumber: { _eq: $number } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        assetId: { _eq: $assetId }\n        status: { _in: $status }\n        type: { _in: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        paid: { _eq: $paid }\n        supplierId: { _eq: $supplierId }\n      }\n      order_by: [$orderBy]\n    ) {\n      Assets(where: { entity: { _eq: "Job" } }) {\n        id\n        assetId\n      }\n      ...JobFields\n      ...JobAdminFields\n      invoices: Invoices {\n        invoiceNumber\n      }\n      admin: Admin {\n        id\n        name\n      }\n      customer: Customer {\n        ...AccountFields\n      }\n      location: Location {\n        id\n        name\n      }\n      manager: Manager {\n        ...UserFields\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        id\n        name\n      }\n      supplier: Supplier {\n        ...AccountFields\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n            ]\n          }\n          {\n            _or: [\n              { number: { _eq: $number } }\n              { meta: { _contains: $meta } }\n              { Invoices: { invoiceNumber: { _eq: $number } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        assetId: { _eq: $assetId }\n        status: { _in: $status }\n        type: { _in: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        supplierId: { _eq: $supplierId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n  ',"\n  ","\n  ","\n  ","\n  ","\n"])),p.z,_.WW,m.aL,m.wd,f.Px),g=(0,l.Ps)(o||(o=(0,d.Z)(['\n  query GetDashboardList(\n    $accountId: Int\n    $customerId: Int\n    $supplierId: Int\n    $locationId: Int\n    $managerId: Int\n    $adminId: Int\n    $startDate: timestamptz\n    $endDate: timestamptz\n    $asAt: timestamptz\n    $jobHoldReasonId: Int\n    $limit: Int\n    $monthStart: timestamptz\n    $offset: Int\n    $orderBy: dashboard_home_details_order_by!\n    $q: String\n    $tileName: String\n    $dayStart: timestamptz\n    $userId: Int\n    $yearStart: timestamptz\n    $number: String\n    $status: [String!]\n    $type: String\n  ) {\n    jobs: getDashboard_HomeTile_Details(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        number: { _eq: $number }\n        status: { _in: $status }\n        type: { _eq: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        supplierId: { _eq: $supplierId }\n      }\n      order_by: [$orderBy]\n      limit: $limit\n      offset: $offset\n    ) {\n      Assets(where: { entity: { _eq: "Job" } }) {\n        id\n        assetId\n        __typename\n      }\n      ...JobFields\n      ...JobAdminFields\n      admin: Admin {\n        id\n        name\n        __typename\n      }\n      customer: Customer {\n        ...AccountFields\n        __typename\n      }\n      location: Location {\n        id\n        name\n        __typename\n      }\n      job: Job {\n        status\n      }\n      manager: Manager {\n        ...UserFields\n        __typename\n      }\n      service: Service {\n        id\n        name\n        __typename\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n          __typename\n        }\n        __typename\n      }\n      sla: SLA {\n        id\n        name\n        __typename\n      }\n      supplier: Supplier {\n        ...AccountFields\n        __typename\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n          __typename\n        }\n        __typename\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n          __typename\n        }\n        __typename\n      }\n      id: jobId\n      number\n      # location\n      priority\n      scheduledAt\n      assignedTo\n      jobHoldReason\n      locationId\n      meta\n      managerId\n      description\n      customerName\n      customerId\n      reference\n      serviceName\n      status\n      supplierId\n      supplierName\n      timingStart\n      type\n      quoteNumber\n      quoteDue\n      createdAt\n    }\n    meta: getDashboard_HomeTile_Details_aggregate(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n        ]\n        number: { _eq: $number }\n        status: { _in: $status }\n        type: { _eq: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        supplierId: { _eq: $supplierId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n        __typename\n      }\n      __typename\n    }\n  }\n  ',"\n  ","\n  ","\n  ","\n  ","\n"])),p.z,_.WW,m.aL,m.wd,f.Px),I=(0,l.Ps)(s||(s=(0,d.Z)(['\n  query GetDashboardList(\n    $accountId: Int\n    $adminId: Int\n    $asAt: timestamptz\n    $jobHoldReasonId: Int\n    $limit: Int\n    $monthStart: timestamptz\n    $offset: Int\n    $orderBy: dashboard_home_details_order_by!\n    $q: String\n    $tileName: String\n    $dayStart: timestamptz\n    $userId: Int\n    $yearStart: timestamptz\n  ) {\n    jobs: getDashboard_HomeTile_Details(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n        ]\n      }\n      order_by: [$orderBy]\n      limit: $limit\n      offset: $offset\n    ) {\n      Assets(where: { entity: { _eq: "Job" } }) {\n        id\n        assetId\n        __typename\n      }\n      ...JobFields\n      ...JobAdminFields\n      admin: Admin {\n        id\n        name\n        __typename\n      }\n      customer: Customer {\n        ...AccountFields\n        __typename\n      }\n      location: Location {\n        id\n        name\n        __typename\n      }\n      manager: Manager {\n        ...UserFields\n        __typename\n      }\n      service: Service {\n        id\n        name\n        __typename\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n          __typename\n        }\n        __typename\n      }\n      sla: SLA {\n        id\n        name\n        __typename\n      }\n      supplier: Supplier {\n        ...AccountFields\n        __typename\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n          __typename\n        }\n        __typename\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n          __typename\n        }\n        __typename\n      }\n      id: jobId\n      number\n      # location\n      priority\n      scheduledAt\n      assignedTo\n      jobHoldReason\n      locationId\n      meta\n      managerId\n      description\n      customerName\n      customerId\n      reference\n      serviceName\n      status\n      supplierId\n      supplierName\n      timingStart\n      type\n      quoteNumber\n      quoteDue\n      createdAt\n    }\n    meta: getDashboard_HomeTile_Details_aggregate(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n        ]\n      }\n    ) {\n      aggregate {\n        totalCount: count\n        __typename\n      }\n      __typename\n    }\n  }\n  ',"\n  ","\n  ","\n  ","\n  ","\n"])),p.z,_.WW,m.aL,m.wd,f.Px),v=t(83894),h=t(23855),q=t(55148);function S(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function j(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?S(Object(t),!0).forEach((function(e){(0,c.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):S(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var x=function(n,e,t,r,i){var a=t.hasOwnProperty("tileName");if(!n.isChangedStatusSelect)switch(t.show){case"offered":n.status=["offered"];break;case"current":n.status=["accepted","inProgress"];break;case"openJobs":n.status=["raised","pending"];break;case"raised":n.status=["raised"];break;case"pending":n.status=["pending"];break;case"past":n.status=["completed","inDispute","disputeResolved","reportSent","invoiceSent","customerPaid","supplierPaid","closed"];break;default:n.status=t.show}var o=n.limit,s=n.offset,u=n.orderBy,c=n.q,d=n.status,l=n.startDate,m=n.endDate,p=n.type,_=n.number,f=n.userId;if(a)return{query:i?g:I,variables:j({accountId:["supplier","customer"].includes(e.accountType)?e.accountId:null,userId:null,currentUserId:null===e||void 0===e?void 0:e.id,asAt:(0,v.Z)((0,h.Z)(r.asAt)),tileName:null===t||void 0===t?void 0:t.tileName,orderBy:u,monthStart:r.monthStart,dayStart:r.todayStart,yearStart:r.yearStart,adminId:null===e||void 0===e?void 0:e.adminId},n)};switch(e.accountType){case"supplier":return{query:$,variables:{limit:o,offset:s,orderBy:u,q:c,status:d,startDate:l,endDate:m,type:p,number:_,userId:f}};case"customer":return{query:b,variables:{limit:o,offset:s,orderBy:u,q:c,status:d,type:p,number:_,startDate:l,endDate:m}};case"tenant":return{query:b,variables:{limit:o,offset:s,orderBy:u,q:c,status:d,type:p,startDate:l,endDate:m}};default:return{query:y,variables:j({},n)}}},k=function(n){var e=["locationId","customerId","assetId"],t="";return n&&n.constructor===Object&&Object.keys(n).length>0&&(t="?",Object.entries(n).map((function(n){var r=(0,u.Z)(n,2),i=r[0],a=r[1];return a&&e.includes(i)&&(t+="".concat([i],"=").concat(a,"&")),0})),t=(t=t.substring(0,t.length-1)).replace("customerId","accountId")),t},O=function(n){var e=["completed","inDispute","disputeResolved","reportSent","invoiceSent","customerPaid","supplierPaid","closed"];switch(n){case"offered":return q.cj.filter((function(n){return"offered"===n.value}));case"current":return q.cj.filter((function(n){var e=n.value;return"accepted"===e||"inProgress"===e}));case"openJobs":return q.cj.filter((function(n){var e=n.value;return"raised"===e||"pending"===e}));case"raised":return q.cj.filter((function(n){return"raised"===n.value}));case"pending":return q.cj.filter((function(n){return"pending"===n.value}));case"past":return q.cj.filter((function(n){var t=n.value;return e.includes(t)}));default:return q.cj}}},2640:function(n,e,t){"use strict";t.d(e,{F:function(){return N}});var r=t(80318),i=t(92809),a=t(67294),o=t(93633),s=t(38460),u=t(11163),c=t(57460),d=t.n(c),l=t(24237),m=t(18944),p=t(29444),_=t(26398),f=t(91126),$=t(80284),b=t(22796),y=t(14347),g=t(55657),I=t(81185),v=t(42772),h=t(1071),q=t(18862),S=function(n,e,t){return n.map((function(n){var r,i,a,o,s,u,c,d,l,m,p,_,f,$,b,y,g=n.manager?"".concat(n.manager.nameFirst," ").concat(n.manager.nameLast):"Unassigned",I=n.scheduledAt?(0,q.Z)(n.scheduledAt,!0):(0,q.Z)(n.timingStart,!0),v=e&&(null===n||void 0===n?void 0:n.supplierOffers.length)>0?null===n||void 0===n||null===(r=n.supplierOffers[0].supplier)||void 0===r?void 0:r.name:null===n||void 0===n?void 0:n.supplierOffers;return{id:n.id,type:n.type,number:n.number,invoiceNumber:null===(i=n.meta)||void 0===i||null===(a=i.invoiceNumbers)||void 0===a?void 0:a[0],creator:null===(o=n.timings)||void 0===o||null===(s=o[0])||void 0===s||null===(u=s.user)||void 0===u?void 0:u.fullName,propertyId:null===(c=n.location)||void 0===c?void 0:c.id,managerId:null===(d=n.manager)||void 0===d?void 0:d.id,customerId:null===(l=n.customer)||void 0===l?void 0:l.id,supplierId:n.supplier?n.supplier.id:"",priority:(null===(m=n.sla)||void 0===m?void 0:m.name)||"-",service:(null===(p=n.service)||void 0===p?void 0:p.name)||"-",description:(null===(_=n.shortJobDesc)||void 0===_||null===(f=_[0])||void 0===f?void 0:f.taxonomy.name)||"-",manager:g,location:(null===($=n.location)||void 0===$?void 0:$.name)||"-",customer:(null===(b=n.customer)||void 0===b?void 0:b.name)||"-",supplier:n.supplier?n.supplier.name:"-",scheduleDate:I,date:(0,q.Z)(n.createdAt),status:null!==n&&void 0!==n&&n.job?null===(y=n.job)||void 0===y?void 0:y.status:n.status,offerTo:t?v:"",actions:""}}))},j=t(99362),x=t(68343),k=t(65570),O=t(1323),A=t(78586),D=t(49705),w=t(85893);function Z(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function P(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Z(Object(t),!0).forEach((function(e){(0,i.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Z(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var T="/dashboard/issues/",N=function(n){var e,t,i,c=n.filters,l=n.isJobsAsset,q=n.initialFilters,Z=n.jobType,N=n.workorderVisibility,F=(0,A.q)(),C=(0,u.useRouter)().query,J=(0,a.useState)(!1),L=J[0],E=J[1],R=(0,O.x)(),z=R.hasRole,B=R.user,H=null===(e=F.admin.jobSetting)||void 0===e?void 0:e.jobNumberPrefix,M=null===(t=F.admin.jobSetting)||void 0===t?void 0:t.jobNumberSuffix,G=(0,D.x)({filters:c}),V=G.initialData,W=G.ref,X=l?{limit:100}:{},Q=V.status||(null===q||void 0===q?void 0:q.status),K=new Date(C.asAt)||new Date,Y=(0,j.X)(K),nn=(0,a.useState)({monthStart:Y.monthStart,todayEnd:Y.todayEnd,todayStart:Y.todayStart,yearStart:Y.yearStart,asAt:C.asAt}),en=nn[0],tn=nn[1];(0,a.useEffect)((function(){var n=Y.monthStart,e=Y.todayEnd,t=Y.todayStart,r=Y.yearStart;tn({monthStart:n,todayEnd:e,todayStart:t,yearStart:r,asAt:C.asAt})}),[null===c||void 0===c?void 0:c.asAt]);var rn=z("admin"),an=(0,h.fI)(P(P(P({assetId:null},V),X),{},{locationId:c.locationId||null,managerId:c.managerId?B.id:null,number:V.id?String(V.id):null,status:Q,type:Z}),B,C,en,rn),on=an.query,sn=an.variables,un=(0,o.a)(on,{variables:sn}),cn=un.data,dn=(cn=void 0===cn?{jobs:[],meta:{aggregate:{totalCount:0}}}:cn).jobs,ln=cn.meta,mn=un.loading,pn=un.refetch,_n=(0,s.t)(on,{variables:P(P({},sn),{},{limit:(null===ln||void 0===ln||null===(i=ln.aggregate)||void 0===i?void 0:i.totalCount)||150}),onCompleted:function(n){var e=n.jobs;if(L){var t=d().unparse(S(e,!0,rn)),r="data:application/octet-stream,"+encodeURIComponent(t);(0,v.S)(r,"reactiveJobs.csv"),E(!1)}},skip:!0}),fn=(0,r.Z)(_n,2),$n=fn[0],bn=fn[1].loading,yn=void 0===bn||bn,gn=[{hidden:!0},{hidden:!0},{hidden:!0},{formatter:function(n){var e=n.row;return(0,w.jsx)(k.D,{id:e.id,number:e.number,invoiceNumber:e.invoiceNumber,openCanvas:!0,type:e.type,numberPrefix:H,numberSuffix:M})},sortable:!0,sortName:"number",text:"Job ID"},{text:"Creator"},{hidden:!0},{hidden:!0},{hidden:!0},{sortable:!0,sortName:'{"SLA": {"name": "ORDER"}}',text:"Priority"},{formatter:function(n){var e=n.row;return(0,w.jsx)(w.Fragment,{children:(0,w.jsx)(m.Z,{size:"sm",children:e.service})})},sortable:!0,sortName:'{"Service": {"name": "ORDER"}}',text:"Service"},{formatter:function(n){var e=n.row;return(0,w.jsx)(w.Fragment,{children:(0,w.jsx)(m.Z,{size:"sm",children:e.type})})},text:"Type"},{formatter:function(n){var e=n.row;return(0,w.jsx)(w.Fragment,{children:(0,w.jsx)(m.Z,{size:"sm",children:e.description})})},text:"Description"},{hidden:!rn,formatter:(0,p.Z)("/dashboard/users/view","managerId","manager"),sortable:!0,sortName:'{"Manager": {"nameFirst": "ORDER"}}',text:"Assigned to"},{formatter:function(n){var e=n.row;return(0,w.jsxs)(w.Fragment,{children:[rn&&(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)(_.Z,{to:"/dashboard/customers/view?id=".concat(e.customerId),children:e.customer}),(0,w.jsx)("br",{})]}),z("supplier")?e.location:(0,w.jsx)(_.Z,{to:"/dashboard/properties/view?id=".concat(e.propertyId),children:e.location})]})},sortable:!0,sortName:'{"Customer": {"name": "ORDER"}}',text:z(["customer","supplier"])?"Location":"Customer"},{hidden:!0},{hidden:!rn,formatter:(0,p.Z)("/dashboard/suppliers/view","supplierId","supplier"),sortable:!0,sortName:'{"Supplier": {"name": "ORDER"}}',text:"Supplier"},{text:"Scheduled"},{sortable:!0,sortName:"createdAt",text:"Created"},{sortable:!0,sortName:"status",formatter:function(n){var e,t=n.row;return(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)(x.B,{value:t.status}),rn&&"offered"===t.status&&t.offerTo&&t.offerTo.length>0&&(0,w.jsx)(U,{onClick:function(n){var e;return function(n,e){n.stopPropagation(),u.default.push("/dashboard/suppliers/view?id=".concat(e))}(n,null===(e=t.offerTo[0].supplier)||void 0===e?void 0:e.id)},children:null===(e=t.offerTo[0].supplier)||void 0===e?void 0:e.name})]})},text:"Status"},{hidden:!0},{hidden:!rn,formatter:f.Z,formatterData:function(n){return[{context:"secondary",icon:["fas","edit"],onClick:function(e,t){return n(t)},tooltip:"Edit"},{context:"secondary",icon:["fas","receipt"],onClick:function(n,e){return u.default.push("/dashboard/issues/view?id=".concat(e.number))},tooltip:"info"}]}((function(n){u.default.push("".concat(T,"manage?id=").concat(n.number))})),text:"Actions"}];return(0,w.jsx)($.Z,{fitParentHeight:!0,open:!0,title:"Work Orders",toolbar:(0,w.jsxs)(w.Fragment,{children:[(0,w.jsx)(b.Z,{marginRight:"xs",children:(0,w.jsx)(y.Z,{content:"Export to excel",context:"secondary",size:"sm",disabled:yn,onClick:function(n){n.stopPropagation(),$n(),E(!0)},children:(0,w.jsx)(g.Z,{context:"white",icon:"file-csv",size:"lg"})})}),N&&"ppm"!==Z&&(0,w.jsx)(y.Z,{content:"Create Work Order",context:"secondary",size:"sm",onClick:function(n){n.stopPropagation();var e=(0,h.Uu)(c);u.default.push("".concat(T,"manage").concat(e))}})]}),children:(0,w.jsx)(I.t,{columns:gn,isResetTable:null===C||void 0===C?void 0:C.show,loading:mn,meta:!l&&ln,ref:W,refetch:pn,rows:function(){var n=dn;return l&&(n=n.filter((function(n,e){var t;return(null===(t=n.Assets)||void 0===t?void 0:t.find((function(n){return n.assetId===(null===c||void 0===c?void 0:c.assetId)})))&&e<10}))),S(n,!1,rn)}()})})},U=l.ZP.button.withConfig({displayName:"table__LinkWrapper",componentId:"sc-1hyt731-0"})(["cursor:pointer;margin:2px 0px;padding:8px 5px;color:rgb(41,41,204);background-color:transparent;border:none;&:hover{background-color:#dddddd;border-radius:5px;}"]);N.defaultProps={filters:{assetId:null,managerId:null},isJobsAsset:!1}},27834:function(n,e,t){"use strict";t.d(e,{I4:function(){return v},AX:function(){return h},fo:function(){return q},JA:function(){return S},WF:function(){return j},Px:function(){return x},a8:function(){return k},r1:function(){return O},MT:function(){return A},nE:function(){return D},nh:function(){return w},$E:function(){return Z},uz:function(){return P},ge:function(){return T},ZA:function(){return N},tW:function(){return U}});var r,i,a,o,s,u,c,d,l,m,p,_,f,$,b,y,g=t(52209),I=t(54397),v=(0,I.Ps)(r||(r=(0,g.Z)(["\n  mutation InsertAccountUser($objects: [Account_User_insert_input!]!) {\n    insert_Account_User(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]))),h=(0,I.Ps)(i||(i=(0,g.Z)(["\n  mutation UpdateUser(\n    $id: Int!\n    $accountUserId: Int!\n    $accountUserChanges: Account_User_set_input\n    $changes: User_set_input\n    $updateAccountUser: Boolean!\n  ) {\n    update_Account_User_by_pk(pk_columns: { id: $accountUserId }, _set: $accountUserChanges)\n      @include(if: $updateAccountUser) {\n      id\n    }\n    update_User_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n    }\n  }\n"]))),q=(0,I.Ps)(a||(a=(0,g.Z)(["\n  query GetUsers(\n    $accountId: Int\n    $accountType: String\n    $date: timestamptz\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: User_order_by!\n    $status: String\n  ) {\n    users: User(\n      limit: $limit\n      offset: $offset\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [\n          { email: { _ilike: $q } }\n          { nameFirst: { _ilike: $q } }\n          { nameLast: { _ilike: $q } }\n        ]\n        status: { _eq: $status }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n        userLocations: User_Account_Locations {\n          accountLocationId\n        }\n      }\n    }\n    meta: User_aggregate(\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n        status: { _eq: $status }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n"]))),S=(0,I.Ps)(o||(o=(0,g.Z)(["\n  query GetUser($id: Int!) {\n    user: User_by_pk(id: $id) {\n      id\n      fullName\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      media: Media {\n        id\n        medium: Medium {\n          id\n          category\n          filename\n          meta\n          type\n        }\n      }\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n      }\n    }\n  }\n"]))),j=(0,I.Ps)(s||(s=(0,g.Z)(["\n  query CheckDuplicateEmail($email: String!) {\n    users: User_public(where: { email: { _eq: $email } }) {\n      id\n      nameFirst\n      nameLast\n      email\n      phone\n    }\n  }\n"]))),x=(0,I.Ps)(u||(u=(0,g.Z)(["\n  fragment UserFields on User {\n    id\n    email\n    nameFirst\n    nameLast\n    fullName\n    phone\n    status\n  }\n"]))),k=(0,I.Ps)(c||(c=(0,g.Z)(["\n  mutation SendGoogleAuthCode($code: String!, $id: Int!, $type: String!) {\n    createGoogleToken(code: $code, id: $id, type: $type) {\n      success\n      tokens\n      error\n    }\n  }\n"]))),O=(0,I.Ps)(d||(d=(0,g.Z)(["\n  mutation GenerateMSURL($type: String!, $id: Int!) {\n    genenrateMSURL(id: $id, type: $type) {\n      url\n    }\n  }\n"]))),A=(0,I.Ps)(l||(l=(0,g.Z)(["\n  mutation signoutMS($id: Int!, $type: String!, $email: String!) {\n    signoutMS(id: $id, type: $type, email: $email) {\n      error\n      msId\n      success\n    }\n  }\n"]))),D=(0,I.Ps)(m||(m=(0,g.Z)(["\n  query getAccountMeta($id: Int!) {\n    account: Account_by_pk(id: $id) {\n      meta\n    }\n  }\n"]))),w=(0,I.Ps)(p||(p=(0,g.Z)(["\n  query user($id: Int!) {\n    user: User_by_pk(id: $id) {\n      meta\n    }\n  }\n"]))),Z=(0,I.Ps)(_||(_=(0,g.Z)(["\n  mutation updateAccount($accountId: Int!, $set: Account_set_input!) {\n    update_Account_by_pk(pk_columns: { id: $accountId }, _set: $set) {\n      id\n    }\n  }\n"]))),P=(0,I.Ps)(f||(f=(0,g.Z)(["\n  mutation updateUserMeta($userId: Int!, $meta: jsonb!) {\n    update_User_by_pk(pk_columns: { id: $userId }, _set: { meta: $meta }) {\n      id\n      meta\n    }\n  }\n"]))),T=(0,I.Ps)($||($=(0,g.Z)(['\n  query userDevices($accountId: Int!) {\n    users: User(\n      where: {\n        Account_Users: { accountId: { _eq: $accountId }, status: { _eq: "active" } }\n        UserDevices: { status: { _eq: "active" } }\n        status: { _eq: "active" }\n      }\n    ) {\n      id\n      fullName\n      devices: UserDevices(\n        order_by: { updatedAt: desc_nulls_last }\n        where: { status: { _eq: "active" } }\n        limit: 1\n      ) {\n        id\n        playerId\n      }\n    }\n  }\n']))),N=(0,I.Ps)(b||(b=(0,g.Z)(['\n  query GetAccountLocations($accountId: Int, $limit: Int, $offset: Int) {\n    location: Location(\n      offset: $offset\n      limit: $limit\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      id\n      name\n      accountLocations: Account_Locations {\n        id\n      }\n      addresses: Addresses(where: { entity: { _eq: "Location" }, registered: { _eq: true } }) {\n        id\n        status\n        address: Address {\n          id\n          name\n          addressLine1\n          postCode\n        }\n      }\n    }\n    meta: Location_aggregate(\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),U=(0,I.Ps)(y||(y=(0,g.Z)(["\n  mutation InsertUserAccountLocations(\n    $accountUserId: Int!\n    $objects: [User_Account_Location_insert_input!]!\n  ) {\n    delete_User_Account_Location(where: { accountUserId: { _eq: $accountUserId } }) {\n      affected_rows\n    }\n    insert_User_Account_Location(objects: $objects) {\n      affected_rows\n      returning {\n        id\n      }\n    }\n  }\n"])))},42772:function(n,e,t){"use strict";t.d(e,{S:function(){return r}});var r=function(n,e){var t=document.createElement("a");"string"===typeof t.download?(document.body.appendChild(t),t.download=e,t.href=n,t.click(),document.body.removeChild(t)):location.replace(n)}},99362:function(n,e,t){"use strict";t.d(e,{X:function(){return s}});var r=t(43703),i=t(69119),a=t(83894),o=t(38148),s=function(n){var e=(0,r.Z)(n),t=(0,i.Z)(n);return{monthStart:e,todayEnd:(0,a.Z)(n),todayStart:t,yearStart:(0,o.Z)(n)}}},70316:function(n,e,t){"use strict";t.d(e,{J:function(){return O}});var r=t(92809),i=t(80318),a=t(10219),o=t(11163),s=t(67294),u=t(78215),c=t(2356),d=t(42283),l=t(97202),m=t(80284),p=t(65375),_=t(10973),f=t(14347),$=t(66805),b=t(69119),y=t(23855),g=t(83894);function I(n,e,t){var r=(0,s.useState)((function(){if(JSON.parse(window.sessionStorage.getItem(n))&&!Object.values(JSON.parse(window.sessionStorage[n])).includes(t))return e;try{var r=JSON.parse(window.sessionStorage.getItem(n));return r&&(r.startDate=r.startDate?(0,b.Z)((0,y.Z)(r.startDate)):null,r.endDate=r.endDate?(0,g.Z)((0,y.Z)(r.endDate)):null),r||e}catch(i){return console.log(i),e}})),i=r[0],a=r[1];return[i,function(e){try{var t=e instanceof Function?e(i):e;a(t),window.sessionStorage.setItem(n,JSON.stringify(t))}catch(r){console.log(r)}}]}var v=t(85893);function h(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function q(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?h(Object(t),!0).forEach((function(e){(0,r.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):h(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var S=function(n){var e=n.initialValues,t=n.renderFilters,r=n.setFilters,a=n.lastQuery,o=n.filters,b=e.filterType,y=I("form_data",e,b),g=(0,i.Z)(y,2),h=g[0],S=g[1],j=(0,d.cI)({defaultValues:h||e}),x=j.control,k=j.errors,O=j.handleSubmit,A=j.register,D=j.reset,w=j.watch,Z=j.setValue,P=q(q({},w()),{},{filterType:b});(0,s.useEffect)((function(){D(P)}),[D]),(0,s.useEffect)((function(){S(P)}),[o]);var T=function(n){var t=n.query;if(t!==a){var i={q:"%".concat(t,"%")||0},o=/^\d+$/.test(t);"id"in e&&(i.id=o?Number(t):null),"meta"in e&&(i.meta=o?{invoiceNumbers:[t]}:null),"jobNumber"in e&&(i.jobNumber=o?String(t):null,i.invoiceNumber=o?Number(t):null),(i.id||i.meta||i.jobNumber)&&(i.q=null),r((function(n){return q(q({},n),i)}))}};return(0,v.jsx)(l.Z,{handleSubmit:O(T),children:(0,v.jsxs)(m.Z,{title:"Filters",children:[(0,v.jsxs)(u.Z,{children:[(0,v.jsx)(c.Z,{sm:12,lg:12,children:(0,v.jsx)(p.Z,{label:"",children:(0,v.jsx)(_.Z,{errors:k,label:"Search",name:"email",placeholder:"Search...",prependSearchIcon:!0,register:A,type:"search"})})}),(0,v.jsx)(c.Z,{sm:12,lg:12,children:t({control:x,errors:k,initialValues:e,register:A,setFilters:r,watch:w,setValue:Z,reset:D})})]}),(0,v.jsx)($.H,{content:"Search",context:"secondary",handleClick:T,type:"submit",children:(0,v.jsx)(f.Z,{content:"Clear",context:"danger",onClick:function(n){Object.keys(e).map((function(n){return Z(n,null)})),r(e),D(e),T("")},size:"sm"})})]})})},j=["FiltersComp","initialFilters","TableComp"];function x(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function k(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?x(Object(t),!0).forEach((function(e){(0,r.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):x(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var O=function(n){var e=n.FiltersComp,t=n.initialFilters,r=n.TableComp,d=(0,a.Z)(n,j),l=I("filters",t,t.filterType),m=(0,i.Z)(l,2),p=m[0],_=m[1],f=(0,s.useState)(p||t),$=f[0],b=f[1],y=(0,o.useRouter)().query.show;return(0,s.useEffect)((function(){_($)}),[$]),(0,v.jsx)(u.Z,{children:(0,v.jsxs)(c.Z,{sm:12,lg:12,children:[(0,v.jsx)(S,{initialValues:t,renderFilters:function(n){return(0,v.jsx)(e,k(k(k({},n),d),{},{show:y}))},setFilters:b,filters:$}),(0,v.jsx)(r,k({filters:$,initialFilters:t},d))]})})}},13787:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return v}});var r=t(92809),i=t(11163),a=t(66918),o=t(67294),s=t(69119),u=t(23855),c=t(83894),d=t(42593),l=t(70316),m=t(2640),p=t(24019),_=t(85893),f={customerId:null,endDate:null,id:null,meta:null,locationId:null,managerId:null,q:null,startDate:null,status:null,supplierId:null,userId:null,isChangedStatusSelect:!1,filterType:"reactive_issues_table"},$=function(n){var e=n.endDate,t=n.q,r=n.startDate,i=(0,o.useContext)(d.Z).hasRole;return f.startDate=r?(0,s.Z)((0,u.Z)(r)):null,f.endDate=e?(0,c.Z)((0,u.Z)(e)):null,f.q=t?"%".concat(t,"%"):null,(0,_.jsx)(l.J,{FiltersComp:p.h,initialFilters:f,TableComp:m.F,workorderVisibility:i(["admin","customer"]),jobType:"reactive"})},b={customerId:null,endDate:null,id:null,meta:null,locationId:null,managerId:null,q:null,startDate:null,status:null,supplierId:null,userId:null,isChangedStatusSelect:!1,filterType:"ppm_issues_table"},y=function(n){var e=n.endDate,t=n.q,r=n.startDate,i=(0,o.useContext)(d.Z).hasRole;return b.startDate=r?(0,s.Z)((0,u.Z)(r)):null,b.endDate=e?(0,c.Z)((0,u.Z)(e)):null,b.q=t?"%".concat(t,"%"):null,(0,_.jsx)(l.J,{FiltersComp:p.h,initialFilters:b,TableComp:m.F,workorderVisibility:i(["admin","customer"]),jobType:"ppm"})};function g(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function I(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?g(Object(t),!0).forEach((function(e){(0,r.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):g(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var v=function(){var n=(0,i.useRouter)().query,e="ppm"===n.type;return(0,_.jsx)(a.Z,{pageHeading:{heading:e?"Find PPM":"Work Orders"},View:e?(0,_.jsx)(y,I({},n)):(0,_.jsx)($,I({},n))})}},24406:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/dashboard/issues",function(){return t(13787)}])}},function(n){n.O(0,[367,284,4195,5312,7287,2002,3086,7134,3486,9082,3515,4712,1265,6996,9666,4177,7431,2148,5146,899,3016,9774,2888,179],(function(){return e=24406,n(n.s=e);var e}));var e=n.O();_N_E=e}]);