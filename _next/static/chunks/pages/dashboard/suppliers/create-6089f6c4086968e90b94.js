(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8360],{57831:function(n,t,e){"use strict";e.d(t,{f:function(){return s}});var r=e(19501),s=function(){return(0,r.Ry)().shape({managerSelected:(0,r.Ry)().required(),name:(0,r.Z_)().required(),website:(0,r.Z_)(),companyNumber:(0,r.Z_)(),vatId:(0,r.Z_)(),status:(0,r.Z_)().oneOf(["active","inactive"]).required(),typeOfOrganisation:(0,r.Z_)(),quotingEmail:(0,r.Z_)(),utrNumber:(0,r.Z_)(),cisRegistered:(0,r.Z_)(),contactUseremail:(0,r.Z_)().when("contactUser",{is:"true",then:(0,r.Z_)().required()}),contactUsernameFirst:(0,r.Z_)().when("contactUser",{is:"true",then:(0,r.Z_)().required()}),contactUsernameLast:(0,r.Z_)().when("contactUser",{is:"true",then:(0,r.Z_)().required()}),contactUserphone:(0,r.Z_)().when("contactUser",{is:"true",then:(0,r.Z_)()}),contactUserstatus:(0,r.Z_)().when("contactUser",{is:"true",then:(0,r.Z_)().required()})})}},23154:function(n,t,e){"use strict";e.d(t,{E:function(){return u}});var r=e(30266),s=e(64687),a=e.n(s),c=e(27834),u=function(){var n=(0,r.Z)(a().mark((function n(t,e){var r,s,u,i=arguments;return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return r=i.length>2&&void 0!==i[2]&&i[2],n.prev=1,n.next=4,t.query({query:c.WF,variables:{email:e}});case 4:if(s=n.sent,!((u=s.data.users)&&u.length>0)){n.next=8;break}return n.abrupt("return",!!r&&u[0]);case 8:return n.abrupt("return",!r||null);case 11:return n.prev=11,n.t0=n.catch(1),n.abrupt("return",!0);case 14:case"end":return n.stop()}}),n,null,[[1,11]])})));return function(t,e){return n.apply(this,arguments)}}()},27834:function(n,t,e){"use strict";e.d(t,{I4:function(){return I},AX:function(){return A},fo:function(){return q},JA:function(){return Z},WF:function(){return b},Px:function(){return v},a8:function(){return w},r1:function(){return L},MT:function(){return k},nE:function(){return P},nh:function(){return S},$E:function(){return N},uz:function(){return C},ge:function(){return F},ZA:function(){return E},tW:function(){return x}});var r,s,a,c,u,i,o,d,_,m,p,l,$,f,U,g,y=e(52209),h=e(54397),I=(0,h.Ps)(r||(r=(0,y.Z)(["\n  mutation InsertAccountUser($objects: [Account_User_insert_input!]!) {\n    insert_Account_User(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]))),A=(0,h.Ps)(s||(s=(0,y.Z)(["\n  mutation UpdateUser(\n    $id: Int!\n    $accountUserId: Int!\n    $accountUserChanges: Account_User_set_input\n    $changes: User_set_input\n    $updateAccountUser: Boolean!\n  ) {\n    update_Account_User_by_pk(pk_columns: { id: $accountUserId }, _set: $accountUserChanges)\n      @include(if: $updateAccountUser) {\n      id\n    }\n    update_User_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n    }\n  }\n"]))),q=(0,h.Ps)(a||(a=(0,y.Z)(["\n  query GetUsers(\n    $accountId: Int\n    $accountType: String\n    $date: timestamptz\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: User_order_by!\n    $status: String\n  ) {\n    users: User(\n      limit: $limit\n      offset: $offset\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [\n          { email: { _ilike: $q } }\n          { nameFirst: { _ilike: $q } }\n          { nameLast: { _ilike: $q } }\n        ]\n        status: { _eq: $status }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n        userLocations: User_Account_Locations {\n          accountLocationId\n        }\n      }\n    }\n    meta: User_aggregate(\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n        status: { _eq: $status }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n"]))),Z=(0,h.Ps)(c||(c=(0,y.Z)(["\n  query GetUser($id: Int!) {\n    user: User_by_pk(id: $id) {\n      id\n      fullName\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      media: Media {\n        id\n        medium: Medium {\n          id\n          category\n          filename\n          meta\n          type\n        }\n      }\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n      }\n    }\n  }\n"]))),b=(0,h.Ps)(u||(u=(0,y.Z)(["\n  query CheckDuplicateEmail($email: String!) {\n    users: User_public(where: { email: { _eq: $email } }) {\n      id\n      nameFirst\n      nameLast\n      email\n      phone\n    }\n  }\n"]))),v=(0,h.Ps)(i||(i=(0,y.Z)(["\n  fragment UserFields on User {\n    id\n    email\n    nameFirst\n    nameLast\n    fullName\n    phone\n    status\n  }\n"]))),w=(0,h.Ps)(o||(o=(0,y.Z)(["\n  mutation SendGoogleAuthCode($code: String!, $id: Int!, $type: String!) {\n    createGoogleToken(code: $code, id: $id, type: $type) {\n      success\n      tokens\n      error\n    }\n  }\n"]))),L=(0,h.Ps)(d||(d=(0,y.Z)(["\n  mutation GenerateMSURL($type: String!, $id: Int!) {\n    genenrateMSURL(id: $id, type: $type) {\n      url\n    }\n  }\n"]))),k=(0,h.Ps)(_||(_=(0,y.Z)(["\n  mutation signoutMS($id: Int!, $type: String!, $email: String!) {\n    signoutMS(id: $id, type: $type, email: $email) {\n      error\n      msId\n      success\n    }\n  }\n"]))),P=(0,h.Ps)(m||(m=(0,y.Z)(["\n  query getAccountMeta($id: Int!) {\n    account: Account_by_pk(id: $id) {\n      meta\n    }\n  }\n"]))),S=(0,h.Ps)(p||(p=(0,y.Z)(["\n  query user($id: Int!) {\n    user: User_by_pk(id: $id) {\n      meta\n    }\n  }\n"]))),N=(0,h.Ps)(l||(l=(0,y.Z)(["\n  mutation updateAccount($accountId: Int!, $set: Account_set_input!) {\n    update_Account_by_pk(pk_columns: { id: $accountId }, _set: $set) {\n      id\n    }\n  }\n"]))),C=(0,h.Ps)($||($=(0,y.Z)(["\n  mutation updateUserMeta($userId: Int!, $meta: jsonb!) {\n    update_User_by_pk(pk_columns: { id: $userId }, _set: { meta: $meta }) {\n      id\n      meta\n    }\n  }\n"]))),F=(0,h.Ps)(f||(f=(0,y.Z)(['\n  query userDevices($accountId: Int!) {\n    users: User(\n      where: {\n        Account_Users: { accountId: { _eq: $accountId }, status: { _eq: "active" } }\n        UserDevices: { status: { _eq: "active" } }\n        status: { _eq: "active" }\n      }\n    ) {\n      id\n      fullName\n      devices: UserDevices(\n        order_by: { updatedAt: desc_nulls_last }\n        where: { status: { _eq: "active" } }\n        limit: 1\n      ) {\n        id\n        playerId\n      }\n    }\n  }\n']))),E=(0,h.Ps)(U||(U=(0,y.Z)(['\n  query GetAccountLocations($accountId: Int, $limit: Int, $offset: Int) {\n    location: Location(\n      offset: $offset\n      limit: $limit\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      id\n      name\n      accountLocations: Account_Locations {\n        id\n      }\n      addresses: Addresses(where: { entity: { _eq: "Location" }, registered: { _eq: true } }) {\n        id\n        status\n        address: Address {\n          id\n          name\n          addressLine1\n          postCode\n        }\n      }\n    }\n    meta: Location_aggregate(\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),x=(0,h.Ps)(g||(g=(0,y.Z)(["\n  mutation InsertUserAccountLocations(\n    $accountUserId: Int!\n    $objects: [User_Account_Location_insert_input!]!\n  ) {\n    delete_User_Account_Location(where: { accountUserId: { _eq: $accountUserId } }) {\n      affected_rows\n    }\n    insert_User_Account_Location(objects: $objects) {\n      affected_rows\n      returning {\n        id\n      }\n    }\n  }\n"])))},99557:function(n,t,e){"use strict";e.r(t),e.d(t,{default:function(){return g}});var r=e(66918),s=e(30266),a=e(80318),c=e(64687),u=e.n(c),i=e(26075),o=e(75709),d=e(2880),_=e(11163),m=e(94543),p=e(1323),l=e(23154),$=e(57831),f=e(85893),U=function(){var n=(0,i.x)(),t=(0,p.x)().user,e=(0,o.D)(d.KQ,{onCompleted:function(n){var t=n.insert_Account.returning[0].id;_.default.push("".concat("/dashboard/suppliers/","view?id=").concat(t))}}),r=(0,a.Z)(e,1)[0],c=function(){var e=(0,s.Z)(u().mark((function e(s){var a,c;return u().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(a={managerId:s.managerSelected.value,name:s.name,website:s.website||null,companyNumber:s.companyNumber||null,vatId:s.vatId||null,status:s.status,type:"supplier"}).SupplierDetails={data:{typeOfOrganisation:s.typeOfOrganisation||null,quotingEmail:s.quotingEmail||null,utrNumber:s.utrNumber||null,cisRegistered:s.cisRegistered||null}},a.Admins={data:[{adminId:t.accountId,status:s.status}]},e.next=5,(0,l.E)(n,s.contactUseremail,!0);case 5:return c=e.sent,a.Account_Users={data:[{isContact:!0,role:"owner",status:s.contactUserstatus}]},c?a.Account_Users.data[0].userId=c.id:a.Account_Users.data[0].User={data:{nameFirst:s.contactUsernameFirst,nameLast:s.contactUsernameLast,email:s.contactUseremail,phone:s.contactUserphone,status:"active",meta:{notificationSettings:{sms:!0,email:!0,toast:!0,pushNotification:!0}}}},e.next=10,r({variables:{objects:a}});case 10:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}();return(0,f.jsx)(m.P,{onSubmit:c,schema:$.f,type:"supplier"})},g=function(){return(0,f.jsx)(r.Z,{pageHeading:{heading:"Suppliers - Create"},View:(0,f.jsx)(U,{})})}},70403:function(n,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/dashboard/suppliers/create",function(){return e(99557)}])}},function(n){n.O(0,[284,4195,5312,7287,7134,3486,9082,3515,8678,5146,5998,2880,9774,2888,179],(function(){return t=70403,n(n.s=t);var t}));var t=n.O();_N_E=t}]);