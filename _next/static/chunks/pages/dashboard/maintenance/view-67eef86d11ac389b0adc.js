(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1400],{26075:function(n,e,t){"use strict";t.d(e,{x:function(){return o}});var i=t(67294),a=t(47591),r=t(24273);function o(){var n=i.useContext((0,r.K)()).client;return __DEV__?(0,a.kG)(n,"No Apollo Client instance can be found. Please ensure that you have called `ApolloProvider` higher up in your tree."):(0,a.kG)(n,36),n}},93633:function(n,e,t){"use strict";t.d(e,{a:function(){return a}});var i=t(81322);function a(n,e){return(0,i.r)(n,e,!1)}},22796:function(n,e,t){"use strict";t.d(e,{Z:function(){return h}});var i,a,r,o,s,c=t(42982),d=t(30168),u=t(67294),m=t(45697),l=t(24237),p=t(82373),g=t(34974),y={xxsSize:"0.25rem",xsSize:"0.5rem",smSize:"0.75rem",mdSize:"1rem",lgSize:"1.5rem",xlSize:"2rem",xxlSize:"2.5rem",xxxlSize:"3rem"},b=function(n){var e="",t=0;return n.forEach((function(n){n.v&&(t++,e+="".concat(n.k,": ").concat(y[n.v+"Size"],";\n      ").concat(g.Z.desktop(i||(i=(0,d.Z)(["\n        ",": calc("," * 2);"])),n.k,y[n.v+"Size"]),"\n      "))})),0===t?(0,l.iv)(a||(a=(0,d.Z)(["\n      margin-bottom: ",";\n      ","\n    "])),y.mdSize,g.Z.desktop(r||(r=(0,d.Z)(["\n        margin-bottom: calc("," * 2);"])),y.mdSize)):(0,l.iv)(o||(o=(0,d.Z)(["\n    ","\n  "])),e)},f=function(n){var e=n.children,t=n.className,i=n.content,a=n.margin,r=n.marginX,o=n.marginY,s=n.marginTop,c=n.marginRight,d=n.marginBottom,m=n.marginLeft,l=n.padding,p=n.paddingX,g=n.paddingY,y=n.paddingTop,b=n.paddingRight,f=n.paddingBottom,h=n.paddingLeft;return u.createElement(v,{className:t,margin:a,marginX:r,marginY:o,marginTop:s,marginRight:c,marginBottom:d,marginLeft:m,padding:l,paddingX:p,paddingY:g,paddingTop:y,paddingRight:b,paddingBottom:f,paddingLeft:h},i||e)};f.displayName="Space";var v=l.ZP.div(s||(s=(0,d.Z)(["\n  margin: 0;\n  padding: 0;\n  ","\n"])),(function(n){var e=n.margin,t=n.marginBottom,i=n.marginTop,a=n.marginLeft,r=n.marginRight,o=n.marginX,s=n.marginY,d=n.padding,u=n.paddingBottom,m=n.paddingLeft,l=n.paddingRight,p=n.paddingTop,g=n.paddingX,y=n.paddingY;return b([{k:"margin",v:e},{k:"margin-bottom",v:t},{k:"margin-left",v:a},{k:"margin-right",v:r},{k:"margin-top",v:i},{k:"padding",v:d},{k:"padding-bottom",v:u},{k:"padding-left",v:m},{k:"padding-right",v:l},{k:"padding-top",v:p}].concat((0,c.Z)(s?[{k:"margin-top",v:s},{k:"margin-bottom",v:s}]:[]),(0,c.Z)(o?[{k:"margin-left",v:o},{k:"margin-right",v:o}]:[]),(0,c.Z)(y?[{k:"padding-top",v:y},{k:"padding-bottom",v:y}]:[]),(0,c.Z)(g?[{k:"padding-left",v:g},{k:"padding-right",v:g}]:[])))}));f.propTypes={children:m.node,content:m.string,margin:(0,m.oneOf)(Object.values(p.Z)),marginY:(0,m.oneOf)(Object.values(p.Z)),marginX:(0,m.oneOf)(Object.values(p.Z)),marginTop:(0,m.oneOf)(Object.values(p.Z)),marginRight:(0,m.oneOf)(Object.values(p.Z)),marginBottom:(0,m.oneOf)(Object.values(p.Z)),marginLeft:(0,m.oneOf)(Object.values(p.Z)),padding:(0,m.oneOf)(Object.values(p.Z)),paddingY:(0,m.oneOf)(Object.values(p.Z)),paddingX:(0,m.oneOf)(Object.values(p.Z)),paddingTop:(0,m.oneOf)(Object.values(p.Z)),paddingRight:(0,m.oneOf)(Object.values(p.Z)),paddingBottom:(0,m.oneOf)(Object.values(p.Z)),paddingLeft:(0,m.oneOf)(Object.values(p.Z))};var h=f},66918:function(n,e,t){"use strict";var i=t(4942),a=t(67294),r=t(45697),o=t(11570),s=t(4513),c=t(98479),d=t(97721),u=t(22796),m=t(37815);function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){(0,i.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var g=function(n){var e=n.children,t=n.meta,i=n.pageHeading,r=n.resultAlert,m=n.View,l=r.context,g=r.message,y=p(p({},{description:"Admin",path:"/",title:"Admin"}),t);return a.createElement(a.Suspense,{fallback:a.createElement(d.Z,{indicator:a.createElement(s.Z,null)})},a.createElement(c.Z,{fluid:!0,meta:y,pageHeading:i},m||e,g&&a.createElement(a.Fragment,null,a.createElement(u.Z,null),a.createElement(o.Z,{content:g,context:l}))))};g.displayName="Dashboard",g.propTypes={children:r.node,meta:(0,r.shape)({description:r.string,path:r.string,title:r.string}),pageHeading:(0,r.shape)({center:r.bool,context:(0,r.oneOf)(Object.values(m.Z)),divider:r.bool,heading:r.any.isRequired,help:r.bool,helpContent:r.any,strapline:r.string}),resultAlert:(0,r.shape)({context:r.string,message:r.string}),View:r.node},g.defaultProps={resultAlert:{context:"success",message:""}},e.Z=g},98479:function(n,e,t){"use strict";t.d(e,{Z:function(){return h}});var i=t(30168),a=t(67294),r=t(45697),o=t(24237),s=t(17743),c=t(44902),d=t(9008),u=function(n){var e=n.canonical,t=n.brand,i=n.meta,r=i.description,o=i.path,s=i.title;return a.createElement(d.default,null,a.createElement("title",null,s," | ",t),a.createElement("meta",{name:"description",content:r,key:"description"}),a.createElement("meta",{rel:"canonical",href:e+o,key:"canonical"}),a.createElement("meta",{property:"og:title",content:s}),a.createElement("meta",{property:"og:description",content:r}),a.createElement("meta",{property:"og:url",content:e+o}),a.createElement("meta",{name:"twitter:url",content:e+o}),a.createElement("meta",{name:"twitter:title",content:s}),a.createElement("meta",{name:"twitter:description",content:r}))};u.displayName="MetaHead",u.propTypes={brand:r.string.isRequired,meta:r.object.isRequired};var m,l=u,p=t(33120),g=t(22796),y=t(37815),b=t(82373),f=function(n){var e=n.children,t=n.fluid,i=n.meta,r=n.padding,o=n.pageHeading,d=(0,a.useContext)(s.Z).config,u=d.Brand,m=d.Canonical;return a.createElement(v,null,r&&a.createElement(g.Z,{paddingTop:r}),i&&a.createElement(l,{canonical:m,brand:u.name,meta:i}),a.createElement(c.Z,{fluid:t},o&&a.createElement(p.Z,o),e),r&&a.createElement(g.Z,{paddingBottom:r}))};f.displayName="Page";var v=o.ZP.div(m||(m=(0,i.Z)(["\n  background-color: ",";\n"])),(function(n){return n.theme.PAGE.backGroundColour}));f.propTypes={children:r.node.isRequired,fluid:r.bool,meta:(0,r.shape)({description:r.string.isRequired,path:r.string,title:r.string.isRequired}),padding:(0,r.oneOfType)([r.bool,(0,r.oneOf)(Object.values(b.Z))]),pageHeading:(0,r.shape)({center:r.bool,context:(0,r.oneOf)(Object.values(y.Z)),divider:r.bool,heading:r.any.isRequired,help:r.bool,helpContent:r.any,strapline:r.string})},f.defaultProps={fluid:!1,padding:"md"};var h=f},33120:function(n,e,t){"use strict";var i,a,r,o,s,c=t(30168),d=t(67294),u=t(45697),m=t(24237),l=t(77417),p=t(11417),g=t(37815),y=function(n){var e=n.center,t=n.children,i=n.context,a=n.divider,r=n.heading,o=n.help,s=n.helpContent,c=n.strapline;return d.createElement(b,{center:e,divider:a},d.createElement(f,null,d.createElement(h,{content:r,context:i,pageHeading:!0}),c&&d.createElement("div",null,c)),(t||o)&&d.createElement(v,null,t||s),a&&d.createElement(_,{size:"md"}))};y.displayName="PageHeading";var b=m.ZP.header(i||(i=(0,c.Z)(["\n  align-items: center;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  margin-bottom: ",";\n  text-align: ",";\n"])),(function(n){return!n.divider&&"2rem"}),(function(n){return n.center&&"center"})),f=m.ZP.span(a||(a=(0,c.Z)(["\n  flex: 1;\n"]))),v=m.ZP.span(r||(r=(0,c.Z)(["\n  display: flex;\n  flex: 1;\n  justify-content: flex-end;\n"]))),h=(0,m.ZP)(p.Z)(o||(o=(0,c.Z)(["\n  margin-bottom: ",";\n"])),(function(n){return n.divider?"0.5rem":"0"})),_=(0,m.ZP)(l.Z)(s||(s=(0,c.Z)(["\n  width: 100%;\n"])));y.propTypes={center:u.bool,children:u.element,context:(0,u.oneOf)(Object.values(g.Z)),divider:u.bool,heading:u.any.isRequired,help:u.bool,helpContent:u.any,strapline:u.string},y.defaultProps={center:!1,context:"primary",divider:!0,help:!1,helpContent:"",strapline:""},e.Z=y},84774:function(n,e,t){"use strict";t.d(e,{E6:function(){return _},mJ:function(){return O},qD:function(){return A},uA:function(){return I},FA:function(){return j},r2:function(){return R},k7:function(){return w},TY:function(){return P},Ab:function(){return $},bZ:function(){return Z},Tw:function(){return S},wU:function(){return x},iU:function(){return q}});var i,a,r,o,s,c,d,u,m,l,p,g,y,b,f=t(52209),v=t(54397),h=t(88402),_=(0,v.Ps)(i||(i=(0,f.Z)(['\n  query GetJob($adminId: Int!, $number: String!) {\n    job: Job(where: { adminId: { _eq: $adminId }, number: { _eq: $number } }) {\n      id\n      number\n      adminId\n      title\n      description\n      reference\n      access\n      costCategory\n      pricing\n      timing\n      timingStart\n      timingEnd\n      timingNormalHours\n      paymentMethod\n      customerSpendThreshold\n      time\n      amount\n      supplierLabourAmount\n      supplierMaterialsAmount\n      source\n      discount\n      customerDeposit\n      timingStatus\n      correctDuration\n      correctStart\n      correctEnd\n      invoiceNumbers: Invoices(where: { invoiceType: { _eq: "customerVat" } }) {\n        id\n      }\n      invoices: Invoices {\n        reconciledAmount: Reconciliations_aggregate {\n          aggregate {\n            sum {\n              amount\n            }\n          }\n        }\n        amountPaid: Reconciliations_aggregate(where: { creditEntity: { _eq: "PaymentReceipt" } }) {\n          aggregate {\n            sum {\n              amount\n            }\n          }\n        }\n        amountDeducted: Reconciliations_aggregate(where: { creditEntity: { _eq: "CreditNote" } }) {\n          aggregate {\n            sum {\n              amount\n            }\n          }\n        }\n      }\n      customer: Customer {\n        meta\n      }\n      supplierDeposit\n      rebate\n      status\n      workStatus\n      supplierNotes\n      ppm\n      quoted\n      quoteNumber\n      quoteDue\n      scheduledAt\n      createdAt\n      updatedAt\n      customerId\n      customerUserId\n      locationId\n      managerId\n      parentId\n      serviceId\n      slaId\n      siteVisitStart\n      siteVisitEnd\n      siteVisitWeekends\n      tenantId\n      quoteCharge\n      quoteChargeAmount\n      jobScheduleId\n      type\n      meta\n      compliances: Compliances(where: { entity: { _eq: "Job" } }) {\n        id\n        compliance: Compliance {\n          id\n          name\n        }\n      }\n      assets: Assets {\n        id\n        status\n        entity\n        entityId\n        Asset {\n          name\n          serialNumber\n          id\n        }\n      }\n      assetCategory: AssetCategory {\n        name\n        id\n      }\n      asset: Asset {\n        id\n        bookable\n        createdAt\n        locationId\n        meta\n        name\n        customFields\n        customer: Account {\n          id\n          name\n          type\n        }\n        location: Location {\n          id\n          name\n        }\n        userId: User {\n          value: id\n          label: fullName\n        }\n        parentId: ParentAsset {\n          value: id\n          label: fullName\n          media: Media(where: { entity: { _eq: "Asset" } }) {\n            id\n            item: Medium {\n              id\n              name\n              filename\n              category\n            }\n          }\n        }\n      }\n      admin: Admin {\n        id\n        name\n        meta\n        bankAccounts: BankAccounts {\n          id\n          bank\n          stripeId\n          accountNumber\n          routingNumber\n          bic\n          iban\n          status\n          default\n          createdAt\n          meta\n        }\n        addresses: Addresses {\n          id\n          registered\n          operating\n          trading\n          invoice\n          status\n          createdAt\n          address: Address {\n            id\n            name\n            addressLine1\n            addressLine2\n            addressLine3\n            city\n            county\n            geo\n            postCode\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n      }\n      customer: Customer {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n        financial: Financial {\n          id\n          amountOutstanding\n          approvalThreshold\n          arrangementFee\n          createdAt\n          creditLimit\n          creditRating\n          defaultPaymentMethod\n          invoicing\n          serviceRate\n          spendThreshold\n          stripeId\n          totalRevenue\n          unpaidInvoices\n        }\n        slas: SLAs(where: { entity: { _eq: "Account" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n        services: Services(where: { entity: { _eq: "Account" } }) {\n          id\n          dayRate\n          dayRateOOH\n          dayRatePremium\n          hourRate\n          hourRateOOH\n          hourRatePremium\n          meta\n          minimumInterval\n          minimumLength\n          callOutHourRate\n          callOutHourRateOOH\n          callOutHourRatePremium\n          notes\n          delivery\n          createdAt\n          updatedAt\n          entity\n          entityId\n          serviceId\n        }\n        addresses: Addresses(where: { entity: { _eq: "Account" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n      }\n      customerUser: CustomerUser {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        meta\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      expenses: Expenses {\n        id\n        amount\n        description\n        markup\n        total\n        unit\n        vat\n        paid\n      }\n      location: Location {\n        id\n        access\n        createdAt\n        name\n        contactUserId\n        addresses: Addresses(where: { entity: { _eq: "Location" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            countryId\n            country: Country {\n              id\n              name\n              code\n            }\n          }\n        }\n        slas: SLAs(where: { entity: { _eq: "Location" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n        services: Services(where: { entity: { _eq: "Location" } }) {\n          id\n          dayRate\n          dayRateOOH\n          dayRatePremium\n          hourRate\n          hourRateOOH\n          hourRatePremium\n          meta\n          minimumInterval\n          minimumLength\n          callOutHourRate\n          callOutHourRateOOH\n          callOutHourRatePremium\n          notes\n          delivery\n          createdAt\n          updatedAt\n          entity\n          entityId\n          serviceId\n        }\n      }\n      financeLogs: JobFinanceLogs(order_by: { createdAt: desc }) {\n        id\n        type\n        value\n        difference\n        createdAt\n      }\n      manager: Manager {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      quotations: SupplierQuotes(\n        where: { status: { _neq: "cancelled" } }\n        order_by: { quoteNumber: asc }\n      ) {\n        id\n        createdAt\n        jobId\n        methodStatement\n        notes\n        quoteNumber\n        startDate\n        rebate\n        recommended\n        status\n        totalDuration\n        totalDurationUnit\n        meta\n        updatedAt\n        siteVisitAt\n        type\n        lineItems: SupplierQuoteLineItems {\n          id\n          description\n          item\n          qty\n          qtyUnit\n          quoteId\n          supplierTotal\n          total\n          type\n          unitRate\n        }\n        supplier: Supplier {\n          id\n          companyNumber\n          createdAt\n          name\n          status\n          type\n          updatedAt\n          website\n          clientType\n          managerId\n          vatId\n          meta\n          accountUsers: Account_Users {\n            user: User {\n              id\n              fullName\n              nameFirst\n              nameLast\n              phone\n              email\n              devices: UserDevices(where: { status: { _eq: "active" } }) {\n                id\n                playerId\n              }\n            }\n          }\n          media: Media {\n            id\n            medium: Medium {\n              id\n              category\n              filename\n              meta\n              type\n            }\n          }\n          manager: Manager {\n            id\n            fullName\n          }\n        }\n        media: Media(where: { entity: { _eq: "Quotation" } }) {\n          id\n        }\n      }\n      report: JobReport {\n        id\n        completion\n        meta\n        notes\n        timing\n        createdAt\n        updatedAt\n      }\n      service: Service {\n        id\n        name\n        countryId\n        currencyId\n        customerDayRate\n        customerDayRateOOH\n        customerDayRatePremium\n        customerHourRate\n        customerHourRateOOH\n        customerHourRatePremium\n        supplierDayRate\n        supplierDayRateOOH\n        supplierDayRatePremium\n        supplierHourRate\n        supplierHourRateOOH\n        supplierHourRatePremium\n        minimumInterval\n        minimumLength\n      }\n      sla: SLA {\n        id\n        name\n        notes\n        normalRate\n        oohRate\n        premiumRate\n        onSite\n        onSiteUnit\n        jobReport\n        jobReportUnit\n        completion\n        completionUnit\n        minimumInterval\n        minimumLength\n      }\n      media: Media {\n        id\n        item: Medium {\n          id\n          name\n          type\n          filename\n          category\n          meta\n        }\n      }\n      supplier: Supplier {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n        contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n          role\n          position\n          isContact\n          lastSignInAt\n          userId\n          user: User {\n            id\n            name: nameFirst\n            nameFirst\n            nameLast\n            phone\n            status\n            email\n            createdAt\n            fullName\n            accounts: Account_Users {\n              id\n              role\n              position\n              isContact\n              status\n              account: Account {\n                id\n                name\n                type\n              }\n            }\n          }\n        }\n        addresses: Addresses(where: { entity: { _eq: "Account" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n        services: Services(where: { entity: { _eq: "Account" } }) {\n          id\n          dayRate\n          dayRateOOH\n          dayRatePremium\n          hourRate\n          hourRateOOH\n          hourRatePremium\n          meta\n          minimumInterval\n          minimumLength\n          callOutHourRate\n          callOutHourRateOOH\n          callOutHourRatePremium\n          notes\n          delivery\n          createdAt\n          updatedAt\n          entity\n          entityId\n          serviceId\n        }\n      }\n      supplierUser: SupplierUser {\n        id\n        meta\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      supplierOffers: SupplierOffers {\n        id\n        status\n        rate\n        dayRate\n        meta\n        notes\n        statusLog\n        account: Supplier {\n          id\n          companyNumber\n          createdAt\n          name\n          status\n          type\n          updatedAt\n          website\n          clientType\n          managerId\n          vatId\n          meta\n          media: Media {\n            id\n            medium: Medium {\n              id\n              category\n              filename\n              meta\n              type\n            }\n          }\n          manager: Manager {\n            id\n            fullName\n          }\n        }\n      }\n      tenant: Tenant {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n      }\n      tenantUser: TenantUser {\n        id\n        fullName\n        nameFirst\n        nameLast\n        email\n        phone\n      }\n      timings: JobTimings(order_by: { id: desc }) {\n        id\n        status\n        notes\n        meta\n        quoteId\n        createdAt\n        user: User {\n          id\n          fullName\n        }\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      answers: Taxonomy(\n        where: { Taxonomy: { type: { _eq: "jobQuestion" } } }\n        order_by: { taxonomyId: asc }\n      ) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      costCategoryTaxonomy: CostCategory {\n        id\n        name\n      }\n      parentJob: ParentJob {\n        createdAt\n        id\n        number\n        reference\n        status\n        title\n        type\n      }\n      childJobs: Jobs {\n        createdAt\n        id\n        number\n        reference\n        status\n        title\n        type\n      }\n      compliances: Compliances(where: { entity: { _eq: "Job" } }) {\n        id\n      }\n    }\n  }\n  ',"\n  ","\n"])),h.WW,h.MR),O=((0,v.Ps)(a||(a=(0,f.Z)(["\n  mutation AddJob($objects: [Job_insert_input!]!) {\n    insert_Job(objects: $objects) {\n      affected_rows\n      returning {\n        id\n      }\n    }\n  }\n"]))),(0,v.Ps)(r||(r=(0,f.Z)(["\n  mutation MyMutation($objects: [CreateJobInput]!, $adminId: Int!) {\n    createJob(adminId: $adminId, objects: $objects) {\n      data\n    }\n  }\n"])))),A=(0,v.Ps)(o||(o=(0,f.Z)(["\n  mutation UpdateJob($id: Int!, $changes: Job_set_input) {\n    update_Job_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n      status\n    }\n  }\n"]))),I=(0,v.Ps)(s||(s=(0,f.Z)(['\n  mutation UpdateJob(\n    $jobId: Int!\n    $changes: Job_set_input\n    $deletedAssetIds: [Int!]\n    $assets: [Asset_Entity_insert_input!]!\n    $questions: [Taxonomy_Entity_insert_input!]!\n    $hasQuestions: Boolean!\n    $compliances: [Compliance_Entity_insert_input!]!\n  ) {\n    update_Job_by_pk(pk_columns: { id: $jobId }, _set: $changes) {\n      id\n      status\n      number\n    }\n    insert_Asset_Entity(objects: $assets) {\n      returning {\n        assetId\n        entity\n        id\n        entityId\n        status\n      }\n    }\n    delete_Asset_Entity(where: { id: { _in: $deletedAssetIds } }) {\n      returning {\n        assetId\n        entityId\n        entity\n        id\n      }\n    }\n    delete_Taxonomy_Entity(where: { entityId: { _eq: $jobId }, entity: { _eq: "Job" } }) {\n      returning {\n        id\n      }\n    }\n    insert_Taxonomy_Entity(objects: $questions) @include(if: $hasQuestions) {\n      returning {\n        id\n      }\n    }\n    delete_Compliance_Entity(where: { entityId: { _eq: $jobId }, entity: { _eq: "Job" } }) {\n      returning {\n        id\n      }\n    }\n    insert_Compliance_Entity(objects: $compliances) {\n      returning {\n        id\n      }\n    }\n  }\n']))),j=(0,v.Ps)(c||(c=(0,f.Z)(['\n  mutation UpdateJob(\n    $jobId: Int!\n    $changes: Job_set_input\n    $questions: [Taxonomy_Entity_insert_input!]!\n    $hasQuestions: Boolean!\n  ) {\n    update_Job_by_pk(pk_columns: { id: $jobId }, _set: $changes) {\n      id\n      status\n    }\n    delete_Taxonomy_Entity(where: { entityId: { _eq: $jobId }, entity: { _eq: "Job" } }) {\n      returning {\n        id\n      }\n    }\n    insert_Taxonomy_Entity(objects: $questions) @include(if: $hasQuestions) {\n      returning {\n        id\n      }\n    }\n  }\n']))),R=(0,v.Ps)(d||(d=(0,f.Z)(["\n  mutation AddJob($objects: [JobTiming_insert_input!]!) {\n    insert_JobTiming(objects: $objects) {\n      returning {\n        id\n        status\n        notes\n        createdAt\n      }\n    }\n  }\n"]))),w=(0,v.Ps)(u||(u=(0,f.Z)(["\n  mutation DeleteJobTiming($id: Int!, $quoteId: Int, $status: String) {\n    delete_JobTiming(\n      where: { jobId: { _eq: $id }, quoteId: { _eq: $quoteId }, status: { _eq: $status } }\n    ) {\n      returning {\n        jobId\n        status\n      }\n    }\n  }\n"]))),P=(0,v.Ps)(m||(m=(0,f.Z)(['\n  query GetJobPredefined(\n    $accountId: Int!\n    $locationId: Int!\n    $parentId: Int!\n    $assetId: Int!\n    $includeAccount: Boolean!\n    $includeLocation: Boolean!\n    $includeParentJob: Boolean!\n    $includeAsset: Boolean!\n  ) {\n    parentJob: Job_by_pk(id: $parentId) @include(if: $includeParentJob) {\n      id\n      title\n      description\n      reference\n      access\n      source\n      slaId\n      paymentMethod\n      pricing\n      customerSpendThreshold\n      amount\n      supplierLabourAmount\n      supplierMaterialsAmount\n      admin: Admin {\n        id\n        name\n      }\n      customer: Customer {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n      }\n      customerUser: CustomerUser {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      location: Location {\n        id\n        access\n        createdAt\n        name\n        contactUserId\n      }\n      assets: Assets {\n        id\n        status\n        entity\n        entityId\n        Asset {\n          name\n          serialNumber\n          id\n        }\n      }\n      assetCategory: AssetCategory {\n        name\n        id\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      answers: Taxonomy(\n        where: { Taxonomy: { type: { _eq: "jobQuestion" } } }\n        order_by: { taxonomyId: asc }\n      ) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      costCategoryTaxonomy: CostCategory {\n        id\n        name\n      }\n      childJobs: Jobs {\n        createdAt\n        id\n        reference\n        status\n        title\n      }\n      compliances: Compliances(where: { entity: { _eq: "Job" } }) {\n        id\n        compliance: Compliance {\n          id\n          name\n        }\n      }\n      manager: Manager {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      service: Service {\n        id\n        name\n        countryId\n        currencyId\n        customerDayRate\n        customerDayRateOOH\n        customerDayRatePremium\n        customerHourRate\n        customerHourRateOOH\n        customerHourRatePremium\n        supplierDayRate\n        supplierDayRateOOH\n        supplierDayRatePremium\n        supplierHourRate\n        supplierHourRateOOH\n        supplierHourRatePremium\n        minimumInterval\n        minimumLength\n      }\n    }\n    customer: Account_by_pk(id: $accountId) @include(if: $includeAccount) {\n      id\n      name\n    }\n    location: Location_by_pk(id: $locationId) @include(if: $includeLocation) {\n      id\n      name\n      customerAssociations: Account_Locations(where: { Account: { type: { _eq: "customer" } } }) {\n        customer: Account {\n          id\n          name\n        }\n      }\n    }\n    asset: Asset_by_pk(id: $assetId) @include(if: $includeAsset) {\n      id\n      name\n      Category {\n        name\n        id\n      }\n    }\n  }\n']))),$=(0,v.Ps)(l||(l=(0,f.Z)(['\n  query GetSLAsForJobManage($customerId: Int, $locationId: Int) {\n    customerSlas: SLA_Entity(\n      where: { entityId: { _eq: $customerId }, entity: { _eq: "Account" } }\n    ) {\n      sla: SLA {\n        name\n      }\n      id\n      inUse\n      onSite\n      onSiteUnit\n      createdAt\n      updatedAt\n      notes\n      slaId\n    }\n    locationSlas: SLA_Entity(\n      where: { entityId: { _eq: $locationId }, entity: { _eq: "Location" } }\n    ) {\n      sla: SLA {\n        name\n      }\n      id\n      inUse\n      onSite\n      onSiteUnit\n      createdAt\n      updatedAt\n      notes\n      slaId\n      entity\n    }\n    slas: SLA(where: { status: { _eq: "active" } }, order_by: { name: asc }) {\n      id\n      label: name\n      notes\n      onSite\n      onSiteUnit\n      createdAt\n      updatedAt\n      type\n    }\n  }\n']))),Z=(0,v.Ps)(p||(p=(0,f.Z)(["\n  query GetJobFinanceLogs($jobId: Int!) {\n    logs: JobFinanceLog(where: { jobId: { _eq: $jobId } }, order_by: { createdAt: desc }) {\n      id\n      type\n      value\n      difference\n      createdAt\n      meta\n    }\n  }\n"]))),S=(0,v.Ps)(g||(g=(0,f.Z)(["\n  mutation AddJobFinanceLog($objects: [JobFinanceLog_insert_input!]!) {\n    insert_JobFinanceLog(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]))),x=(0,v.Ps)(y||(y=(0,f.Z)(["\n  mutation AddJob(\n    $timing: [JobTiming_insert_input!]!\n    $financeLog: [JobFinanceLog_insert_input!]!\n    $hasFinanceLog: Boolean!\n    $jobId: Int!\n    $jobChange: Job_set_input\n  ) {\n    insert_JobTiming(objects: $timing) {\n      returning {\n        id\n        status\n        notes\n        createdAt\n      }\n    }\n    insert_JobFinanceLog(objects: $financeLog) @include(if: $hasFinanceLog) {\n      returning {\n        id\n      }\n    }\n    update_Job_by_pk(pk_columns: { id: $jobId }, _set: $jobChange) @include(if: $hasFinanceLog) {\n      id\n      status\n    }\n  }\n"]))),q=(0,v.Ps)(b||(b=(0,f.Z)(["\n  mutation calculateJobFinance($jobId: Int!, $invoiceType: String!) {\n    calculateJobFinance(jobId: $jobId, invoiceType: $invoiceType) {\n      data\n    }\n  }\n"])))},29918:function(n,e,t){"use strict";t.d(e,{eW:function(){return m},Hj:function(){return l},FB:function(){return p}});var i=t(83789),a=t(92809),r=t(30266),o=t(64687),s=t.n(o),c=t(84774);function d(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function u(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?d(Object(t),!0).forEach((function(e){(0,a.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):d(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var m=function(){var n=(0,r.Z)(s().mark((function n(e,t,i){var a;return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,l(e,t,i);case 2:a=n.sent,e.mutate({mutation:c.qD,variables:{id:t.id,changes:{meta:a}}});case 4:case"end":return n.stop()}}),n)})));return function(e,t,i){return n.apply(this,arguments)}}(),l=function(){var n=(0,r.Z)(s().mark((function n(e,t,a){var r,o,c,d,m;return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,p(e,t.id);case 2:return r=n.sent,o=r.financeSupplier,c=r.financeCustomer,delete(d=u({},t.meta)).revisions,(m=u({},t.meta)).revisions?m.revisions=(0,i.Z)(t.meta.revisions):m.revisions=[],m.revisions.push({user:a||"system update",date:new Date,data:d}),m.supplierInvoice=o,m.customerVATInvoice=c,n.abrupt("return",m);case 13:case"end":return n.stop()}}),n)})));return function(e,t,i){return n.apply(this,arguments)}}(),p=function(){var n=(0,r.Z)(s().mark((function n(e,t){var i,a;return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,e.mutate({mutation:c.iU,variables:{jobId:t,invoiceType:"supplier"}}).then((function(n){var e;i=null===n||void 0===n||null===(e=n.data.calculateJobFinance)||void 0===e?void 0:e.data.persistentData}));case 2:return n.next=4,e.mutate({mutation:c.iU,variables:{jobId:t,invoiceType:"customerVat"}}).then((function(n){var e;a=null===n||void 0===n||null===(e=n.data.calculateJobFinance)||void 0===e?void 0:e.data.persistentData}));case 4:return n.abrupt("return",{financeSupplier:i,financeCustomer:a});case 5:case"end":return n.stop()}}),n)})));return function(e,t){return n.apply(this,arguments)}}()},1882:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return O}});var i=t(92809),a=t(11163),r=t(66918),o=t(30266),s=t(64687),c=t.n(s),d=t(26075),u=t(93633),m=t(84774),l=t(24237),p=t(14347),g=t(29918),y=t(85893);function b(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}var f=l.ZP.div.withConfig({displayName:"issue__StyledWrapper",componentId:"sc-kai7sq-0"})(["width:100%;overflow:scroll;"]),v=function(n){var e=n.id,t=(0,d.x)(),a=(0,u.a)(m.E6,{variables:{id:e}}),r=a.loading,s=a.data,l=(s=void 0===s?{job:null}:s).job,v=a.refetch,h=function(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?b(Object(t),!0).forEach((function(e){(0,i.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):b(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}({},l),_=function(){var n=(0,o.Z)(c().mark((function n(){return c().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,(0,g.eW)(t,h);case 2:v();case 3:case"end":return n.stop()}}),n)})));return function(){return n.apply(this,arguments)}}();return!r&&(0,y.jsxs)(y.Fragment,{children:[(0,y.jsx)(p.Z,{content:"Update meta",context:"secondary",onClick:_,size:"sm"}),(0,y.jsx)(f,{children:(0,y.jsx)("pre",{children:JSON.stringify(h.meta,null,2)})}),";"]})};function h(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function _(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?h(Object(t),!0).forEach((function(e){(0,i.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):h(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var O=function(){var n=(0,a.useRouter)().query;return(0,y.jsx)(r.Z,{View:(0,y.jsx)(v,_({},n))})}},614:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/dashboard/maintenance/view",function(){return t(1882)}])}},function(n){n.O(0,[9774,2888,179],(function(){return e=614,n(n.s=e);var e}));var e=n.O();_N_E=e}]);