(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[832],{26075:function(n,e,t){"use strict";t.d(e,{x:function(){return a}});var r=t(67294),i=t(47591),o=t(24273);function a(){var n=r.useContext((0,o.K)()).client;return __DEV__?(0,i.kG)(n,"No Apollo Client instance can be found. Please ensure that you have called `ApolloProvider` higher up in your tree."):(0,i.kG)(n,36),n}},93633:function(n,e,t){"use strict";t.d(e,{a:function(){return i}});var r=t(81322);function i(n,e){return(0,r.r)(n,e,!1)}},58448:function(n,e,t){"use strict";var r,i,o=t(30168),a=t(67294),s=t(45697),u=t(24237),c=function(n){var e=n.align,t=n.children;return a.createElement(d,{align:e,"aria-label":"Toolbar with button groups",role:"toolbar"},a.createElement(l,{role:"group","aria-label":"First group"},t))};c.displayName="ButtonToolbar";var d=u.ZP.div(r||(r=(0,o.Z)(["\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: ",";\n"])),(function(n){return n.align})),l=u.ZP.div(i||(i=(0,o.Z)(["\n  display: inline-flex;\n  position: relative;\n  vertical-align: middle;\n\n  a:hover {\n    color: white;\n  }\n\n  &:last-child > div:last-of-type button {\n    border-top-right-radius: 0.25rem;\n    border-bottom-right-radius: 0.25rem;\n    border-right: 0;\n  }\n\n  a:not(:last-child),\n  button:not(:last-child) {\n    border-bottom-right-radius: 0;\n    border-right: 1px solid ",";\n    border-top-right-radius: 0;\n  }\n\n  a:not(:first-child),\n  button:not(:first-child),\n  a:not(:first-child) button,\n  div:not(:first-child) button {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    margin-left: 0;\n  }\n\n  a:not(:last-child) button,\n  div:not(:last-child) button {\n    border-bottom-right-radius: 0;\n    border-right: 1px solid ",";\n    border-top-right-radius: 0;\n  }\n"])),(function(n){return n.theme.COLOUR.light}),(function(n){return n.theme.COLOUR.light}));c.propTypes={align:s.string,children:s.node.isRequired},c.defaultProps={align:"center"},e.Z=c},84550:function(n,e,t){"use strict";t.d(e,{Z:function(){return $}});var r,i=t(30168),o=t(87462),a=t(45987),s=t(67294),u=t(45697),c=t(24237),d=t(42778),l=["disabled"],m=(0,s.forwardRef)((function(n,e){var t=n.disabled,r=(0,a.Z)(n,l);return s.createElement(p,(0,o.Z)({disabled:t,ref:e,type:"checkbox"},r))})),p=c.ZP.input(r||(r=(0,i.Z)(["\n  cursor: pointer;\n  margin-right: 0.5rem;\n"])));m.propTypes={disabled:u.bool},m.defaultProps={stacked:!1};var f,b,g,y,h=m,v=t(88280),_=["data","errors","legend","stacked"],I=["disabled","label"],x=function(n){var e=n.data,t=n.errors,r=n.legend,i=n.stacked,u=(0,a.Z)(n,_);return s.createElement(A,{error:t[u.name]},r&&s.createElement("legend",null,r),e.map((function(n){var e=n.disabled,r=n.label,c=(0,a.Z)(n,I);return s.createElement(j,{htmlFor:c.id,key:c.id,stacked:i},s.createElement(d.Z,(0,o.Z)({component:h,disabled:e,errors:t[u.name],showError:!1},c,u)),r)})))};x.displayName="Checkbox";var A=c.ZP.fieldset(f||(f=(0,i.Z)(["\n  border-radius: 0.25rem;\n  color: ",";\n  ","\n"])),(function(n){return n.theme.COLOUR.dark}),(function(n){return n.error&&(0,c.iv)(b||(b=(0,i.Z)(["\n      ","\n      padding: 0.5rem;\n    "])),(function(n){return(0,v.Z)(n)}))})),j=c.ZP.label(g||(g=(0,i.Z)(["\n  cursor: pointer;\n  margin-right: 1.25rem;\n  position: relative;\n  ","\n"])),(function(n){return n.stacked&&(0,c.iv)(y||(y=(0,i.Z)(["\n      display: block;\n      margin: 0.5rem 0;\n    "])))}));x.propTypes={data:u.array.isRequired,errors:u.object,legend:u.string,stacked:u.bool},x.defaultProps={data:[],errors:{},stacked:!1};var $=x},71247:function(n,e,t){"use strict";var r=t(87462),i=t(70885),o=t(45987),a=t(67294),s=t(45697),u=t(42778),c=t(82373),d=t(49787),l=["disabled","errors","helperMessage","name","placeholder","readOnly","regExp","register","size","validate","withAddon"],m=function(n){var e=n.disabled,t=n.errors,s=n.helperMessage,c=n.name,m=n.placeholder,p=n.readOnly,f=(n.regExp,n.register),b=n.size,g=(n.validate,n.withAddon),y=(0,o.Z)(n,l),h=(0,a.useState)(!1),v=(0,i.Z)(h,2),_=v[0],I=v[1];return a.createElement(u.Z,(0,r.Z)({"aria-label":c,component:d.Z,disabled:e,helperMessage:s,onKeyDown:function(n){I(!0)},onBlur:function(){I(!1)},errors:t[c],isTyping:_,key:c,name:c,placeholder:m,readOnly:p,register:f,size:b,withAddon:g},y))};m.displayName="FormField",m.propTypes={accept:s.string,autoComplete:(0,s.oneOfType)([s.bool,s.string]),autoFocus:s.bool,disabled:s.bool,errors:s.object.isRequired,helperMessage:s.string,label:s.string,name:s.string.isRequired,placeholder:s.string,readOnly:s.bool,register:s.func.isRequired,size:(0,s.oneOf)([c.Z.SM,c.Z.MD,c.Z.LG]),style:s.object,textAlign:s.string,type:s.string,value:(0,s.oneOfType)([s.string,s.number,s.bool,(0,s.arrayOf)((0,s.oneOfType)([s.string,s.number,s.bool]))])},m.defaultProps={autoComplete:"off",autoFocus:!1,disabled:!1,errors:{},readOnly:!1,type:"text"},e.Z=m},49787:function(n,e,t){"use strict";var r,i,o,a,s,u,c=t(30168),d=t(24237),l=t(38425),m=t(88280),p=t(82373),f=d.ZP.input.attrs((function(n){return{autoComplete:"off",autoFocus:!1}}))(r||(r=(0,c.Z)(["\n  ","\n\n  ","\n\n    ","\n"])),(function(n){return(0,l.Z)(n)}),(function(n){return n.errors&&(0,d.iv)(i||(i=(0,c.Z)(["\n      ","\n    "])),(function(n){return(0,m.Z)(n)}))}),(function(n){switch(n.size){case p.Z.SM:return(0,d.iv)(o||(o=(0,c.Z)(["\n          height: 1.5rem;\n        "])));case p.Z.MD:return(0,d.iv)(a||(a=(0,c.Z)(["\n          height: 1.875rem;\n        "])));case p.Z.LG:return(0,d.iv)(s||(s=(0,c.Z)(["\n          height: 2.25rem;\n        "])));default:return(0,d.iv)(u||(u=(0,c.Z)(["\n          height: 2.25rem;\n        "])))}}));e.Z=f},21269:function(n,e,t){"use strict";var r,i,o,a,s,u=t(30168),c=t(67294),d=t(45697),l=t(24237),m=t(37815),p=t(82373),f=function(n){var e=n.addonType,t=(n.className,n.children),r=n.context,i=n.error,o=n.size,a=n.text,s=n.theme;return c.createElement(b,{addonType:e,className:e,children:t,context:r,error:i,size:o,text:a,theme:s})};f.displayName="InputGroupAddon";var b=l.ZP.div(r||(r=(0,u.Z)(["\n  align-items: center;\n  display: flex;\n\n  & > * {\n    height: 100%;\n  }\n\n  ","\n  ","\n\n  &,\n  button {\n    ","\n\n    ","\n  }\n"])),(function(n){var e=n.theme,t=e.COLOUR,r=e.FORM_ELEMENTS_STYLES,o=n.error;return n.text&&(0,l.iv)(i||(i=(0,u.Z)(["\n      background-color: ",";\n      border: 1px solid ",";\n      border-radius: ",";\n      color: ",";\n      display: flex;\n      font-size: 0.75rem;\n      font-weight: 400;\n      line-height: 1;\n      margin-bottom: 0;\n      padding: 0.375rem 1rem;\n      text-align: center;\n      transition: background-color 0.15s linear;\n      white-space: nowrap;\n    "])),o?t.danger:t.light,o?t.danger:t.dark,r.inputBorderRadius,o?t.light:t.dark)}),(function(n){return n.size===p.Z.SM&&(0,l.iv)(o||(o=(0,u.Z)(["\n      font-size: 0.625rem;\n      padding: 0 0.75rem;\n    "])))}),(function(n){return"prepend"===n.addonType&&(0,l.iv)(a||(a=(0,u.Z)(["\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n        margin-right: -1px;\n      "])))}),(function(n){return"append"===n.addonType&&(0,l.iv)(s||(s=(0,u.Z)(["\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n        margin-left: -1px;\n      "])))}));f.propTypes={addonType:(0,d.oneOf)(["prepend","append"]),className:d.any,children:d.node,context:(0,d.oneOf)(Object.values(m.Z)),text:d.bool},f.defaultProps={addonType:"append",context:"light"},e.Z=f},44442:function(n,e,t){"use strict";var r,i,o=t(30168),a=t(67294),s=t(45697),u=t(24237),c=function(n){var e=n.children,t=n.error,r=n.fullWidth,i=n.size,o=n.theme;return a.createElement(d,{children:e,error:t,fullWidth:r,size:i,theme:o})};c.displayName="InputGroup";var d=u.ZP.div(r||(r=(0,o.Z)(["\n  align-items: stretch;\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n  width: 100%;\n\n  input {\n    ","\n    min-width: 0;\n    margin-bottom: 0;\n    position: relative;\n\n    :not(:first-child) {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n\n    :first-child {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n\n    :not(:last-child) {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n  ","\n"])),(function(n){return n.fullWidth?"flex: 1 1 0%;":"width: auto;"}),(function(n){var e=n.error,t=n.theme;return e&&t&&(0,u.iv)(i||(i=(0,o.Z)(["\n      &:hover {\n        .prepend,\n        .append {\n          background: ",";\n          border-color: ",";\n        }\n      }\n    "])),t.COLOUR.danger,t.COLOUR.danger)}));c.propTypes={fullWidth:s.bool,size:s.string},c.defaultProps={fullWidth:!0,size:"md"},e.Z=c},29444:function(n,e,t){"use strict";var r,i=t(30168),o=t(67294),a=t(45697),s=t(11163),u=t(24237),c=t(62906),d=function(n,e,t,r){return function(i){var a,u=i.row;a=u[r]||n;var c=function(){var t=u[r]||n;return"".concat(t,"?id=").concat(u[e])},d=u[t],m=u[e];return a?"-"!==d&&m?o.createElement(l,{border:!1,href:c(),onClick:function(n){n.preventDefault(),n.stopPropagation(),s.default.push(c())}},d):d||"-":d}},l=(0,u.ZP)(c.Z)(r||(r=(0,i.Z)(["\n  &:hover {\n    background: #ddd;\n    margin: -8px;\n    padding: 8px;\n  }\n"])));d.propTypes={row:a.object.isRequired},e.Z=d},18862:function(n,e,t){"use strict";var r=t(64509);e.Z=function(n){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=new Date(n),i=t.getFullYear(),o=""+(t.getMonth()+1),a=""+t.getDate();o.length<2&&(o="0"+o),a.length<2&&(a="0"+a);var s=[i,o,a].join("-");return e?s+" "+(0,r.Z)(n):s}},64509:function(n,e){"use strict";e.Z=function(n){var e=new Date(n),t=""+e.getHours(),r=""+e.getMinutes();return t.length<2&&(t="0"+t),r.length<2&&(r="0"+r),"".concat(t,":").concat(r)}},76585:function(n,e,t){"use strict";t.d(e,{z:function(){return o}});var r,i=t(52209),o=(0,t(54397).Ps)(r||(r=(0,i.Z)(["\n  fragment AccountFields on Account {\n    id\n    type\n    name\n    status\n    vatId\n  }\n"])))},66805:function(n,e,t){"use strict";t.d(e,{H:function(){return d}});var r=t(92809),i=t(77417),o=t(58448),a=t(14347),s=t(85893);function u(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function c(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?u(Object(t),!0).forEach((function(e){(0,r.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var d=function(n){var e=n.children,t=n.content,r=n.context,u=n.data,d=n.disabled,l=n.handleClick,m=n.size,p=n.type;return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.Z,{size:"sm"}),(0,s.jsxs)(o.Z,{align:"flex-end",children:[e,(0,s.jsx)(a.Z,c({content:t,context:r,disabled:d,onClick:l,size:m,type:p},u))]})]})};d.defaultProps={content:"Add",context:"secondary",disabled:!1,size:"sm",type:"button"}},48963:function(n,e,t){"use strict";t.d(e,{N:function(){return a}});var r=t(84550),i=t(85893),o=[{id:"assignedToMe",label:"Assigned to me",value:"assignedToMe"}],a=function(n){var e=n.data,t=n.errors,a=n.name,s=n.onChange,u=n.register;return(0,i.jsx)(r.Z,{errors:t,data:e||o,legend:"",name:a,onChange:s,register:u})};a.defaultProps={name:"assignedToMe"}},69399:function(n,e,t){"use strict";t.d(e,{r:function(){return o}});var r=t(46482),i=t(85893),o=function(n){var e=n.errors,t=n.name,o=n.onChange,a=n.options,s=n.register;return(0,i.jsx)(r.Z,{errors:e,name:t,onChange:o,options:a,register:s})};o.defaultProps={name:"status"}},84774:function(n,e,t){"use strict";t.d(e,{E6:function(){return _},mJ:function(){return I},qD:function(){return x},uA:function(){return A},FA:function(){return j},r2:function(){return $},k7:function(){return O},TY:function(){return S},Ab:function(){return R},bZ:function(){return q},Tw:function(){return U},wU:function(){return w},iU:function(){return P}});var r,i,o,a,s,u,c,d,l,m,p,f,b,g,y=t(52209),h=t(54397),v=t(88402),_=(0,h.Ps)(r||(r=(0,y.Z)(['\n  query GetJob($adminId: Int!, $number: String!) {\n    job: Job(where: { adminId: { _eq: $adminId }, number: { _eq: $number } }) {\n      id\n      number\n      adminId\n      title\n      description\n      reference\n      access\n      costCategory\n      pricing\n      timing\n      timingStart\n      timingEnd\n      timingNormalHours\n      paymentMethod\n      customerSpendThreshold\n      time\n      amount\n      supplierLabourAmount\n      supplierMaterialsAmount\n      source\n      discount\n      customerDeposit\n      timingStatus\n      correctDuration\n      correctStart\n      correctEnd\n      invoiceNumbers: Invoices(where: { invoiceType: { _eq: "customerVat" } }) {\n        id\n      }\n      invoices: Invoices {\n        reconciledAmount: Reconciliations_aggregate {\n          aggregate {\n            sum {\n              amount\n            }\n          }\n        }\n        amountPaid: Reconciliations_aggregate(where: { creditEntity: { _eq: "PaymentReceipt" } }) {\n          aggregate {\n            sum {\n              amount\n            }\n          }\n        }\n        amountDeducted: Reconciliations_aggregate(where: { creditEntity: { _eq: "CreditNote" } }) {\n          aggregate {\n            sum {\n              amount\n            }\n          }\n        }\n      }\n      customer: Customer {\n        meta\n      }\n      supplierDeposit\n      rebate\n      status\n      workStatus\n      supplierNotes\n      ppm\n      quoted\n      quoteNumber\n      quoteDue\n      scheduledAt\n      createdAt\n      updatedAt\n      customerId\n      customerUserId\n      locationId\n      managerId\n      parentId\n      serviceId\n      slaId\n      siteVisitStart\n      siteVisitEnd\n      siteVisitWeekends\n      tenantId\n      quoteCharge\n      quoteChargeAmount\n      jobScheduleId\n      type\n      meta\n      compliances: Compliances(where: { entity: { _eq: "Job" } }) {\n        id\n        compliance: Compliance {\n          id\n          name\n        }\n      }\n      assets: Assets {\n        id\n        status\n        entity\n        entityId\n        Asset {\n          name\n          serialNumber\n          id\n        }\n      }\n      assetCategory: AssetCategory {\n        name\n        id\n      }\n      asset: Asset {\n        id\n        bookable\n        createdAt\n        locationId\n        meta\n        name\n        customFields\n        customer: Account {\n          id\n          name\n          type\n        }\n        location: Location {\n          id\n          name\n        }\n        userId: User {\n          value: id\n          label: fullName\n        }\n        parentId: ParentAsset {\n          value: id\n          label: fullName\n          media: Media(where: { entity: { _eq: "Asset" } }) {\n            id\n            item: Medium {\n              id\n              name\n              filename\n              category\n            }\n          }\n        }\n      }\n      admin: Admin {\n        id\n        name\n        meta\n        bankAccounts: BankAccounts {\n          id\n          bank\n          stripeId\n          accountNumber\n          routingNumber\n          bic\n          iban\n          status\n          default\n          createdAt\n          meta\n        }\n        addresses: Addresses {\n          id\n          registered\n          operating\n          trading\n          invoice\n          status\n          createdAt\n          address: Address {\n            id\n            name\n            addressLine1\n            addressLine2\n            addressLine3\n            city\n            county\n            geo\n            postCode\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n      }\n      customer: Customer {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n        financial: Financial {\n          id\n          amountOutstanding\n          approvalThreshold\n          arrangementFee\n          createdAt\n          creditLimit\n          creditRating\n          defaultPaymentMethod\n          invoicing\n          serviceRate\n          spendThreshold\n          stripeId\n          totalRevenue\n          unpaidInvoices\n        }\n        slas: SLAs(where: { entity: { _eq: "Account" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n        services: Services(where: { entity: { _eq: "Account" } }) {\n          id\n          dayRate\n          dayRateOOH\n          dayRatePremium\n          hourRate\n          hourRateOOH\n          hourRatePremium\n          meta\n          minimumInterval\n          minimumLength\n          callOutHourRate\n          callOutHourRateOOH\n          callOutHourRatePremium\n          notes\n          delivery\n          createdAt\n          updatedAt\n          entity\n          entityId\n          serviceId\n        }\n        addresses: Addresses(where: { entity: { _eq: "Account" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n      }\n      customerUser: CustomerUser {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        meta\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      expenses: Expenses {\n        id\n        amount\n        description\n        markup\n        total\n        unit\n        vat\n        paid\n      }\n      location: Location {\n        id\n        access\n        createdAt\n        name\n        contactUserId\n        addresses: Addresses(where: { entity: { _eq: "Location" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            countryId\n            country: Country {\n              id\n              name\n              code\n            }\n          }\n        }\n        slas: SLAs(where: { entity: { _eq: "Location" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n        services: Services(where: { entity: { _eq: "Location" } }) {\n          id\n          dayRate\n          dayRateOOH\n          dayRatePremium\n          hourRate\n          hourRateOOH\n          hourRatePremium\n          meta\n          minimumInterval\n          minimumLength\n          callOutHourRate\n          callOutHourRateOOH\n          callOutHourRatePremium\n          notes\n          delivery\n          createdAt\n          updatedAt\n          entity\n          entityId\n          serviceId\n        }\n      }\n      financeLogs: JobFinanceLogs(order_by: { createdAt: desc }) {\n        id\n        type\n        value\n        difference\n        createdAt\n      }\n      manager: Manager {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      quotations: SupplierQuotes(\n        where: { status: { _neq: "cancelled" } }\n        order_by: { quoteNumber: asc }\n      ) {\n        id\n        createdAt\n        jobId\n        methodStatement\n        notes\n        quoteNumber\n        startDate\n        rebate\n        recommended\n        status\n        totalDuration\n        totalDurationUnit\n        meta\n        updatedAt\n        siteVisitAt\n        type\n        lineItems: SupplierQuoteLineItems {\n          id\n          description\n          item\n          qty\n          qtyUnit\n          quoteId\n          supplierTotal\n          total\n          type\n          unitRate\n        }\n        supplier: Supplier {\n          id\n          companyNumber\n          createdAt\n          name\n          status\n          type\n          updatedAt\n          website\n          clientType\n          managerId\n          vatId\n          meta\n          accountUsers: Account_Users {\n            user: User {\n              id\n              fullName\n              nameFirst\n              nameLast\n              phone\n              email\n              devices: UserDevices(where: { status: { _eq: "active" } }) {\n                id\n                playerId\n              }\n            }\n          }\n          media: Media {\n            id\n            medium: Medium {\n              id\n              category\n              filename\n              meta\n              type\n            }\n          }\n          manager: Manager {\n            id\n            fullName\n          }\n        }\n        media: Media(where: { entity: { _eq: "Quotation" } }) {\n          id\n        }\n      }\n      report: JobReport {\n        id\n        completion\n        meta\n        notes\n        timing\n        createdAt\n        updatedAt\n      }\n      service: Service {\n        id\n        name\n        countryId\n        currencyId\n        customerDayRate\n        customerDayRateOOH\n        customerDayRatePremium\n        customerHourRate\n        customerHourRateOOH\n        customerHourRatePremium\n        supplierDayRate\n        supplierDayRateOOH\n        supplierDayRatePremium\n        supplierHourRate\n        supplierHourRateOOH\n        supplierHourRatePremium\n        minimumInterval\n        minimumLength\n      }\n      sla: SLA {\n        id\n        name\n        notes\n        normalRate\n        oohRate\n        premiumRate\n        onSite\n        onSiteUnit\n        jobReport\n        jobReportUnit\n        completion\n        completionUnit\n        minimumInterval\n        minimumLength\n      }\n      media: Media {\n        id\n        item: Medium {\n          id\n          name\n          type\n          filename\n          category\n          meta\n        }\n      }\n      supplier: Supplier {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n        contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n          role\n          position\n          isContact\n          lastSignInAt\n          userId\n          user: User {\n            id\n            name: nameFirst\n            nameFirst\n            nameLast\n            phone\n            status\n            email\n            createdAt\n            fullName\n            accounts: Account_Users {\n              id\n              role\n              position\n              isContact\n              status\n              account: Account {\n                id\n                name\n                type\n              }\n            }\n          }\n        }\n        addresses: Addresses(where: { entity: { _eq: "Account" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n        services: Services(where: { entity: { _eq: "Account" } }) {\n          id\n          dayRate\n          dayRateOOH\n          dayRatePremium\n          hourRate\n          hourRateOOH\n          hourRatePremium\n          meta\n          minimumInterval\n          minimumLength\n          callOutHourRate\n          callOutHourRateOOH\n          callOutHourRatePremium\n          notes\n          delivery\n          createdAt\n          updatedAt\n          entity\n          entityId\n          serviceId\n        }\n      }\n      supplierUser: SupplierUser {\n        id\n        meta\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      supplierOffers: SupplierOffers {\n        id\n        status\n        rate\n        dayRate\n        meta\n        notes\n        statusLog\n        account: Supplier {\n          id\n          companyNumber\n          createdAt\n          name\n          status\n          type\n          updatedAt\n          website\n          clientType\n          managerId\n          vatId\n          meta\n          media: Media {\n            id\n            medium: Medium {\n              id\n              category\n              filename\n              meta\n              type\n            }\n          }\n          manager: Manager {\n            id\n            fullName\n          }\n        }\n      }\n      tenant: Tenant {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n      }\n      tenantUser: TenantUser {\n        id\n        fullName\n        nameFirst\n        nameLast\n        email\n        phone\n      }\n      timings: JobTimings(order_by: { id: desc }) {\n        id\n        status\n        notes\n        meta\n        quoteId\n        createdAt\n        user: User {\n          id\n          fullName\n        }\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      answers: Taxonomy(\n        where: { Taxonomy: { type: { _eq: "jobQuestion" } } }\n        order_by: { taxonomyId: asc }\n      ) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      costCategoryTaxonomy: CostCategory {\n        id\n        name\n      }\n      parentJob: ParentJob {\n        createdAt\n        id\n        number\n        reference\n        status\n        title\n        type\n      }\n      childJobs: Jobs {\n        createdAt\n        id\n        number\n        reference\n        status\n        title\n        type\n      }\n      compliances: Compliances(where: { entity: { _eq: "Job" } }) {\n        id\n      }\n    }\n  }\n  ',"\n  ","\n"])),v.WW,v.MR),I=((0,h.Ps)(i||(i=(0,y.Z)(["\n  mutation AddJob($objects: [Job_insert_input!]!) {\n    insert_Job(objects: $objects) {\n      affected_rows\n      returning {\n        id\n      }\n    }\n  }\n"]))),(0,h.Ps)(o||(o=(0,y.Z)(["\n  mutation MyMutation($objects: [CreateJobInput]!, $adminId: Int!) {\n    createJob(adminId: $adminId, objects: $objects) {\n      data\n    }\n  }\n"])))),x=(0,h.Ps)(a||(a=(0,y.Z)(["\n  mutation UpdateJob($id: Int!, $changes: Job_set_input) {\n    update_Job_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n      status\n    }\n  }\n"]))),A=(0,h.Ps)(s||(s=(0,y.Z)(['\n  mutation UpdateJob(\n    $jobId: Int!\n    $changes: Job_set_input\n    $deletedAssetIds: [Int!]\n    $assets: [Asset_Entity_insert_input!]!\n    $questions: [Taxonomy_Entity_insert_input!]!\n    $hasQuestions: Boolean!\n    $compliances: [Compliance_Entity_insert_input!]!\n  ) {\n    update_Job_by_pk(pk_columns: { id: $jobId }, _set: $changes) {\n      id\n      status\n      number\n    }\n    insert_Asset_Entity(objects: $assets) {\n      returning {\n        assetId\n        entity\n        id\n        entityId\n        status\n      }\n    }\n    delete_Asset_Entity(where: { id: { _in: $deletedAssetIds } }) {\n      returning {\n        assetId\n        entityId\n        entity\n        id\n      }\n    }\n    delete_Taxonomy_Entity(where: { entityId: { _eq: $jobId }, entity: { _eq: "Job" } }) {\n      returning {\n        id\n      }\n    }\n    insert_Taxonomy_Entity(objects: $questions) @include(if: $hasQuestions) {\n      returning {\n        id\n      }\n    }\n    delete_Compliance_Entity(where: { entityId: { _eq: $jobId }, entity: { _eq: "Job" } }) {\n      returning {\n        id\n      }\n    }\n    insert_Compliance_Entity(objects: $compliances) {\n      returning {\n        id\n      }\n    }\n  }\n']))),j=(0,h.Ps)(u||(u=(0,y.Z)(['\n  mutation UpdateJob(\n    $jobId: Int!\n    $changes: Job_set_input\n    $questions: [Taxonomy_Entity_insert_input!]!\n    $hasQuestions: Boolean!\n  ) {\n    update_Job_by_pk(pk_columns: { id: $jobId }, _set: $changes) {\n      id\n      status\n    }\n    delete_Taxonomy_Entity(where: { entityId: { _eq: $jobId }, entity: { _eq: "Job" } }) {\n      returning {\n        id\n      }\n    }\n    insert_Taxonomy_Entity(objects: $questions) @include(if: $hasQuestions) {\n      returning {\n        id\n      }\n    }\n  }\n']))),$=(0,h.Ps)(c||(c=(0,y.Z)(["\n  mutation AddJob($objects: [JobTiming_insert_input!]!) {\n    insert_JobTiming(objects: $objects) {\n      returning {\n        id\n        status\n        notes\n        createdAt\n      }\n    }\n  }\n"]))),O=(0,h.Ps)(d||(d=(0,y.Z)(["\n  mutation DeleteJobTiming($id: Int!, $quoteId: Int, $status: String) {\n    delete_JobTiming(\n      where: { jobId: { _eq: $id }, quoteId: { _eq: $quoteId }, status: { _eq: $status } }\n    ) {\n      returning {\n        jobId\n        status\n      }\n    }\n  }\n"]))),S=(0,h.Ps)(l||(l=(0,y.Z)(['\n  query GetJobPredefined(\n    $accountId: Int!\n    $locationId: Int!\n    $parentId: Int!\n    $assetId: Int!\n    $includeAccount: Boolean!\n    $includeLocation: Boolean!\n    $includeParentJob: Boolean!\n    $includeAsset: Boolean!\n  ) {\n    parentJob: Job_by_pk(id: $parentId) @include(if: $includeParentJob) {\n      id\n      title\n      description\n      reference\n      access\n      source\n      slaId\n      paymentMethod\n      pricing\n      customerSpendThreshold\n      amount\n      supplierLabourAmount\n      supplierMaterialsAmount\n      admin: Admin {\n        id\n        name\n      }\n      customer: Customer {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n      }\n      customerUser: CustomerUser {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      location: Location {\n        id\n        access\n        createdAt\n        name\n        contactUserId\n      }\n      assets: Assets {\n        id\n        status\n        entity\n        entityId\n        Asset {\n          name\n          serialNumber\n          id\n        }\n      }\n      assetCategory: AssetCategory {\n        name\n        id\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      answers: Taxonomy(\n        where: { Taxonomy: { type: { _eq: "jobQuestion" } } }\n        order_by: { taxonomyId: asc }\n      ) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      costCategoryTaxonomy: CostCategory {\n        id\n        name\n      }\n      childJobs: Jobs {\n        createdAt\n        id\n        reference\n        status\n        title\n      }\n      compliances: Compliances(where: { entity: { _eq: "Job" } }) {\n        id\n        compliance: Compliance {\n          id\n          name\n        }\n      }\n      manager: Manager {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      service: Service {\n        id\n        name\n        countryId\n        currencyId\n        customerDayRate\n        customerDayRateOOH\n        customerDayRatePremium\n        customerHourRate\n        customerHourRateOOH\n        customerHourRatePremium\n        supplierDayRate\n        supplierDayRateOOH\n        supplierDayRatePremium\n        supplierHourRate\n        supplierHourRateOOH\n        supplierHourRatePremium\n        minimumInterval\n        minimumLength\n      }\n    }\n    customer: Account_by_pk(id: $accountId) @include(if: $includeAccount) {\n      id\n      name\n    }\n    location: Location_by_pk(id: $locationId) @include(if: $includeLocation) {\n      id\n      name\n      customerAssociations: Account_Locations(where: { Account: { type: { _eq: "customer" } } }) {\n        customer: Account {\n          id\n          name\n        }\n      }\n    }\n    asset: Asset_by_pk(id: $assetId) @include(if: $includeAsset) {\n      id\n      name\n      Category {\n        name\n        id\n      }\n    }\n  }\n']))),R=(0,h.Ps)(m||(m=(0,y.Z)(['\n  query GetSLAsForJobManage($customerId: Int, $locationId: Int) {\n    customerSlas: SLA_Entity(\n      where: { entityId: { _eq: $customerId }, entity: { _eq: "Account" } }\n    ) {\n      sla: SLA {\n        name\n      }\n      id\n      inUse\n      onSite\n      onSiteUnit\n      createdAt\n      updatedAt\n      notes\n      slaId\n    }\n    locationSlas: SLA_Entity(\n      where: { entityId: { _eq: $locationId }, entity: { _eq: "Location" } }\n    ) {\n      sla: SLA {\n        name\n      }\n      id\n      inUse\n      onSite\n      onSiteUnit\n      createdAt\n      updatedAt\n      notes\n      slaId\n      entity\n    }\n    slas: SLA(where: { status: { _eq: "active" } }, order_by: { name: asc }) {\n      id\n      label: name\n      notes\n      onSite\n      onSiteUnit\n      createdAt\n      updatedAt\n      type\n    }\n  }\n']))),q=(0,h.Ps)(p||(p=(0,y.Z)(["\n  query GetJobFinanceLogs($jobId: Int!) {\n    logs: JobFinanceLog(where: { jobId: { _eq: $jobId } }, order_by: { createdAt: desc }) {\n      id\n      type\n      value\n      difference\n      createdAt\n      meta\n    }\n  }\n"]))),U=(0,h.Ps)(f||(f=(0,y.Z)(["\n  mutation AddJobFinanceLog($objects: [JobFinanceLog_insert_input!]!) {\n    insert_JobFinanceLog(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]))),w=(0,h.Ps)(b||(b=(0,y.Z)(["\n  mutation AddJob(\n    $timing: [JobTiming_insert_input!]!\n    $financeLog: [JobFinanceLog_insert_input!]!\n    $hasFinanceLog: Boolean!\n    $jobId: Int!\n    $jobChange: Job_set_input\n  ) {\n    insert_JobTiming(objects: $timing) {\n      returning {\n        id\n        status\n        notes\n        createdAt\n      }\n    }\n    insert_JobFinanceLog(objects: $financeLog) @include(if: $hasFinanceLog) {\n      returning {\n        id\n      }\n    }\n    update_Job_by_pk(pk_columns: { id: $jobId }, _set: $jobChange) @include(if: $hasFinanceLog) {\n      id\n      status\n    }\n  }\n"]))),P=(0,h.Ps)(g||(g=(0,y.Z)(["\n  mutation calculateJobFinance($jobId: Int!, $invoiceType: String!) {\n    calculateJobFinance(jobId: $jobId, invoiceType: $invoiceType) {\n      data\n    }\n  }\n"])))},38478:function(n,e,t){"use strict";t.d(e,{aL:function(){return y},pf:function(){return h},wd:function(){return v},H_:function(){return _},xY:function(){return I},yT:function(){return x},sW:function(){return A},Vw:function(){return j},EY:function(){return $},iU:function(){return O}});var r,i,o,a,s,u,c,d,l,m,p,f=t(52209),b=t(54397),g=t(88402),y=(0,b.Ps)(r||(r=(0,f.Z)(["\n  fragment JobFields on Job {\n    access\n    adminId\n    costCategory\n    createdAt\n    description\n    id\n    meta\n    pricing\n    reference\n    scheduledAt\n    status\n    supplierLabourAmount\n    supplierMaterialsAmount\n    timing\n    timingEnd\n    timingNormalHours\n    timingStart\n    title\n    type\n    siteVisitStart\n    siteVisitEnd\n    siteVisitWeekends\n    amount\n    number\n    quoted\n    timingStatus\n    correctDuration\n    correctStart\n    correctEnd\n  }\n"]))),h=(0,b.Ps)(i||(i=(0,f.Z)(["\n  fragment JobQuoteFields on Job {\n    quoted\n    quoteNumber\n    quoteDue\n    quoteCharge\n  }\n"]))),v=(0,b.Ps)(o||(o=(0,f.Z)(["\n  fragment JobAdminFields on Job {\n    supplierId\n    supplierUserId\n  }\n"]))),_=(0,b.Ps)(a||(a=(0,f.Z)(["\n  fragment JobSupplierFields on Job {\n    supplierId\n    supplierUserId\n  }\n"]))),I=((0,b.Ps)(s||(s=(0,f.Z)(["\n  fragment JobCustomerFields on Job {\n    customerId\n    customerUserId\n    locationId\n  }\n"]))),(0,b.Ps)(u||(u=(0,f.Z)(["\n  mutation UpdateJob($id: Int!, $changes: Job_set_input, $timing: [JobTiming_insert_input!]!) {\n    update_Job_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n    }\n    insert_JobTiming(objects: $timing) {\n      returning {\n        id\n        status\n        createdAt\n      }\n    }\n  }\n"])))),x=(0,b.Ps)(c||(c=(0,f.Z)(["\n  mutation InsertJobTiming($timing: [JobTiming_insert_input!]!) {\n    insert_JobTiming(objects: $timing) {\n      returning {\n        id\n        status\n        createdAt\n      }\n    }\n  }\n"]))),A=(0,b.Ps)(d||(d=(0,f.Z)(['\n  query GetJobHistory(\n    $jobId: Int\n    $locationId: Int!\n    $limit: Int\n    $offset: Int\n    $serviceId: Int\n    $startDate: timestamptz!\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      order_by: { createdAt: desc }\n      where: {\n        createdAt: { _gte: $startDate }\n        id: { _neq: $jobId }\n        locationId: { _eq: $locationId }\n        serviceId: { _eq: $serviceId }\n        status: { _nin: ["pending", "raised", "offered", "accepted", "inProgress"] }\n      }\n    ) {\n      id\n      title\n      status\n      scheduledAt\n      createdAt\n      meta\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        createdAt: { _gte: $startDate }\n        id: { _neq: $jobId }\n        locationId: { _eq: $locationId }\n        serviceId: { _eq: $serviceId }\n        status: { _nin: ["pending", "raised", "offered", "accepted", "inProgress"] }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),j=(0,b.Ps)(l||(l=(0,f.Z)(['\n  query GetJob($jobId: Int!) {\n    job: Job_by_pk(id: $jobId) {\n      access\n      costCategory\n      customerSpendThreshold\n      description\n      supplierLabourAmount\n      supplierMaterialsAmount\n      quoteDue\n      quoteNumber\n      id\n      number\n      meta\n      paymentMethod\n      reference\n      status\n      title\n      type\n      quotations: SupplierQuotes {\n        id\n        quoteNumber\n        status\n        lineItems: SupplierQuoteLineItems {\n          id\n          description\n          item\n          qty\n          qtyUnit\n          quoteId\n          total\n          type\n          unitRate\n          supplierTotal\n        }\n        supplier: Supplier {\n          id\n          type\n          name\n          accountUsers: Account_Users {\n            user: User {\n              id\n              fullName\n              nameFirst\n              nameLast\n              phone\n              email\n              devices: UserDevices(where: { status: { _eq: "active" } }) {\n                id\n                playerId\n              }\n            }\n          }\n        }\n      }\n      admin: Admin {\n        id\n        name\n      }\n      service: Service {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      customer: Customer {\n        id\n        name\n        website\n        slas: SLAs(where: { entity: { _eq: "Account" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n      }\n      customerUser: CustomerUser {\n        id\n        nameFirst\n        nameLast\n        fullName\n        email\n        phone\n      }\n      supplier: Supplier {\n        id\n        name\n        contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n          id\n          role\n          position\n          isContact\n          lastSignInAt\n          userId\n          user: User {\n            id\n            fullName\n            nameFirst\n            nameLast\n            email\n            phone\n          }\n        }\n      }\n      supplierUser: SupplierUser {\n        id\n        fullName\n        nameFirst\n        nameLast\n        email\n        phone\n      }\n      location: Location {\n        id\n        name\n        addresses: Addresses(where: { entity: { _eq: "Location" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n        slas: SLAs(where: { entity: { _eq: "Location" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n      }\n      sla: SLA {\n        id\n        name\n        notes\n        normalRate\n        oohRate\n        premiumRate\n        onSite\n        onSiteUnit\n        jobReport\n        jobReportUnit\n        completion\n        completionUnit\n        minimumInterval\n        minimumLength\n      }\n      costCategoryTaxonomy: CostCategory {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n    }\n  }\n  ',"\n  ","\n"])),g.WW,g.MR),$=(0,b.Ps)(m||(m=(0,f.Z)(["\n  query GetAllAdmins($adminId: Int!) {\n    users: User(where: { Account_Users: { Account: { id: { _eq: $adminId } } } }) {\n      id\n      fullName\n      email\n      phone\n    }\n  }\n"]))),O=(0,b.Ps)(p||(p=(0,f.Z)(["\n  mutation calculateJobFinance($jobId: Int!, $invoiceType: String!) {\n    calculateJobFinance(jobId: $jobId, invoiceType: $invoiceType) {\n      data\n    }\n  }\n"])))},29918:function(n,e,t){"use strict";t.d(e,{eW:function(){return l},Hj:function(){return m},FB:function(){return p}});var r=t(83789),i=t(92809),o=t(30266),a=t(64687),s=t.n(a),u=t(84774);function c(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function d(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?c(Object(t),!0).forEach((function(e){(0,i.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var l=function(){var n=(0,o.Z)(s().mark((function n(e,t,r){var i;return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,m(e,t,r);case 2:i=n.sent,e.mutate({mutation:u.qD,variables:{id:t.id,changes:{meta:i}}});case 4:case"end":return n.stop()}}),n)})));return function(e,t,r){return n.apply(this,arguments)}}(),m=function(){var n=(0,o.Z)(s().mark((function n(e,t,i){var o,a,u,c,l;return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,p(e,t.id);case 2:return o=n.sent,a=o.financeSupplier,u=o.financeCustomer,delete(c=d({},t.meta)).revisions,(l=d({},t.meta)).revisions?l.revisions=(0,r.Z)(t.meta.revisions):l.revisions=[],l.revisions.push({user:i||"system update",date:new Date,data:c}),l.supplierInvoice=a,l.customerVATInvoice=u,n.abrupt("return",l);case 13:case"end":return n.stop()}}),n)})));return function(e,t,r){return n.apply(this,arguments)}}(),p=function(){var n=(0,o.Z)(s().mark((function n(e,t){var r,i;return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,e.mutate({mutation:u.iU,variables:{jobId:t,invoiceType:"supplier"}}).then((function(n){var e;r=null===n||void 0===n||null===(e=n.data.calculateJobFinance)||void 0===e?void 0:e.data.persistentData}));case 2:return n.next=4,e.mutate({mutation:u.iU,variables:{jobId:t,invoiceType:"customerVat"}}).then((function(n){var e;i=null===n||void 0===n||null===(e=n.data.calculateJobFinance)||void 0===e?void 0:e.data.persistentData}));case 4:return n.abrupt("return",{financeSupplier:r,financeCustomer:i});case 5:case"end":return n.stop()}}),n)})));return function(e,t){return n.apply(this,arguments)}}()},27834:function(n,e,t){"use strict";t.d(e,{I4:function(){return I},AX:function(){return x},fo:function(){return A},JA:function(){return j},WF:function(){return $},Px:function(){return O},a8:function(){return S},r1:function(){return R},MT:function(){return q},nE:function(){return U},nh:function(){return w},$E:function(){return P},uz:function(){return C},ge:function(){return Z},ZA:function(){return T},tW:function(){return L}});var r,i,o,a,s,u,c,d,l,m,p,f,b,g,y,h,v=t(52209),_=t(54397),I=(0,_.Ps)(r||(r=(0,v.Z)(["\n  mutation InsertAccountUser($objects: [Account_User_insert_input!]!) {\n    insert_Account_User(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]))),x=(0,_.Ps)(i||(i=(0,v.Z)(["\n  mutation UpdateUser(\n    $id: Int!\n    $accountUserId: Int!\n    $accountUserChanges: Account_User_set_input\n    $changes: User_set_input\n    $updateAccountUser: Boolean!\n  ) {\n    update_Account_User_by_pk(pk_columns: { id: $accountUserId }, _set: $accountUserChanges)\n      @include(if: $updateAccountUser) {\n      id\n    }\n    update_User_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n    }\n  }\n"]))),A=(0,_.Ps)(o||(o=(0,v.Z)(["\n  query GetUsers(\n    $accountId: Int\n    $accountType: String\n    $date: timestamptz\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: User_order_by!\n    $status: String\n  ) {\n    users: User(\n      limit: $limit\n      offset: $offset\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [\n          { email: { _ilike: $q } }\n          { nameFirst: { _ilike: $q } }\n          { nameLast: { _ilike: $q } }\n        ]\n        status: { _eq: $status }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n        userLocations: User_Account_Locations {\n          accountLocationId\n        }\n      }\n    }\n    meta: User_aggregate(\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n        status: { _eq: $status }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n"]))),j=(0,_.Ps)(a||(a=(0,v.Z)(["\n  query GetUser($id: Int!) {\n    user: User_by_pk(id: $id) {\n      id\n      fullName\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      media: Media {\n        id\n        medium: Medium {\n          id\n          category\n          filename\n          meta\n          type\n        }\n      }\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n      }\n    }\n  }\n"]))),$=(0,_.Ps)(s||(s=(0,v.Z)(["\n  query CheckDuplicateEmail($email: String!) {\n    users: User_public(where: { email: { _eq: $email } }) {\n      id\n      nameFirst\n      nameLast\n      email\n      phone\n    }\n  }\n"]))),O=(0,_.Ps)(u||(u=(0,v.Z)(["\n  fragment UserFields on User {\n    id\n    email\n    nameFirst\n    nameLast\n    fullName\n    phone\n    status\n  }\n"]))),S=(0,_.Ps)(c||(c=(0,v.Z)(["\n  mutation SendGoogleAuthCode($code: String!, $id: Int!, $type: String!) {\n    createGoogleToken(code: $code, id: $id, type: $type) {\n      success\n      tokens\n      error\n    }\n  }\n"]))),R=(0,_.Ps)(d||(d=(0,v.Z)(["\n  mutation GenerateMSURL($type: String!, $id: Int!) {\n    genenrateMSURL(id: $id, type: $type) {\n      url\n    }\n  }\n"]))),q=(0,_.Ps)(l||(l=(0,v.Z)(["\n  mutation signoutMS($id: Int!, $type: String!, $email: String!) {\n    signoutMS(id: $id, type: $type, email: $email) {\n      error\n      msId\n      success\n    }\n  }\n"]))),U=(0,_.Ps)(m||(m=(0,v.Z)(["\n  query getAccountMeta($id: Int!) {\n    account: Account_by_pk(id: $id) {\n      meta\n    }\n  }\n"]))),w=(0,_.Ps)(p||(p=(0,v.Z)(["\n  query user($id: Int!) {\n    user: User_by_pk(id: $id) {\n      meta\n    }\n  }\n"]))),P=(0,_.Ps)(f||(f=(0,v.Z)(["\n  mutation updateAccount($accountId: Int!, $set: Account_set_input!) {\n    update_Account_by_pk(pk_columns: { id: $accountId }, _set: $set) {\n      id\n    }\n  }\n"]))),C=(0,_.Ps)(b||(b=(0,v.Z)(["\n  mutation updateUserMeta($userId: Int!, $meta: jsonb!) {\n    update_User_by_pk(pk_columns: { id: $userId }, _set: { meta: $meta }) {\n      id\n      meta\n    }\n  }\n"]))),Z=(0,_.Ps)(g||(g=(0,v.Z)(['\n  query userDevices($accountId: Int!) {\n    users: User(\n      where: {\n        Account_Users: { accountId: { _eq: $accountId }, status: { _eq: "active" } }\n        UserDevices: { status: { _eq: "active" } }\n        status: { _eq: "active" }\n      }\n    ) {\n      id\n      fullName\n      devices: UserDevices(\n        order_by: { updatedAt: desc_nulls_last }\n        where: { status: { _eq: "active" } }\n        limit: 1\n      ) {\n        id\n        playerId\n      }\n    }\n  }\n']))),T=(0,_.Ps)(y||(y=(0,v.Z)(['\n  query GetAccountLocations($accountId: Int, $limit: Int, $offset: Int) {\n    location: Location(\n      offset: $offset\n      limit: $limit\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      id\n      name\n      accountLocations: Account_Locations {\n        id\n      }\n      addresses: Addresses(where: { entity: { _eq: "Location" }, registered: { _eq: true } }) {\n        id\n        status\n        address: Address {\n          id\n          name\n          addressLine1\n          postCode\n        }\n      }\n    }\n    meta: Location_aggregate(\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),L=(0,_.Ps)(h||(h=(0,v.Z)(["\n  mutation InsertUserAccountLocations(\n    $accountUserId: Int!\n    $objects: [User_Account_Location_insert_input!]!\n  ) {\n    delete_User_Account_Location(where: { accountUserId: { _eq: $accountUserId } }) {\n      affected_rows\n    }\n    insert_User_Account_Location(objects: $objects) {\n      affected_rows\n      returning {\n        id\n      }\n    }\n  }\n"])))},55148:function(n,e,t){"use strict";t.d(e,{E6:function(){return i},iz:function(){return o},yW:function(){return a},cj:function(){return s},AK:function(){return u},l8:function(){return c},hD:function(){return d},g4:function(){return l}});var r=t(17437),i=[{text:"Quotation Requested",value:"supplierQuoteRequested",context:"info"},{text:"Quotation Completed",value:"supplierQuoteComplete",context:"help"},{text:"Draft Quotation",value:"supplierQuoteDraft",context:"info"},{text:"Waiting threshold approval",value:"waitingThresholdApproval",context:"info"},{text:"Quotation Refused",value:"supplierQuoteRefused",context:"danger"},{text:"Quotation Sent",value:"supplierQuoteSent",context:"success"},{text:"Quotation Accepted",value:"quotationAccepted",context:"success"},{text:"Quotation Rejected",value:"quotationRejected",context:"danger"},{text:"Quotation Updated",value:"supplierQuoteUpdated",context:"success"}],o=[{text:"New Quote",value:"quoteNew",customerText:"Quote issued",supplierText:null},{text:"Sent to Supplier(s)",value:"quoteOffered",customerText:"In progress",supplierText:"Quote offered"},{text:"Received from Supplier(s)",value:"quoteReceived",customerText:"Final review",supplierText:"Quote submitted"},{text:"Sent to Customer",value:"quoteSent",customerText:"Awaiting approval",supplierText:"Awaiting approval"},{text:"Quote Accepted",value:"quoteAccepted",customerText:"Quote accepted",supplierText:"Quote accepted"},{text:"Quote Rejected",value:"quoteRejected",customerText:"Quote rejected",supplierText:"Quote rejected"},{text:"Canceled",value:"quoteCancelled",customerText:"Cancelled",supplierText:null},{text:"Closed",value:"quoteClosed",customerText:"Closed",supplierText:"Closed"}],a=[{text:"Pending",value:"pending",colour:r.Q.COLOUR.info},{text:"Raised",value:"raised",colour:r.Q.COLOUR.info},{text:"Offered",value:"offered",colour:r.Q.COLOUR.warning},{text:"Accepted",value:"accepted",colour:r.Q.COLOUR.success},{text:"In Progress",value:"inProgress",colour:r.Q.COLOUR.primary},{text:"Completed",value:"completed",colour:"rgb(217,217,217)"},{text:"Report Sent",value:"reportSent",colour:"rgb(153, 153, 153)"},{text:"Invoice Sent",value:"invoiceSent",colour:r.Q.COLOUR.secondary},{text:"Customer Paid",value:"customerPaid",colour:r.Q.COLOUR.help},{text:"Supplier Paid",value:"supplierPaid",colour:r.Q.COLOUR.help},{text:"Quote",value:"quote",colour:"rgb(255,178, 255)"},{text:"Site Visit",value:"siteVisit",colour:"rgb(182, 79, 200)"},{text:"Canceled",value:"canceled",colour:r.Q.COLOUR.black},{text:"Closed",value:"closed",colour:r.Q.COLOUR.black},{text:"On Hold",value:"onHold",colour:r.Q.COLOUR.black},{text:"Continued",value:"continued",context:r.Q.COLOUR.primary},{text:"Paused",value:"paused",colour:r.Q.COLOUR.black}],s=[{label:"Pending",value:"pending"},{label:"Raised",value:"raised"},{label:"Offered",value:"offered"},{label:"Accepted",value:"accepted"},{label:"In Progress",value:"inProgress"},{label:"Completed",value:"completed"},{label:"Report Sent",value:"reportSent"},{label:"Invoice Sent",value:"invoiceSent"},{label:"Customer Paid",value:"customerPaid"},{label:"Supplier Paid",value:"supplierPaid"},{label:"Quote",value:"quote"},{label:"Site Visit",value:"siteVisit"},{label:"Canceled",value:"canceled"},{label:"Closed",value:"closed"},{label:"On Hold",value:"onHold"},{label:"Continued",value:"continued"},{label:"Paused",value:"paused"}],u=[{text:"Uplift Draft",value:"upliftDraft",context:"info"},{text:"Supplier Uplift Requested",value:"supplierUpliftRequested",context:"secondary"},{text:"Uplift Requested Send to Customer",value:"upliftRequestSendCustomer",context:"secondary"},{text:"Uplift Approved",value:"customerUpliftApproved",context:"success"},{text:"Uplift Rejected",value:"customerUpliftRejected",context:"danger"}],c=[{text:"Offered",value:"offered",context:"info"},{text:"Raised",value:"raised",context:"info"},{text:"Pending",value:"pending",context:"info"},{text:"Accepted",value:"accepted",context:"info"},{text:"Uplift Requested by Supplier",value:"supplierUpliftRequested",context:"info"},{text:"Uplift Draft",value:"upliftDraft",context:"info"},{text:"Uplift Requested Send Customer",value:"upliftRequestSendCustomer",context:"info"},{text:"Uplift Requested Approved",value:"customerUpliftApproved",context:"success"},{text:"In Dispute",value:"inDispute",context:"info"},{text:"Resumed",value:"resumed",context:"Danger"},{text:"Quote Sent",value:"quoteSent",context:"info"},{text:"Quote Offered",value:"quoteOffered",context:"info"},{text:"Report Sent Supplier",value:"reportSentSupplier",context:"info"},{text:"Dispute Resolved",value:"disputeResolved",context:"info"},{text:"Validated",value:"validated",context:"success"},{text:"Un Validated",value:"unvalidated",context:"success"},{text:"Paused",value:"paused",context:"info"},{text:"TimingChanged",value:"timingChanged",context:"info"},{text:"Customer Paid",value:"customerPaid",context:"info"},{text:"In Progress",value:"inProgress",context:"info"},{text:"PPM Invoice Created",value:"ppmInvoiceCreated",context:"success"},{text:"Late Arrival",value:"lateArrival",context:"info"},{text:"Pricing Changed",value:"pricingChanged",context:"info"},{text:"Report Sent",value:"reportSent",context:"info"},{text:"Invoice Sent Supplier",value:"invoiceSentSupplier",context:"info"},{text:"Invoice Sent",value:"invoiceSent",context:"info"},{text:"Invoice Sent Customer",value:"invoiceSentCustomer",context:"info"},{text:"Quote Accepted",value:"quoteAccepted",context:"info"},{text:"On Hold",value:"onHold",context:"info"},{text:"Continued",value:"continued",context:"info"},{text:"Quote Received",value:"quoteReceived",context:"info"},{text:"Quote New",value:"quoteNew",context:"info"},{text:"Closed",value:"closed",context:"danger"},{text:"Re posted",value:"reposted",context:"info"},{text:"Supplier Paid",value:"supplierPaid",context:"info"},{text:"Rejected",value:"rejected",context:"info"},{text:"Completed",value:"completed",context:"info"},{text:"Canceled",value:"canceled",context:"danger"}],d=[{value:"complete",text:"Complete"},{value:"returnVisitByAnother",text:"Return Visit By Another"},{value:"returnVisit",text:"Return Visit"},{value:"completeCertificate",text:"Complete Certificate"},{value:"couldNotDo",text:"Could Not Do"}],l=["adminSupplierQuoteThresholdApproval","adminCustomerQuoteThresholdApproval","supplierQuoteThresholdApproval","customerQuoteThresholdApproval","adminUpliftThresholdApproval","adminInvoiceThresholdApproval","customerThresholdApproval","supplierThresholdApproval","adminSupplierQuoteThresholdApproved","adminCustomerQuoteThresholdApproved","supplierQuoteThresholdApproved","customerQuoteThresholdApproved","adminUpliftThresholdApproved","adminInvoiceThresholdApproved","customerThresholdApproved","supplierThresholdApproved","adminSupplierQuoteThresholdRejected","adminCustomerQuoteThresholdRejected","supplierQuoteThresholdRejected","customerQuoteThresholdRejected","adminUpliftThresholdRejected","adminInvoiceThresholdRejected","customerThresholdRejected","supplierThresholdRejected"]},70316:function(n,e,t){"use strict";t.d(e,{J:function(){return R}});var r=t(92809),i=t(80318),o=t(10219),a=t(11163),s=t(67294),u=t(78215),c=t(2356),d=t(42283),l=t(97202),m=t(80284),p=t(65375),f=t(10973),b=t(14347),g=t(66805),y=t(69119),h=t(23855),v=t(83894);function _(n,e,t){var r=(0,s.useState)((function(){if(JSON.parse(window.sessionStorage.getItem(n))&&!Object.values(JSON.parse(window.sessionStorage[n])).includes(t))return e;try{var r=JSON.parse(window.sessionStorage.getItem(n));return r&&(r.startDate=r.startDate?(0,y.Z)((0,h.Z)(r.startDate)):null,r.endDate=r.endDate?(0,v.Z)((0,h.Z)(r.endDate)):null),r||e}catch(i){return console.log(i),e}})),i=r[0],o=r[1];return[i,function(e){try{var t=e instanceof Function?e(i):e;o(t),window.sessionStorage.setItem(n,JSON.stringify(t))}catch(r){console.log(r)}}]}var I=t(85893);function x(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function A(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?x(Object(t),!0).forEach((function(e){(0,r.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):x(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var j=function(n){var e=n.initialValues,t=n.renderFilters,r=n.setFilters,o=n.lastQuery,a=n.filters,y=e.filterType,h=_("form_data",e,y),v=(0,i.Z)(h,2),x=v[0],j=v[1],$=(0,d.cI)({defaultValues:x||e}),O=$.control,S=$.errors,R=$.handleSubmit,q=$.register,U=$.reset,w=$.watch,P=$.setValue,C=A(A({},w()),{},{filterType:y});(0,s.useEffect)((function(){U(C)}),[U]),(0,s.useEffect)((function(){j(C)}),[a]);var Z=function(n){var t=n.query;if(t!==o){var i={q:"%".concat(t,"%")||0},a=/^\d+$/.test(t);"id"in e&&(i.id=a?Number(t):null),"meta"in e&&(i.meta=a?{invoiceNumbers:[t]}:null),"jobNumber"in e&&(i.jobNumber=a?String(t):null,i.invoiceNumber=a?Number(t):null),(i.id||i.meta||i.jobNumber)&&(i.q=null),r((function(n){return A(A({},n),i)}))}};return(0,I.jsx)(l.Z,{handleSubmit:R(Z),children:(0,I.jsxs)(m.Z,{title:"Filters",children:[(0,I.jsxs)(u.Z,{children:[(0,I.jsx)(c.Z,{sm:12,lg:12,children:(0,I.jsx)(p.Z,{label:"",children:(0,I.jsx)(f.Z,{errors:S,label:"Search",name:"email",placeholder:"Search...",prependSearchIcon:!0,register:q,type:"search"})})}),(0,I.jsx)(c.Z,{sm:12,lg:12,children:t({control:O,errors:S,initialValues:e,register:q,setFilters:r,watch:w,setValue:P,reset:U})})]}),(0,I.jsx)(g.H,{content:"Search",context:"secondary",handleClick:Z,type:"submit",children:(0,I.jsx)(b.Z,{content:"Clear",context:"danger",onClick:function(n){Object.keys(e).map((function(n){return P(n,null)})),r(e),U(e),Z("")},size:"sm"})})]})})},$=["FiltersComp","initialFilters","TableComp"];function O(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function S(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?O(Object(t),!0).forEach((function(e){(0,r.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):O(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var R=function(n){var e=n.FiltersComp,t=n.initialFilters,r=n.TableComp,d=(0,o.Z)(n,$),l=_("filters",t,t.filterType),m=(0,i.Z)(l,2),p=m[0],f=m[1],b=(0,s.useState)(p||t),g=b[0],y=b[1],h=(0,a.useRouter)().query.show;return(0,s.useEffect)((function(){f(g)}),[g]),(0,I.jsx)(u.Z,{children:(0,I.jsxs)(c.Z,{sm:12,lg:12,children:[(0,I.jsx)(j,{initialValues:t,renderFilters:function(n){return(0,I.jsx)(e,S(S(S({},n),d),{},{show:h}))},setFilters:y,filters:g}),(0,I.jsx)(r,S({filters:g,initialFilters:t},d))]})})}},35149:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return V}});var r,i=t(66918),o=t(70316),a=t(30266),s=t(92809),u=t(64687),c=t.n(u),d=t(67294),l=t(11163),m=t(26075),p=t(93633),f=t(52209),b=t(54397),g=t(76585),y=t(38478),h=t(88402),v=t(27834),_=(0,b.Ps)(r||(r=(0,f.Z)(['\n  query GetJobs(\n    $assetId: Int\n    $customerId: Int\n    $date: timestamptz\n    $limit: Int\n    $locationId: Int\n    $managerId: Int\n    $offset: Int\n    $orderBy: Job_order_by!\n    $paid: Boolean\n    $q: String\n    $status: [String!]\n    $supplierId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _or: [{ hash: { _ilike: $q } }, { reference: { _ilike: $q } }]\n        status: { _in: $status }\n        type: { _eq: "reactive" }\n        assetId: { _eq: $assetId }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        paid: { _eq: $paid }\n        supplierId: { _eq: $supplierId }\n        JobTimings: { status: { _eq: "validated" } }\n        _not: { meta: { _has_key: "revisions" } }\n      }\n      order_by: [$orderBy]\n    ) {\n      ...JobFields\n      ...JobAdminFields\n      admin: Admin {\n        id\n        name\n      }\n      customer: Customer {\n        ...AccountFields\n      }\n      location: Location {\n        id\n        name\n      }\n      manager: Manager {\n        ...UserFields\n      }\n      service: Service {\n        id\n        name\n      }\n      sla: SLA {\n        id\n        name\n      }\n      supplier: Supplier {\n        ...AccountFields\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n        }\n      }\n      timings: JobTimings {\n        id\n        status\n        createdAt\n      }\n      supplierOffers: SupplierOffers {\n        id\n        status\n        rate\n        dayRate\n        meta\n        notes\n        statusLog\n        account: Supplier {\n          id\n          companyNumber\n          createdAt\n          name\n          status\n          type\n          updatedAt\n          website\n          clientType\n          managerId\n          vatId\n          meta\n          media: Media {\n            id\n            medium: Medium {\n              id\n              category\n              filename\n              meta\n              type\n            }\n          }\n          manager: Manager {\n            id\n            fullName\n          }\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        hash: { _ilike: $q }\n        status: { _in: $status }\n        type: { _eq: "reactive" }\n        assetId: { _eq: $assetId }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        supplierId: { _eq: $supplierId }\n        JobTimings: { status: { _eq: "validated" } }\n        _not: { meta: { _has_key: "revisions" } }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n  ',"\n  ","\n  ","\n  ","\n  ","\n"])),g.z,h.WW,y.aL,y.wd,v.Px),I=t(84774),x=t(29444),A=t(18862),j=t(80284),$=t(58448),O=t(14347),S=t(52002),R=t(29918),q=t(55148),U=t(85893);function w(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function P(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?w(Object(t),!0).forEach((function(e){(0,s.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):w(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var C=function(n){var e=n.filters,t=(0,m.x)(),r=(0,d.useState)({item:"SLA",inneritem:"name",order:"asc"}),i=r[0],o=r[1],u=P(P({},e),{},{assetId:e.assetId||null,managerId:e.managerId||null,offset:0,limit:50,orderBy:i.inneritem?(0,s.Z)({},i.item,(0,s.Z)({},i.inneritem,i.order)):(0,s.Z)({},i.item,i.order)}),f=(0,p.a)(_,{variables:u}),b=f.loading,g=f.data,y=(g=void 0===g?{jobs:[],meta:{aggregate:{totalCount:0}}}:g).jobs,h=g.meta,v=f.refetch,w=function(){var n=(0,a.Z)(c().mark((function n(e){var r,i,o;return c().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,t.query({query:I.E6,variables:{id:e}});case 2:r=n.sent,i=r.data,o=(i=void 0===i?{account:{}}:i).job,(0,R.eW)(t,o);case 7:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}(),C=[{hidden:!0},{hidden:!0},{hidden:!0},{hidden:!0},{hidden:!0},{text:"Priority"},{text:"Service"},{text:"Job ID"},{formatter:(0,x.Z)("/dashboard/users/view","managerId","manager"),text:"Assigned to"},{formatter:(0,x.Z)("/dashboard/properties/view","propertyId","location"),text:"Location"},{formatter:(0,x.Z)("/dashboard/customers/view","customerId","customer"),text:"Customer"},{formatter:(0,x.Z)("/dashboard/suppliers/view","supplierId","supplier"),text:"Supplier"},{text:"Scheduled",sortable:!0,sortName:"timingStart"},{text:"Created",sortable:!0,sortName:"createdAt"},{text:"Status"}],Z=function(){var n=(0,a.Z)(c().mark((function n(){return c().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,Promise.all(y.map((function(n){return w(n.id)})));case 2:v();case 3:case"end":return n.stop()}}),n)})));return function(){return n.apply(this,arguments)}}();return(0,U.jsxs)(j.Z,{open:!0,title:"Work Orders Maintenance",children:[(0,U.jsx)($.Z,{align:"flex-end",children:(0,U.jsx)(O.Z,{content:"Update ".concat(Math.min(50,h.aggregate.totalCount)," of ").concat(h.aggregate.totalCount),context:"secondary",onClick:Z,size:"sm"})}),(0,U.jsx)("br",{}),(0,U.jsx)(S.Z,{columns:C,loading:b,rowClick:function(n){l.default.push("".concat("/dashboard/maintenance/","view?id=").concat(n.id))},rows:y.map((function(n){var e,t,r,i,o,a,s,u=(q.yW.find((function(e){return e.value===n.status}))||{text:""}).text,c=n.manager?"".concat(n.manager.nameFirst," ").concat(n.manager.nameLast):"Unassigned",d=n.scheduledAt?(0,A.Z)(n.scheduledAt,!0):(0,A.Z)(n.timingStart,!0);return{id:n.id,propertyId:null===(e=n.location)||void 0===e?void 0:e.id,managerId:null===(t=n.manager)||void 0===t?void 0:t.id,customerId:null===(r=n.customer)||void 0===r?void 0:r.id,supplierId:n.supplier?n.supplier.id:"",priority:(null===(i=n.sla)||void 0===i?void 0:i.name)||"-",service:(null===(o=n.service)||void 0===o?void 0:o.name)||"-",hash:"#"+n.hash,manager:c,location:(null===(a=n.location)||void 0===a?void 0:a.name)||"-",customer:(null===(s=n.customer)||void 0===s?void 0:s.name)||"-",supplier:n.supplier?n.supplier.name:"-",scheduleDate:d,date:(0,A.Z)(n.createdAt),status:u}})),sort:i,setSort:o})]})};C.defaultProps={filters:{assetId:null,customerId:null,date:null,managerId:!1,q:null,status:null,supplierId:null,filterType:"issues_table_maintenance"}};var Z=t(83789),T=t(42593),L=t(78215),J=t(2356),F=t(48963),k=t(95146),D=t(69399);function N(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function M(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?N(Object(t),!0).forEach((function(e){(0,s.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):N(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var E=function(n){var e=n.control,t=n.errors,r=n.register,i=n.setFilters,o=(0,d.useContext)(T.Z).hasRole,a=[{text:"Status",value:""}].concat((0,Z.Z)(q.yW)),s={control:e,errors:t,register:r};return(0,U.jsx)(U.Fragment,{children:o("admin")&&(0,U.jsxs)(U.Fragment,{children:[(0,U.jsxs)(L.Z,{children:[(0,U.jsx)(J.Z,{md:6,children:(0,U.jsx)(D.r,M(M({},s),{},{onChange:function(n){return i((function(e){return M(M({},e),{},{status:n.target.value||null})}))},options:a}))}),(0,U.jsx)(J.Z,{md:6,children:(0,U.jsx)(k.P,M(M({},s),{},{errors:M({},t),label:"",name:"customerId",onChange:function(n){return i((function(e){return M(M({},e),{},{customerId:(null===n||void 0===n?void 0:n.value)||null})}))},placeholder:"Select customer",type:"customer"}))})]}),(0,U.jsxs)(L.Z,{children:[(0,U.jsx)(J.Z,{md:6,children:(0,U.jsx)(k.P,M(M({},s),{},{errors:M({},t),label:"",name:"locationId",onChange:function(n){return i((function(e){return M(M({},e),{},{locationId:(null===n||void 0===n?void 0:n.value)||null})}))},placeholder:"Select Location",type:"property"}))}),(0,U.jsx)(J.Z,{md:6,children:(0,U.jsx)(k.P,M(M({},s),{},{errors:M({},t),label:"",name:"supplierId",onChange:function(n){return i((function(e){return M(M({},e),{},{supplierId:(null===n||void 0===n?void 0:n.value)||null})}))},placeholder:"Select supplier",type:"supplier"}))})]}),(0,U.jsx)(L.Z,{children:(0,U.jsx)(J.Z,{md:6,children:(0,U.jsx)(F.N,M(M({},s),{},{name:"managerId",onChange:function(n){return i((function(e){return M(M({},e),{},{managerId:n.target.checked})}))}}))})})]})})},Q={customerId:null,locationId:null,date:null,managerId:!1,q:null,status:null,supplierId:null,filterType:"issues_table_maintenance"},H=function(){return(0,U.jsx)(o.J,{FiltersComp:E,initialFilters:Q,TableComp:C})},V=function(){return(0,U.jsx)(i.Z,{pageHeading:{heading:"Maintenance"},View:(0,U.jsx)(H,{})})}},23934:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/dashboard/maintenance",function(){return t(35149)}])}},function(n){n.O(0,[284,4195,5312,7287,2002,9082,3515,7431,5146,9774,2888,179],(function(){return e=23934,n(n.s=e);var e}));var e=n.O();_N_E=e}]);