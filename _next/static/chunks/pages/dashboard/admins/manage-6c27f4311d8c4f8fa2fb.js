(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3445],{23154:function(n,e,a){"use strict";a.d(e,{E:function(){return s}});var t=a(30266),r=a(64687),o=a.n(r),i=a(27834),s=function(){var n=(0,t.Z)(o().mark((function n(e,a){var t,r,s,c=arguments;return o().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t=c.length>2&&void 0!==c[2]&&c[2],n.prev=1,n.next=4,e.query({query:i.WF,variables:{email:a}});case 4:if(r=n.sent,!((s=r.data.users)&&s.length>0)){n.next=8;break}return n.abrupt("return",!!t&&s[0]);case 8:return n.abrupt("return",!t||null);case 11:return n.prev=11,n.t0=n.catch(1),n.abrupt("return",!0);case 14:case"end":return n.stop()}}),n,null,[[1,11]])})));return function(e,a){return n.apply(this,arguments)}}()},27834:function(n,e,a){"use strict";a.d(e,{I4:function(){return b},AX:function(){return g},fo:function(){return S},JA:function(){return v},WF:function(){return I},Px:function(){return L},a8:function(){return w},r1:function(){return P},MT:function(){return q},nE:function(){return Z},nh:function(){return k},$E:function(){return R},uz:function(){return C},ge:function(){return N},ZA:function(){return j},tW:function(){return D}});var t,r,o,i,s,c,u,m,d,l,p,_,f,y,h,A,U=a(52209),$=a(54397),b=(0,$.Ps)(t||(t=(0,U.Z)(["\n  mutation InsertAccountUser($objects: [Account_User_insert_input!]!) {\n    insert_Account_User(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]))),g=(0,$.Ps)(r||(r=(0,U.Z)(["\n  mutation UpdateUser(\n    $id: Int!\n    $accountUserId: Int!\n    $accountUserChanges: Account_User_set_input\n    $changes: User_set_input\n    $updateAccountUser: Boolean!\n  ) {\n    update_Account_User_by_pk(pk_columns: { id: $accountUserId }, _set: $accountUserChanges)\n      @include(if: $updateAccountUser) {\n      id\n    }\n    update_User_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n    }\n  }\n"]))),S=(0,$.Ps)(o||(o=(0,U.Z)(["\n  query GetUsers(\n    $accountId: Int\n    $accountType: String\n    $date: timestamptz\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: User_order_by!\n    $status: String\n  ) {\n    users: User(\n      limit: $limit\n      offset: $offset\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [\n          { email: { _ilike: $q } }\n          { nameFirst: { _ilike: $q } }\n          { nameLast: { _ilike: $q } }\n        ]\n        status: { _eq: $status }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n        userLocations: User_Account_Locations {\n          accountLocationId\n        }\n      }\n    }\n    meta: User_aggregate(\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n        status: { _eq: $status }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n"]))),v=(0,$.Ps)(i||(i=(0,U.Z)(["\n  query GetUser($id: Int!) {\n    user: User_by_pk(id: $id) {\n      id\n      fullName\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      media: Media {\n        id\n        medium: Medium {\n          id\n          category\n          filename\n          meta\n          type\n        }\n      }\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n      }\n    }\n  }\n"]))),I=(0,$.Ps)(s||(s=(0,U.Z)(["\n  query CheckDuplicateEmail($email: String!) {\n    users: User_public(where: { email: { _eq: $email } }) {\n      id\n      nameFirst\n      nameLast\n      email\n      phone\n    }\n  }\n"]))),L=(0,$.Ps)(c||(c=(0,U.Z)(["\n  fragment UserFields on User {\n    id\n    email\n    nameFirst\n    nameLast\n    fullName\n    phone\n    status\n  }\n"]))),w=(0,$.Ps)(u||(u=(0,U.Z)(["\n  mutation SendGoogleAuthCode($code: String!, $id: Int!, $type: String!) {\n    createGoogleToken(code: $code, id: $id, type: $type) {\n      success\n      tokens\n      error\n    }\n  }\n"]))),P=(0,$.Ps)(m||(m=(0,U.Z)(["\n  mutation GenerateMSURL($type: String!, $id: Int!) {\n    genenrateMSURL(id: $id, type: $type) {\n      url\n    }\n  }\n"]))),q=(0,$.Ps)(d||(d=(0,U.Z)(["\n  mutation signoutMS($id: Int!, $type: String!, $email: String!) {\n    signoutMS(id: $id, type: $type, email: $email) {\n      error\n      msId\n      success\n    }\n  }\n"]))),Z=(0,$.Ps)(l||(l=(0,U.Z)(["\n  query getAccountMeta($id: Int!) {\n    account: Account_by_pk(id: $id) {\n      meta\n    }\n  }\n"]))),k=(0,$.Ps)(p||(p=(0,U.Z)(["\n  query user($id: Int!) {\n    user: User_by_pk(id: $id) {\n      meta\n    }\n  }\n"]))),R=(0,$.Ps)(_||(_=(0,U.Z)(["\n  mutation updateAccount($accountId: Int!, $set: Account_set_input!) {\n    update_Account_by_pk(pk_columns: { id: $accountId }, _set: $set) {\n      id\n    }\n  }\n"]))),C=(0,$.Ps)(f||(f=(0,U.Z)(["\n  mutation updateUserMeta($userId: Int!, $meta: jsonb!) {\n    update_User_by_pk(pk_columns: { id: $userId }, _set: { meta: $meta }) {\n      id\n      meta\n    }\n  }\n"]))),N=(0,$.Ps)(y||(y=(0,U.Z)(['\n  query userDevices($accountId: Int!) {\n    users: User(\n      where: {\n        Account_Users: { accountId: { _eq: $accountId }, status: { _eq: "active" } }\n        UserDevices: { status: { _eq: "active" } }\n        status: { _eq: "active" }\n      }\n    ) {\n      id\n      fullName\n      devices: UserDevices(\n        order_by: { updatedAt: desc_nulls_last }\n        where: { status: { _eq: "active" } }\n        limit: 1\n      ) {\n        id\n        playerId\n      }\n    }\n  }\n']))),j=(0,$.Ps)(h||(h=(0,U.Z)(['\n  query GetAccountLocations($accountId: Int, $limit: Int, $offset: Int) {\n    location: Location(\n      offset: $offset\n      limit: $limit\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      id\n      name\n      accountLocations: Account_Locations {\n        id\n      }\n      addresses: Addresses(where: { entity: { _eq: "Location" }, registered: { _eq: true } }) {\n        id\n        status\n        address: Address {\n          id\n          name\n          addressLine1\n          postCode\n        }\n      }\n    }\n    meta: Location_aggregate(\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),D=(0,$.Ps)(A||(A=(0,U.Z)(["\n  mutation InsertUserAccountLocations(\n    $accountUserId: Int!\n    $objects: [User_Account_Location_insert_input!]!\n  ) {\n    delete_User_Account_Location(where: { accountUserId: { _eq: $accountUserId } }) {\n      affected_rows\n    }\n    insert_User_Account_Location(objects: $objects) {\n      affected_rows\n      returning {\n        id\n      }\n    }\n  }\n"])))},10733:function(n,e,a){"use strict";a.r(e),a.d(e,{default:function(){return j}});var t,r,o,i=a(66918),s=a(92809),c=a(30266),u=a(80318),m=a(64687),d=a.n(m),l=a(67294),p=a(26075),_=a(38460),f=a(75709),y=a(52209),h=a(54397),A=(0,h.Ps)(t||(t=(0,y.Z)(["\n  query GetAdmin($id: Int!) {\n    admin: Account_by_pk(id: $id) {\n      id\n      name\n      website\n      companyNumber\n      vatId\n      status\n      type\n      meta\n      contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n        id\n        isContact\n        userId\n        user: User {\n          id\n          email\n          fullName\n          meta\n          name: nameFirst\n          nameFirst\n          nameLast\n          phone\n          status\n        }\n      }\n      managerSelected: Manager {\n        id\n        label: fullName\n        value: id\n      }\n    }\n  }\n"]))),U=(0,h.Ps)(r||(r=(0,y.Z)(["\n  mutation AddAdmin($objects: [Account_insert_input!]!) {\n    insert_Account(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]))),$=(0,h.Ps)(o||(o=(0,y.Z)(["\n  mutation UpdateAdmin($adminId: Int!, $admin: Account_set_input) {\n    update_Account_by_pk(pk_columns: { id: $adminId }, _set: $admin) {\n      id\n    }\n  }\n"]))),b=a(11163),g=a(43566),S=a(11652),v=a(23154),I=a(94543),L=[{area:"AB",name:"Aberdeen"},{area:"AL",name:"St. Albans"},{area:"B",name:"Birmingham"},{area:"BA",name:"Bath"},{area:"BB",name:"Blackburn"},{area:"BD",name:"Bradford"},{area:"BH",name:"Bournemouth"},{area:"BL",name:"Bolton"},{area:"BN",name:"Brighton"},{area:"BR",name:"Bromley"},{area:"BS",name:"Bristol"},{area:"BT",name:"Belfast"},{area:"CA",name:"Carlisle"},{area:"CB",name:"Cambridge"},{area:"CF",name:"Cardiff"},{area:"CH",name:"Chester"},{area:"CM",name:"Chelmsford"},{area:"CO",name:"Colchester"},{area:"CR",name:"Croydon"},{area:"CT",name:"Canterbury"},{area:"CV",name:"Coventry"},{area:"CW",name:"Crewe"},{area:"DA",name:"Dartford"},{area:"DD",name:"Dundee"},{area:"DE",name:"Derby"},{area:"DG",name:"Dumfries"},{area:"DH",name:"Durham"},{area:"DL",name:"Darlington"},{area:"DN",name:"Doncaster"},{area:"DT",name:"Dorchester"},{area:"DY",name:"Dudley"},{area:"E",name:"London E"},{area:"EC",name:"London EC"},{area:"EH",name:"Edinburgh"},{area:"EN",name:"Enfield"},{area:"EX",name:"Exeter"},{area:"FK",name:"Falkirk"},{area:"FY",name:"Blackpool"},{area:"G",name:"Glasgow"},{area:"GL",name:"Gloucester"},{area:"GU",name:"Guildford"},{area:"GY",name:"Guernsey"},{area:"HA",name:"Harrow"},{area:"HD",name:"Huddersfield"},{area:"HG",name:"Harrogate"},{area:"HP",name:"Hemel Hempstead"},{area:"HR",name:"Hereford"},{area:"HS",name:"Western Isles"},{area:"HU",name:"Hull"},{area:"HX",name:"Halifax"},{area:"IG",name:"Ilford"},{area:"IM",name:"Isle Of Man"},{area:"IP",name:"Ipswich"},{area:"IV",name:"Inverness"},{area:"JE",name:"Jersey"},{area:"KA",name:"Kilmarnock"},{area:"KT",name:"Kingston Upon Thames"},{area:"KW",name:"Kirkwall"},{area:"KY",name:"Kirkcaldy"},{area:"L",name:"Liverpool"},{area:"LA",name:"Lancaster"},{area:"LD",name:"Llandrindod Wells"},{area:"LE",name:"Leicester"},{area:"LL",name:"Llandudno"},{area:"LN",name:"Lincoln"},{area:"LS",name:"Leeds"},{area:"LU",name:"Luton"},{area:"M",name:"Manchester"},{area:"ME",name:"Medway"},{area:"MK",name:"Milton Keynes"},{area:"ML",name:"Motherwell"},{area:"N",name:"London N"},{area:"NE",name:"Newcastle Upon Tyne"},{area:"NG",name:"Nottingham"},{area:"NN",name:"Northampton"},{area:"NP",name:"Newport"},{area:"NR",name:"Norwich"},{area:"NW",name:"London NW"},{area:"OL",name:"Oldham"},{area:"OX",name:"Oxford"},{area:"PA",name:"Paisley"},{area:"PE",name:"Peterborough"},{area:"PH",name:"Perth"},{area:"PL",name:"Plymouth"},{area:"PO",name:"Portsmouth"},{area:"PR",name:"Preston"},{area:"RG",name:"Reading"},{area:"RH",name:"Redhill"},{area:"RM",name:"Romford"},{area:"S",name:"Sheffield"},{area:"SA",name:"Swansea"},{area:"SE",name:"London SE"},{area:"SG",name:"Stevenage"},{area:"SK",name:"Stockport"},{area:"SL",name:"Slough"},{area:"SM",name:"Sutton"},{area:"SN",name:"Swindon"},{area:"SO",name:"Southampton"},{area:"SP",name:"Salisbury"},{area:"SR",name:"Sunderland"},{area:"SS",name:"Southend-On-Sea"},{area:"ST",name:"Stoke-On-Trent"},{area:"SW",name:"London SW"},{area:"SY",name:"Shrewsbury"},{area:"TA",name:"Taunton"},{area:"TD",name:"Galashiels"},{area:"TF",name:"Telford"},{area:"TN",name:"Tonbridge"},{area:"TQ",name:"Torquay"},{area:"TR",name:"Truro"},{area:"TS",name:"Cleveland"},{area:"TW",name:"Twickenham"},{area:"UB",name:"Southall"},{area:"W",name:"London W"},{area:"WA",name:"Warrington"},{area:"WC",name:"London WC"},{area:"WD",name:"Watford"},{area:"WF",name:"Wakefield"},{area:"WN",name:"Wigan"},{area:"WR",name:"Worcester"},{area:"WS",name:"Walsall"},{area:"WV",name:"Wolverhampton"},{area:"YO",name:"York"},{area:"ZE",name:"Lerwick"}],w=[{type:"priority",name:"P1",normalRate:1,oohRate:1,premiumRate:1,minimumInterval:30,minimumLength:90,onSite:60,onSiteUnit:"minutes",jobReport:4,jobReportUnit:"hours",completion:2,completionUnit:"days",notes:"Danger to life"},{type:"priority",name:"P2",normalRate:1,oohRate:1,premiumRate:1,minimumInterval:30,minimumLength:60,onSite:8,onSiteUnit:"hours",jobReport:24,jobReportUnit:"hours",completion:4,completionUnit:"days",notes:"Immediate attention required"},{type:"priority",name:"P3",normalRate:1,oohRate:1,premiumRate:1,minimumInterval:30,minimumLength:60,onSite:24,onSiteUnit:"hours",jobReport:2,jobReportUnit:"days",completion:7,completionUnit:"days",notes:"Prompt attention required"},{type:"priority",name:"P4",normalRate:1,oohRate:1,premiumRate:1,minimumInterval:30,minimumLength:60,onSite:2,onSiteUnit:"days",jobReport:5,jobReportUnit:"days",completion:10,completionUnit:"days",notes:"Next day"},{type:"priority",name:"P5",normalRate:1,oohRate:1,premiumRate:1,minimumInterval:30,minimumLength:60,onSite:7,onSiteUnit:"days",jobReport:14,jobReportUnit:"days",completion:14,completionUnit:"days",notes:"Non-urgent"}],P=a(19501),q=function(){return(0,P.Ry)().shape({managerSelected:(0,P.Ry)().required(),name:(0,P.Z_)().required(),website:(0,P.Z_)().required(),companyNumber:(0,P.Z_)(),vatId:(0,P.Z_)(),status:(0,P.Z_)().oneOf(["active","inactive"]).required(),timeZone:(0,P.Ry)().shape({label:(0,P.Z_)().required(),value:(0,P.Z_)().required()}),contactUseremail:(0,P.Z_)().when("contactUser",{is:"true",then:(0,P.Z_)().required()}),contactUsernameFirst:(0,P.Z_)().when("contactUser",{is:"true",then:(0,P.Z_)().required()}),contactUsernameLast:(0,P.Z_)().when("contactUser",{is:"true",then:(0,P.Z_)().required()}),contactUserphone:(0,P.Z_)().when("contactUser",{is:"true",then:(0,P.Z_)().required()}),contactUserstatus:(0,P.Z_)().when("contactUser",{is:"true",then:(0,P.Z_)().required()})})},Z=a(85893);function k(n,e){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),a.push.apply(a,t)}return a}function R(n){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?k(Object(a),!0).forEach((function(e){(0,s.Z)(n,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):k(Object(a)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(a,e))}))}return n}var C="/dashboard/admins/",N=function(){var n=(0,p.x)(),e=(0,l.useContext)(g.Z).user,a=(0,b.useRouter)().query,t=void 0===a?{}:a,r=(0,_.t)(A,{variables:{id:t.id}}),o=(0,u.Z)(r,2),i=o[0],s=o[1],m=s.loading,y=s.data,h=(y=void 0===y?{admin:{}}:y).admin;(0,l.useEffect)((function(){t.id&&i()}),[]);var P=(0,f.D)(U,{onCompleted:function(){var n=(0,c.Z)(d().mark((function n(e){var a;return d().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:a=e.insert_Account.returning[0].id,b.default.push("".concat(C,"view?id=").concat(a));case 2:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()}),k=(0,u.Z)(P,1)[0],N=(0,f.D)($,{onCompleted:function(n){var e=n.update_Account_by_pk.id;b.default.push("".concat(C,"view?id=").concat(e))}}),j=(0,u.Z)(N,1)[0],D=function(){var e=(0,c.Z)(d().mark((function e(a){var r,o,i,s;return d().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if((o={}).Admin={managerId:null===a||void 0===a||null===(r=a.managerSelected)||void 0===r?void 0:r.value,name:a.name,website:a.website,companyNumber:a.companyNumber,vatId:a.vatId,status:a.status,type:"admin"},i={},S.o.forEach((function(n){var e;i[n.value]=null===(e=a.modules)||void 0===e?void 0:e.includes(n.value)})),!t.id){e.next=12;break}return o.Admin.meta=R({},h.meta)||{},o.Admin.meta.timeZone=R({},a.timeZone),o.Admin.meta.modules=i,e.next=10,j({variables:{adminId:h.id,admin:o.Admin}});case 10:e.next=22;break;case 12:return e.next=14,(0,v.E)(n,a.contactUseremail,!0);case 14:return s=e.sent,o.Admin.meta={modules:i,timeZone:R({},a.timeZone)},o.AdminSLAs={data:w.map((function(n){return n.status="active",n}))},o.AdminPostcodeAreas={data:L.map((function(n){return n.status="active",n.countryId=1,n}))},o.Account_Users={data:[{isContact:!0,role:"owner",status:a.contactUserstatus}]},s?o.Account_Users.data[0].userId=s.id:o.Account_Users.data[0].User={data:{nameFirst:a.contactUsernameFirst,nameLast:a.contactUsernameLast,email:a.contactUseremail,phone:a.contactUserphone,status:"active",meta:{notificationSettings:{sms:!0,email:!0,toast:!0,pushNotification:!0}}}},e.next=22,k({variables:{objects:R(R({},o.Admin),{},{AdminPostcodeAreas:o.AdminPostcodeAreas,AdminSLAs:o.AdminSLAs,Account_Users:o.Account_Users})}});case 22:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}();return(!m||!t.id)&&(0,Z.jsx)(I.P,{account:h.id?h:null,id:t.id||null,onSubmit:D,schema:q,type:"admin",user:e},h?h.id:"new")},j=function(){return(0,Z.jsx)(i.Z,{pageHeading:{heading:"Admins - Manage"},View:(0,Z.jsx)(N,{})})}},66553:function(n,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/dashboard/admins/manage",function(){return a(10733)}])}},function(n){n.O(0,[284,4195,5312,7287,7134,3486,9082,3515,8678,5146,5998,9774,2888,179],(function(){return e=66553,n(n.s=e);var e}));var e=n.O();_N_E=e}]);