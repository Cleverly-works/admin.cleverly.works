"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6178],{66805:function(n,e,t){t.d(e,{H:function(){return c}});var i=t(92809),r=t(77417),a=t(58448),o=t(14347),s=t(85893);function d(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function u(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?d(Object(t),!0).forEach((function(e){(0,i.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):d(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var c=function(n){var e=n.children,t=n.content,i=n.context,d=n.data,c=n.disabled,m=n.handleClick,l=n.size,p=n.type;return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.Z,{size:"sm"}),(0,s.jsxs)(a.Z,{align:"flex-end",children:[e,(0,s.jsx)(o.Z,u({content:t,context:i,disabled:c,onClick:m,size:l,type:p},d))]})]})};c.defaultProps={content:"Add",context:"secondary",disabled:!1,size:"sm",type:"button"}},76800:function(n,e,t){t.d(e,{M:function(){return l}});var i=t(92809),r=t(10219),a=t(42426),o=t(19716),s=t(22796),d=t(85893),u=["control","errors","name","space"];function c(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function m(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?c(Object(t),!0).forEach((function(e){(0,i.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var l=function(n){var e=n.control,t=n.errors,i=n.name,c=n.space,l=(0,r.Z)(n,u);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(o.Z,m({control:e,errors:t,locale:a.Z,name:i},l)),c&&(0,d.jsx)(s.Z,{marginBottom:"sm"})]})};l.defaultProps={space:!0}},84774:function(n,e,t){t.d(e,{E6:function(){return _},mJ:function(){return v},qD:function(){return j},uA:function(){return A},FA:function(){return O},r2:function(){return w},k7:function(){return q},TY:function(){return x},Ab:function(){return S},bZ:function(){return $},Tw:function(){return R},wU:function(){return P},iU:function(){return Z}});var i,r,a,o,s,d,u,c,m,l,p,y,b,g,f=t(52209),h=t(54397),I=t(88402),_=(0,h.Ps)(i||(i=(0,f.Z)(['\n  query GetJob($adminId: Int!, $number: String!) {\n    job: Job(where: { adminId: { _eq: $adminId }, number: { _eq: $number } }) {\n      id\n      number\n      adminId\n      title\n      description\n      reference\n      access\n      costCategory\n      pricing\n      timing\n      timingStart\n      timingEnd\n      timingNormalHours\n      paymentMethod\n      customerSpendThreshold\n      time\n      amount\n      supplierLabourAmount\n      supplierMaterialsAmount\n      source\n      discount\n      customerDeposit\n      timingStatus\n      correctDuration\n      correctStart\n      correctEnd\n      invoiceNumbers: Invoices(where: { invoiceType: { _eq: "customerVat" } }) {\n        id\n      }\n      invoices: Invoices {\n        reconciledAmount: Reconciliations_aggregate {\n          aggregate {\n            sum {\n              amount\n            }\n          }\n        }\n        amountPaid: Reconciliations_aggregate(where: { creditEntity: { _eq: "PaymentReceipt" } }) {\n          aggregate {\n            sum {\n              amount\n            }\n          }\n        }\n        amountDeducted: Reconciliations_aggregate(where: { creditEntity: { _eq: "CreditNote" } }) {\n          aggregate {\n            sum {\n              amount\n            }\n          }\n        }\n      }\n      customer: Customer {\n        meta\n      }\n      supplierDeposit\n      rebate\n      status\n      workStatus\n      supplierNotes\n      ppm\n      quoted\n      quoteNumber\n      quoteDue\n      scheduledAt\n      createdAt\n      updatedAt\n      customerId\n      customerUserId\n      locationId\n      managerId\n      parentId\n      serviceId\n      slaId\n      siteVisitStart\n      siteVisitEnd\n      siteVisitWeekends\n      tenantId\n      quoteCharge\n      quoteChargeAmount\n      jobScheduleId\n      type\n      meta\n      compliances: Compliances(where: { entity: { _eq: "Job" } }) {\n        id\n        compliance: Compliance {\n          id\n          name\n        }\n      }\n      assets: Assets {\n        id\n        status\n        entity\n        entityId\n        Asset {\n          name\n          serialNumber\n          id\n        }\n      }\n      assetCategory: AssetCategory {\n        name\n        id\n      }\n      asset: Asset {\n        id\n        bookable\n        createdAt\n        locationId\n        meta\n        name\n        customFields\n        customer: Account {\n          id\n          name\n          type\n        }\n        location: Location {\n          id\n          name\n        }\n        userId: User {\n          value: id\n          label: fullName\n        }\n        parentId: ParentAsset {\n          value: id\n          label: fullName\n          media: Media(where: { entity: { _eq: "Asset" } }) {\n            id\n            item: Medium {\n              id\n              name\n              filename\n              category\n            }\n          }\n        }\n      }\n      admin: Admin {\n        id\n        name\n        meta\n        bankAccounts: BankAccounts {\n          id\n          bank\n          stripeId\n          accountNumber\n          routingNumber\n          bic\n          iban\n          status\n          default\n          createdAt\n          meta\n        }\n        addresses: Addresses {\n          id\n          registered\n          operating\n          trading\n          invoice\n          status\n          createdAt\n          address: Address {\n            id\n            name\n            addressLine1\n            addressLine2\n            addressLine3\n            city\n            county\n            geo\n            postCode\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n      }\n      customer: Customer {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n        financial: Financial {\n          id\n          amountOutstanding\n          approvalThreshold\n          arrangementFee\n          createdAt\n          creditLimit\n          creditRating\n          defaultPaymentMethod\n          invoicing\n          serviceRate\n          spendThreshold\n          stripeId\n          totalRevenue\n          unpaidInvoices\n        }\n        slas: SLAs(where: { entity: { _eq: "Account" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n        services: Services(where: { entity: { _eq: "Account" } }) {\n          id\n          dayRate\n          dayRateOOH\n          dayRatePremium\n          hourRate\n          hourRateOOH\n          hourRatePremium\n          meta\n          minimumInterval\n          minimumLength\n          callOutHourRate\n          callOutHourRateOOH\n          callOutHourRatePremium\n          notes\n          delivery\n          createdAt\n          updatedAt\n          entity\n          entityId\n          serviceId\n        }\n        addresses: Addresses(where: { entity: { _eq: "Account" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n      }\n      customerUser: CustomerUser {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        meta\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      expenses: Expenses {\n        id\n        amount\n        description\n        markup\n        total\n        unit\n        vat\n        paid\n      }\n      location: Location {\n        id\n        access\n        createdAt\n        name\n        contactUserId\n        addresses: Addresses(where: { entity: { _eq: "Location" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            countryId\n            country: Country {\n              id\n              name\n              code\n            }\n          }\n        }\n        slas: SLAs(where: { entity: { _eq: "Location" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n        services: Services(where: { entity: { _eq: "Location" } }) {\n          id\n          dayRate\n          dayRateOOH\n          dayRatePremium\n          hourRate\n          hourRateOOH\n          hourRatePremium\n          meta\n          minimumInterval\n          minimumLength\n          callOutHourRate\n          callOutHourRateOOH\n          callOutHourRatePremium\n          notes\n          delivery\n          createdAt\n          updatedAt\n          entity\n          entityId\n          serviceId\n        }\n      }\n      financeLogs: JobFinanceLogs(order_by: { createdAt: desc }) {\n        id\n        type\n        value\n        difference\n        createdAt\n      }\n      manager: Manager {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      quotations: SupplierQuotes(\n        where: { status: { _neq: "cancelled" } }\n        order_by: { quoteNumber: asc }\n      ) {\n        id\n        createdAt\n        jobId\n        methodStatement\n        notes\n        quoteNumber\n        startDate\n        rebate\n        recommended\n        status\n        totalDuration\n        totalDurationUnit\n        meta\n        updatedAt\n        siteVisitAt\n        type\n        lineItems: SupplierQuoteLineItems {\n          id\n          description\n          item\n          qty\n          qtyUnit\n          quoteId\n          supplierTotal\n          total\n          type\n          unitRate\n        }\n        supplier: Supplier {\n          id\n          companyNumber\n          createdAt\n          name\n          status\n          type\n          updatedAt\n          website\n          clientType\n          managerId\n          vatId\n          meta\n          accountUsers: Account_Users {\n            user: User {\n              id\n              fullName\n              nameFirst\n              nameLast\n              phone\n              email\n              devices: UserDevices(where: { status: { _eq: "active" } }) {\n                id\n                playerId\n              }\n            }\n          }\n          media: Media {\n            id\n            medium: Medium {\n              id\n              category\n              filename\n              meta\n              type\n            }\n          }\n          manager: Manager {\n            id\n            fullName\n          }\n        }\n        media: Media(where: { entity: { _eq: "Quotation" } }) {\n          id\n        }\n      }\n      report: JobReport {\n        id\n        completion\n        meta\n        notes\n        timing\n        createdAt\n        updatedAt\n      }\n      service: Service {\n        id\n        name\n        countryId\n        currencyId\n        customerDayRate\n        customerDayRateOOH\n        customerDayRatePremium\n        customerHourRate\n        customerHourRateOOH\n        customerHourRatePremium\n        supplierDayRate\n        supplierDayRateOOH\n        supplierDayRatePremium\n        supplierHourRate\n        supplierHourRateOOH\n        supplierHourRatePremium\n        minimumInterval\n        minimumLength\n      }\n      sla: SLA {\n        id\n        name\n        notes\n        normalRate\n        oohRate\n        premiumRate\n        onSite\n        onSiteUnit\n        jobReport\n        jobReportUnit\n        completion\n        completionUnit\n        minimumInterval\n        minimumLength\n      }\n      media: Media {\n        id\n        item: Medium {\n          id\n          name\n          type\n          filename\n          category\n          meta\n        }\n      }\n      supplier: Supplier {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n        contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n          role\n          position\n          isContact\n          lastSignInAt\n          userId\n          user: User {\n            id\n            name: nameFirst\n            nameFirst\n            nameLast\n            phone\n            status\n            email\n            createdAt\n            fullName\n            accounts: Account_Users {\n              id\n              role\n              position\n              isContact\n              status\n              account: Account {\n                id\n                name\n                type\n              }\n            }\n          }\n        }\n        addresses: Addresses(where: { entity: { _eq: "Account" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n        services: Services(where: { entity: { _eq: "Account" } }) {\n          id\n          dayRate\n          dayRateOOH\n          dayRatePremium\n          hourRate\n          hourRateOOH\n          hourRatePremium\n          meta\n          minimumInterval\n          minimumLength\n          callOutHourRate\n          callOutHourRateOOH\n          callOutHourRatePremium\n          notes\n          delivery\n          createdAt\n          updatedAt\n          entity\n          entityId\n          serviceId\n        }\n      }\n      supplierUser: SupplierUser {\n        id\n        meta\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      supplierOffers: SupplierOffers {\n        id\n        status\n        rate\n        dayRate\n        meta\n        notes\n        statusLog\n        account: Supplier {\n          id\n          companyNumber\n          createdAt\n          name\n          status\n          type\n          updatedAt\n          website\n          clientType\n          managerId\n          vatId\n          meta\n          media: Media {\n            id\n            medium: Medium {\n              id\n              category\n              filename\n              meta\n              type\n            }\n          }\n          manager: Manager {\n            id\n            fullName\n          }\n        }\n      }\n      tenant: Tenant {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n      }\n      tenantUser: TenantUser {\n        id\n        fullName\n        nameFirst\n        nameLast\n        email\n        phone\n      }\n      timings: JobTimings(order_by: { id: desc }) {\n        id\n        status\n        notes\n        meta\n        quoteId\n        createdAt\n        user: User {\n          id\n          fullName\n        }\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      answers: Taxonomy(\n        where: { Taxonomy: { type: { _eq: "jobQuestion" } } }\n        order_by: { taxonomyId: asc }\n      ) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      costCategoryTaxonomy: CostCategory {\n        id\n        name\n      }\n      parentJob: ParentJob {\n        createdAt\n        id\n        number\n        reference\n        status\n        title\n        type\n      }\n      childJobs: Jobs {\n        createdAt\n        id\n        number\n        reference\n        status\n        title\n        type\n      }\n      compliances: Compliances(where: { entity: { _eq: "Job" } }) {\n        id\n      }\n    }\n  }\n  ',"\n  ","\n"])),I.WW,I.MR),v=((0,h.Ps)(r||(r=(0,f.Z)(["\n  mutation AddJob($objects: [Job_insert_input!]!) {\n    insert_Job(objects: $objects) {\n      affected_rows\n      returning {\n        id\n      }\n    }\n  }\n"]))),(0,h.Ps)(a||(a=(0,f.Z)(["\n  mutation MyMutation($objects: [CreateJobInput]!, $adminId: Int!) {\n    createJob(adminId: $adminId, objects: $objects) {\n      data\n    }\n  }\n"])))),j=(0,h.Ps)(o||(o=(0,f.Z)(["\n  mutation UpdateJob($id: Int!, $changes: Job_set_input) {\n    update_Job_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n      status\n    }\n  }\n"]))),A=(0,h.Ps)(s||(s=(0,f.Z)(['\n  mutation UpdateJob(\n    $jobId: Int!\n    $changes: Job_set_input\n    $deletedAssetIds: [Int!]\n    $assets: [Asset_Entity_insert_input!]!\n    $questions: [Taxonomy_Entity_insert_input!]!\n    $hasQuestions: Boolean!\n    $compliances: [Compliance_Entity_insert_input!]!\n  ) {\n    update_Job_by_pk(pk_columns: { id: $jobId }, _set: $changes) {\n      id\n      status\n      number\n    }\n    insert_Asset_Entity(objects: $assets) {\n      returning {\n        assetId\n        entity\n        id\n        entityId\n        status\n      }\n    }\n    delete_Asset_Entity(where: { id: { _in: $deletedAssetIds } }) {\n      returning {\n        assetId\n        entityId\n        entity\n        id\n      }\n    }\n    delete_Taxonomy_Entity(where: { entityId: { _eq: $jobId }, entity: { _eq: "Job" } }) {\n      returning {\n        id\n      }\n    }\n    insert_Taxonomy_Entity(objects: $questions) @include(if: $hasQuestions) {\n      returning {\n        id\n      }\n    }\n    delete_Compliance_Entity(where: { entityId: { _eq: $jobId }, entity: { _eq: "Job" } }) {\n      returning {\n        id\n      }\n    }\n    insert_Compliance_Entity(objects: $compliances) {\n      returning {\n        id\n      }\n    }\n  }\n']))),O=(0,h.Ps)(d||(d=(0,f.Z)(['\n  mutation UpdateJob(\n    $jobId: Int!\n    $changes: Job_set_input\n    $questions: [Taxonomy_Entity_insert_input!]!\n    $hasQuestions: Boolean!\n  ) {\n    update_Job_by_pk(pk_columns: { id: $jobId }, _set: $changes) {\n      id\n      status\n    }\n    delete_Taxonomy_Entity(where: { entityId: { _eq: $jobId }, entity: { _eq: "Job" } }) {\n      returning {\n        id\n      }\n    }\n    insert_Taxonomy_Entity(objects: $questions) @include(if: $hasQuestions) {\n      returning {\n        id\n      }\n    }\n  }\n']))),w=(0,h.Ps)(u||(u=(0,f.Z)(["\n  mutation AddJob($objects: [JobTiming_insert_input!]!) {\n    insert_JobTiming(objects: $objects) {\n      returning {\n        id\n        status\n        notes\n        createdAt\n      }\n    }\n  }\n"]))),q=(0,h.Ps)(c||(c=(0,f.Z)(["\n  mutation DeleteJobTiming($id: Int!, $quoteId: Int, $status: String) {\n    delete_JobTiming(\n      where: { jobId: { _eq: $id }, quoteId: { _eq: $quoteId }, status: { _eq: $status } }\n    ) {\n      returning {\n        jobId\n        status\n      }\n    }\n  }\n"]))),x=(0,h.Ps)(m||(m=(0,f.Z)(['\n  query GetJobPredefined(\n    $accountId: Int!\n    $locationId: Int!\n    $parentId: Int!\n    $assetId: Int!\n    $includeAccount: Boolean!\n    $includeLocation: Boolean!\n    $includeParentJob: Boolean!\n    $includeAsset: Boolean!\n  ) {\n    parentJob: Job_by_pk(id: $parentId) @include(if: $includeParentJob) {\n      id\n      title\n      description\n      reference\n      access\n      source\n      slaId\n      paymentMethod\n      pricing\n      customerSpendThreshold\n      amount\n      supplierLabourAmount\n      supplierMaterialsAmount\n      admin: Admin {\n        id\n        name\n      }\n      customer: Customer {\n        id\n        companyNumber\n        createdAt\n        name\n        status\n        type\n        updatedAt\n        website\n        clientType\n        managerId\n        vatId\n        meta\n        media: Media {\n          id\n          medium: Medium {\n            id\n            category\n            filename\n            meta\n            type\n          }\n        }\n        manager: Manager {\n          id\n          fullName\n        }\n      }\n      customerUser: CustomerUser {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      location: Location {\n        id\n        access\n        createdAt\n        name\n        contactUserId\n      }\n      assets: Assets {\n        id\n        status\n        entity\n        entityId\n        Asset {\n          name\n          serialNumber\n          id\n        }\n      }\n      assetCategory: AssetCategory {\n        name\n        id\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      answers: Taxonomy(\n        where: { Taxonomy: { type: { _eq: "jobQuestion" } } }\n        order_by: { taxonomyId: asc }\n      ) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      costCategoryTaxonomy: CostCategory {\n        id\n        name\n      }\n      childJobs: Jobs {\n        createdAt\n        id\n        reference\n        status\n        title\n      }\n      compliances: Compliances(where: { entity: { _eq: "Job" } }) {\n        id\n        compliance: Compliance {\n          id\n          name\n        }\n      }\n      manager: Manager {\n        id\n        name: nameFirst\n        nameFirst\n        nameLast\n        phone\n        status\n        email\n        createdAt\n        fullName\n        accounts: Account_Users {\n          id\n          role\n          position\n          isContact\n          status\n          account: Account {\n            id\n            name\n            type\n          }\n        }\n      }\n      service: Service {\n        id\n        name\n        countryId\n        currencyId\n        customerDayRate\n        customerDayRateOOH\n        customerDayRatePremium\n        customerHourRate\n        customerHourRateOOH\n        customerHourRatePremium\n        supplierDayRate\n        supplierDayRateOOH\n        supplierDayRatePremium\n        supplierHourRate\n        supplierHourRateOOH\n        supplierHourRatePremium\n        minimumInterval\n        minimumLength\n      }\n    }\n    customer: Account_by_pk(id: $accountId) @include(if: $includeAccount) {\n      id\n      name\n    }\n    location: Location_by_pk(id: $locationId) @include(if: $includeLocation) {\n      id\n      name\n      customerAssociations: Account_Locations(where: { Account: { type: { _eq: "customer" } } }) {\n        customer: Account {\n          id\n          name\n        }\n      }\n    }\n    asset: Asset_by_pk(id: $assetId) @include(if: $includeAsset) {\n      id\n      name\n      Category {\n        name\n        id\n      }\n    }\n  }\n']))),S=(0,h.Ps)(l||(l=(0,f.Z)(['\n  query GetSLAsForJobManage($customerId: Int, $locationId: Int) {\n    customerSlas: SLA_Entity(\n      where: { entityId: { _eq: $customerId }, entity: { _eq: "Account" } }\n    ) {\n      sla: SLA {\n        name\n      }\n      id\n      inUse\n      onSite\n      onSiteUnit\n      createdAt\n      updatedAt\n      notes\n      slaId\n    }\n    locationSlas: SLA_Entity(\n      where: { entityId: { _eq: $locationId }, entity: { _eq: "Location" } }\n    ) {\n      sla: SLA {\n        name\n      }\n      id\n      inUse\n      onSite\n      onSiteUnit\n      createdAt\n      updatedAt\n      notes\n      slaId\n      entity\n    }\n    slas: SLA(where: { status: { _eq: "active" } }, order_by: { name: asc }) {\n      id\n      label: name\n      notes\n      onSite\n      onSiteUnit\n      createdAt\n      updatedAt\n      type\n    }\n  }\n']))),$=(0,h.Ps)(p||(p=(0,f.Z)(["\n  query GetJobFinanceLogs($jobId: Int!) {\n    logs: JobFinanceLog(where: { jobId: { _eq: $jobId } }, order_by: { createdAt: desc }) {\n      id\n      type\n      value\n      difference\n      createdAt\n      meta\n    }\n  }\n"]))),R=(0,h.Ps)(y||(y=(0,f.Z)(["\n  mutation AddJobFinanceLog($objects: [JobFinanceLog_insert_input!]!) {\n    insert_JobFinanceLog(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]))),P=(0,h.Ps)(b||(b=(0,f.Z)(["\n  mutation AddJob(\n    $timing: [JobTiming_insert_input!]!\n    $financeLog: [JobFinanceLog_insert_input!]!\n    $hasFinanceLog: Boolean!\n    $jobId: Int!\n    $jobChange: Job_set_input\n  ) {\n    insert_JobTiming(objects: $timing) {\n      returning {\n        id\n        status\n        notes\n        createdAt\n      }\n    }\n    insert_JobFinanceLog(objects: $financeLog) @include(if: $hasFinanceLog) {\n      returning {\n        id\n      }\n    }\n    update_Job_by_pk(pk_columns: { id: $jobId }, _set: $jobChange) @include(if: $hasFinanceLog) {\n      id\n      status\n    }\n  }\n"]))),Z=(0,h.Ps)(g||(g=(0,f.Z)(["\n  mutation calculateJobFinance($jobId: Int!, $invoiceType: String!) {\n    calculateJobFinance(jobId: $jobId, invoiceType: $invoiceType) {\n      data\n    }\n  }\n"])))},39821:function(n,e,t){t.d(e,{C:function(){return r},G:function(){return a}});var i=t(19501),r=function(n,e){return(0,i.Ry)().shape({managerSelected:e("admin")&&(0,i.Ry)().required(),customerSelected:(0,i.Ry)().nullable().required(),customerUserSelected:(0,i.Ry)().required(),source:e("admin")&&(0,i.Z_)().oneOf(["call","email","portal","other"]).required(),slaId:!n.quoted&&(0,i.Rx)().required(),description:(0,i.Z_)().required(),taxonomyId_ShortDesc:(0,i.Ry)().required(),reference:(0,i.Z_)(),locationSelected:(0,i.Ry)().required(),access:(0,i.Z_)().required(),pricing:!n.quoted&&(0,i.Z_)().oneOf(["time-materials","fixed"]),customerSpendThreshold:!n.quoted&&(0,i.Rx)().transform((function(n){return isNaN(n)?null:n})).nullable(),amount:!n.quoted&&(0,i.Rx)().transform((function(n){return isNaN(n)?null:n})).nullable(),supplierLabourAmount:!n.quoted&&(0,i.Rx)().transform((function(n){return isNaN(n)?null:n})).nullable(),supplierMaterialsAmount:!n.quoted&&(0,i.Rx)().transform((function(n){return isNaN(n)?null:n})).nullable(),paymentMethod:!n.quoted&&(0,i.Z_)().oneOf(["card","invoice","N/A"]),quoteNumber:n.quoted&&(0,i.Z_)().required(),quoteDue:n.quoted&&(0,i.hT)().required(),siteVisitStart:n.quoted&&(0,i.hT)().when("siteVisitReq",{is:"true",then:(0,i.hT)().required()}),siteVisitEnd:n.quoted&&(0,i.hT)().when("siteVisitReq",{is:"true",then:(0,i.hT)().required()}),siteVisitWeekends:n.quoted&&(0,i.Z_)(),costCategorySelected:e(["admin","customer"])&&!n.quoted&&(0,i.Ry)().required(),serviceSelected:e(["admin","customer"])&&!n.quoted&&(0,i.Ry)().required(),timing:!n.quoted&&(0,i.Z_)().required().oneOf(["at","between"]),timingStart:!n.quoted&&(0,i.hT)().required(),timingEnd:!n.quoted&&(0,i.hT)().when("timing",{is:"between",then:(0,i.hT)().required()}),allowTimingNormalHours:!n.quoted&&(0,i.Z_)(),complianceSelected:(0,i.Ry)().when("compliance",{is:"true",then:(0,i.Ry)().required()})})},a=(0,i.Ry)().shape({title:(0,i.Z_)().required(),description:(0,i.Z_)().required(),access:(0,i.Z_)(),serviceSelected:(0,i.Ry)().required(),timingEnd:(0,i.hT)().required(),timingStart:(0,i.hT)().required()})},26933:function(n,e,t){t.d(e,{z:function(){return U}});var i=t(92809),r=t(30266),a=t(80318),o=t(64687),s=t.n(o),d=t(67294),u=t(42283),c=t(79665),m=t(30381),l=t.n(m),p=t(75709),y=t(53825),b=t(43566),g=t(97721),f=t(4513),h=t(97202),I=t(65375),_=t(71247),v=t(84550),j=t(31990),A=t(18944),O=t(66805),w=t(76800),q=t(3805),x=t(19501),S=(0,x.Ry)().shape({caption:(0,x.Z_)(),dropzone:(0,x.nK)().required()}),$=t(1323),R=t(55863),P=t(85893);function Z(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function k(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?Z(Object(t),!0).forEach((function(e){(0,i.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):Z(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var U=function(n){var e=n.accept,t=n.adminId,i=n.category,o=n.entity,m=n.entityId,x=n.expiryShow,Z=n.mediaMeta,U=n.multiple,T=n.onSuccess,M=n.type,J=n.showSubmitButton,L=(0,d.useState)(!1),C=L[0],N=L[1],D=(0,d.useState)(!1),E=D[0],F=D[1],H=(0,$.x)().hasRole,B=(0,u.cI)({resolver:(0,c.S)(S)}),V=B.control,z=B.errors,Q=B.handleSubmit,G=B.register,W=B.reset,K=(0,d.useContext)(b.Z).user,Y=(0,p.D)(y.xM),X=(0,a.Z)(Y,2),nn=X[0],en=X[1].loading,tn=(0,p.D)(y.tv),rn=(0,a.Z)(tn,2),an=rn[0],on=rn[1].loading,sn=function(){var n=(0,r.Z)(s().mark((function n(e){var a,d,u,c,p;return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return a=e.adminOnly,d=e.caption,u=e.dropzone,c=e.expiryAt,n.prev=1,N(!0),F(!1),n.t0=Promise,n.next=7,u.map(function(){var n=(0,r.Z)(s().mark((function n(e){var r,o,u,m,p,y,b,g;return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!e){n.next=10;break}return n.next=3,(0,q.V)(e,M);case 3:return o=n.sent,u=null,m=null,"image"===M?(p=o.key,y=o.data.find((function(n){return"large"===n.name})),u=y?y.relativePath:p,m={original:{relativePath:p},thumbnails:o.data||null}):u=o.key,b=function(){return"invoice"===i||a?k(k(k({},m),Z),{},{adminOnly:!0}):k(k({},m),Z)},g={adminId:t,category:i,caption:d,expiryAt:c?l()(c).utc().format():null,extension:null===(r=u)||void 0===r?void 0:r.split(".").pop(),userId:K.id,filename:u,meta:b(),type:M},n.abrupt("return",g);case 10:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}());case 7:return n.t1=n.sent,n.next=10,n.t0.all.call(n.t0,n.t1);case 10:p=n.sent,nn({variables:{objects:p}}).then(function(){var n=(0,r.Z)(s().mark((function n(e){var t,i,r;return s().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(t=e.data,i=t.insert_Media.returning,!o||!m){n.next=6;break}return r=i.map((function(n){return{mediaId:n.id,entity:o,entityId:m}})),n.next=6,an({variables:{objects:r}});case 6:W(),N(!1),T&&T(i);case 9:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()),n.next=19;break;case 14:n.prev=14,n.t2=n.catch(1),N(!1),F(!0),(0,R.Tb)({message:n.t2,section:"upload"});case 19:case"end":return n.stop()}}),n,null,[[1,14]])})));return function(e){return n.apply(this,arguments)}}(),dn={control:V,errors:z,register:G};if(C||en||on)return(0,P.jsx)(g.Z,{indicator:(0,P.jsx)(f.Z,{})});var un="image/*"===e?e+", .heic":e;return(0,P.jsxs)(h.Z,{id:"offCanvasForm",handleSubmit:Q(sn),children:[(0,P.jsx)(I.Z,{label:"Caption",children:(0,P.jsx)(_.Z,k(k({},dn),{},{name:"caption"}))}),H("admin")&&(0,P.jsx)(v.Z,k(k({},dn),{},{data:[{id:"adminOnly",label:"Admin Only",value:!0}],name:"adminOnly"})),x&&(0,P.jsxs)(P.Fragment,{children:[(0,P.jsx)(I.Z,{label:"Expiry"}),(0,P.jsx)(w.M,k(k({},dn),{},{name:"expiryAt"}))]}),(0,P.jsx)(I.Z,{label:"Media"}),(0,P.jsx)(u.Qr,k(k({},dn),{},{as:(0,P.jsx)(j.Z,{accept:un,multiple:U}),name:"dropzone"})),E&&(0,P.jsx)(A.Z,{context:"danger",content:"Can not upload Media"}),J&&(0,P.jsx)(O.H,{content:"Submit",type:"submit"})]})};U.defaultProps={accept:j.Z.defaultProps.accept,category:null,expiryShow:!0,mediaMeta:null,showSubmitButton:!1,type:"image"}},53825:function(n,e,t){t.d(e,{xM:function(){return u},tv:function(){return c},CI:function(){return m},o7:function(){return l}});var i,r,a,o,s=t(52209),d=t(54397),u=(0,d.Ps)(i||(i=(0,s.Z)(["\n  mutation AddMedia($objects: [Media_insert_input!]!) {\n    insert_Media(objects: $objects) {\n      returning {\n        id\n        filename\n      }\n    }\n  }\n"]))),c=(0,d.Ps)(r||(r=(0,s.Z)(["\n  mutation AddMediaEntity($objects: [Media_Entity_insert_input!]!) {\n    insert_Media_Entity(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]))),m=(0,d.Ps)(a||(a=(0,s.Z)(["\n  mutation DeleteMedia($id: Int!) {\n    delete_Media_by_pk(id: $id) {\n      id\n    }\n  }\n"]))),l=(0,d.Ps)(o||(o=(0,s.Z)(["\n  mutation UpdateMedia($changes: Media_set_input, $id: Int!) {\n    update_Media_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n    }\n  }\n"])))},6987:function(n,e,t){t.d(e,{V:function(){return i}});var i=function(){var n="cleverly-staging-media";return JSON.stringify([{width:32,height:32,bucket:n,sizeName:"vSmall",fit:"inside"},{width:200,height:200,bucket:n,sizeName:"small",fit:"inside"},{width:600,height:600,bucket:n,sizeName:"medium",fit:"inside"},{width:1200,height:1200,bucket:n,sizeName:"large",fit:"inside"}])}},3805:function(n,e,t){t.d(e,{V:function(){return s}});var i=t(30266),r=t(64687),a=t.n(r),o=t(6987),s=function(){var n=(0,i.Z)(a().mark((function n(e,t){var i,r,s,d,u;return a().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:i="cleverly-staging-media",r="https://aws-staging.cleverly.works/aws/s3/upload",(s=new window.FormData).append("file",e,e.name),n.t0=t,n.next="image"===n.t0?7:"document"===n.t0?10:"audio"===n.t0?14:18;break;case 7:return d="https://aws-staging.cleverly.works/image/process",s.append("sizes",(0,o.V)()),n.abrupt("break",19);case 10:case 14:return s.append("bucket",i),s.append("folder","".concat(t,"s")),d=r,n.abrupt("break",19);case 18:return n.abrupt("break",19);case 19:return n.next=21,window.fetch(d,{method:"POST",body:s});case 21:return u=n.sent,n.abrupt("return",u.json());case 23:case"end":return n.stop()}}),n)})));return function(e,t){return n.apply(this,arguments)}}()},36178:function(n,e,t){t.d(e,{Q:function(){return L}});var i=t(92809),r=t(67294),a=t(93633),o=t(13157),s=t(80880),d=t(14347),u=t(52002),c=t(30266),m=t(80318),l=t(64687),p=t.n(l),y=t(11163),b=t(30381),g=t.n(b),f=t(75709),h=t(84774),I=t(42283),_=t(79665),v=t(43566),j=t(97202),A=t(65375),O=t(71247),w=t(83528),q=t(78215),x=t(2356),S=t(76800),$=t(39821),R=t(26933),P=t(95146),Z=t(85893);function k(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function U(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?k(Object(t),!0).forEach((function(e){(0,i.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):k(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var T=function(n){var e=n.defaultValues,t=n.handleSuccess,i=(0,r.useContext)(s.Z),a=(0,r.useContext)(v.Z).user,o=(0,I.cI)({defaultValues:e,resolver:(0,_.S)($.G)}),d=o.control,u=o.errors,l=o.handleSubmit,b=o.register,k=(0,o.watch)("timingStart"),T=function(n){t(n),i.close(),y.default.push("/")},M=(0,f.D)(h.mJ,{onCompleted:function(n){!function(n){i.show({content:(0,Z.jsx)(R.z,{accept:"image/*",category:null,entity:"Job",entityId:n,expiryShow:!1,onSuccess:function(){return T(n)}}),title:"Upload Photos"})}(n.createJob.data.insert_Job.returning[0].id)}}),J=(0,m.Z)(M,1)[0],L={control:d,errors:u,register:b},C=function(){var n=(0,c.Z)(p().mark((function n(t){var i,r;return p().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return i="pending",r={access:t.access,adminId:e.adminId,costCategory:"general",customerId:e.customerId,customerUserId:e.customerUserId,description:t.description,locationId:e.locationId,managerId:e.managerId,serviceId:t.serviceSelected.value,tenantUserId:e.tenantUserId,slaId:3,pricing:"time-materials",status:i,timing:"between",timingEnd:g()(t.timingEnd).utc().format(),timingStart:g()(t.timingStart).utc().format(),title:t.title,JobTimings:{data:[{status:i,userId:a.id}]}},n.next=4,J({variables:{adminId:a.adminId,objects:[r]}});case 4:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}();return(0,Z.jsxs)(j.Z,{id:"offCanvasForm",handleSubmit:l(C),children:[(0,Z.jsx)(A.Z,{label:"Title",children:(0,Z.jsx)(O.Z,U(U({},L),{},{name:"title"}))}),(0,Z.jsx)(A.Z,{label:"Description",children:(0,Z.jsx)(w.Z,U(U({},L),{},{name:"description",rows:3}))}),(0,Z.jsx)(A.Z,{label:"Access information",children:(0,Z.jsx)(w.Z,U(U({},L),{},{name:"access",rows:2}))}),(0,Z.jsx)(P.P,U(U({},L),{},{errors:U({},u),name:"serviceSelected",label:"Service",type:"service"})),(0,Z.jsxs)(q.Z,{children:[(0,Z.jsxs)(x.Z,{md:6,children:[(0,Z.jsx)(A.Z,{label:"Start time"}),(0,Z.jsx)(S.M,U(U({},L),{},{dateFormat:"d MMM yyyy HH:mm",name:"timingStart",showTimeSelect:!0,todayButton:!1}))]}),(0,Z.jsxs)(x.Z,{md:6,children:[(0,Z.jsx)(A.Z,{label:"End time"}),(0,Z.jsx)(S.M,U(U({},L),{},{dateFormat:"d MMM yyyy HH:mm",minDate:new Date(k),name:"timingEnd",showTimeSelect:!0,todayButton:!1}))]})]})]})};function M(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function J(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?M(Object(t),!0).forEach((function(e){(0,i.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):M(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var L=function(n){var e=n.filters,t=(0,r.useContext)(s.Z),c=(0,r.useState)({item:"createdAt",order:"desc"}),m=c[0],l=c[1],p=e.userId,y=(0,a.a)(o.b,{variables:J(J({},e),{},{orderBy:(0,i.Z)({},m.item,m.order)})}),b=y.data,g=(b=void 0===b?{tenantBookings:[]}:b).tenantBookings,f=y.loading,h=function(){t.close()},I=[{hidden:!0},{text:"Property"},{text:"Booked from"},{text:"Booked to"},{formatter:function(n){var e=n.row;return(0,Z.jsx)(d.Z,{content:"New Request",context:"secondary",onClick:function(){return function(n){var e={adminId:n.adminId,customerId:n.customerId,customerUserId:n.customerUserId,locationId:n.locationId,managerId:n.managerId,serviceSelected:null,tenantUserId:p,timingStart:null,timingEnd:null};t.show({title:"Submit new request",content:(0,Z.jsx)(T,{defaultValues:e,handleSuccess:h}),width:"40%"})}(e)},size:"sm"})},text:"Requests & Issues"},{hidden:!0},{hidden:!0},{hidden:!0},{hidden:!0},{hidden:!0}];return(0,Z.jsx)(u.Z,{columns:I,loading:f,rows:g.map((function(n){var e,t,i,r,a,o=n.location,s=o.customer[0]||null,d=(null===s||void 0===s||null===(e=s.account)||void 0===e?void 0:e.contactUsers[0])||null,u=(null===s||void 0===s||null===(t=s.account)||void 0===t?void 0:t.manager)||null,c=(null===s||void 0===s||null===(i=s.account)||void 0===i?void 0:i.admin[0])||null;return{id:n.id,name:o.name,bookingStart:n.bookingStart,bookingEnd:n.bookingEnd?n.bookingEnd:"-",actions:"",locationId:o.id,customerId:null===s||void 0===s||null===(r=s.account)||void 0===r?void 0:r.id,customerUserId:null===d||void 0===d||null===(a=d.user)||void 0===a?void 0:a.id,managerId:null===u||void 0===u?void 0:u.id,adminId:null===c||void 0===c?void 0:c.id}})),sort:m,setSort:l})}},13157:function(n,e,t){t.d(e,{b:function(){return a}});var i,r=t(52209),a=(0,t(54397).Ps)(i||(i=(0,r.Z)(["\n  query GetTenantBookings(\n    $limit: Int\n    $locationId: Int\n    $offset: Int\n    $orderBy: TenantBooking_order_by!\n    $q: Int\n    $userId: Int\n  ) {\n    tenantBookings: TenantBooking(\n      limit: $limit\n      offset: $offset\n      where: { id: { _eq: $q }, locationId: { _eq: $locationId }, userId: { _eq: $userId } }\n      order_by: [$orderBy]\n    ) {\n      id\n      bookingStart\n      bookingEnd\n      notes\n      status\n      createdAt\n      location: Location {\n        id\n        name\n        customer: Account_Locations {\n          id\n          account: Account {\n            id\n            name\n            admin: Admins {\n              id: adminId\n            }\n            manager: Manager {\n              id\n              fullName\n            }\n            contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n              id\n              user: User {\n                id\n                fullName\n              }\n            }\n          }\n        }\n      }\n      user: User {\n        id\n        fullName\n        email\n        phone\n      }\n    }\n    meta: TenantBooking_aggregate(\n      where: { id: { _eq: $q }, locationId: { _eq: $locationId }, userId: { _eq: $userId } }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n"])))}}]);