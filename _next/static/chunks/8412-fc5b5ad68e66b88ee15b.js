"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8412],{27834:function(n,e,t){t.d(e,{I4:function(){return b},AX:function(){return I},fo:function(){return v},JA:function(){return U},WF:function(){return k},Px:function(){return A},a8:function(){return q},r1:function(){return L},MT:function(){return Z},nE:function(){return j},nh:function(){return x},$E:function(){return P},uz:function(){return S},ge:function(){return O},ZA:function(){return C},tW:function(){return D}});var r,o,c,i,s,a,u,d,l,p,m,f,_,g,$,y,h=t(52209),w=t(54397),b=(0,w.Ps)(r||(r=(0,h.Z)(["\n  mutation InsertAccountUser($objects: [Account_User_insert_input!]!) {\n    insert_Account_User(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]))),I=(0,w.Ps)(o||(o=(0,h.Z)(["\n  mutation UpdateUser(\n    $id: Int!\n    $accountUserId: Int!\n    $accountUserChanges: Account_User_set_input\n    $changes: User_set_input\n    $updateAccountUser: Boolean!\n  ) {\n    update_Account_User_by_pk(pk_columns: { id: $accountUserId }, _set: $accountUserChanges)\n      @include(if: $updateAccountUser) {\n      id\n    }\n    update_User_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n    }\n  }\n"]))),v=(0,w.Ps)(c||(c=(0,h.Z)(["\n  query GetUsers(\n    $accountId: Int\n    $accountType: String\n    $date: timestamptz\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: User_order_by!\n    $status: String\n  ) {\n    users: User(\n      limit: $limit\n      offset: $offset\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [\n          { email: { _ilike: $q } }\n          { nameFirst: { _ilike: $q } }\n          { nameLast: { _ilike: $q } }\n        ]\n        status: { _eq: $status }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n        userLocations: User_Account_Locations {\n          accountLocationId\n        }\n      }\n    }\n    meta: User_aggregate(\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n        status: { _eq: $status }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n"]))),U=(0,w.Ps)(i||(i=(0,h.Z)(["\n  query GetUser($id: Int!) {\n    user: User_by_pk(id: $id) {\n      id\n      fullName\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      media: Media {\n        id\n        medium: Medium {\n          id\n          category\n          filename\n          meta\n          type\n        }\n      }\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n      }\n    }\n  }\n"]))),k=(0,w.Ps)(s||(s=(0,h.Z)(["\n  query CheckDuplicateEmail($email: String!) {\n    users: User_public(where: { email: { _eq: $email } }) {\n      id\n      nameFirst\n      nameLast\n      email\n      phone\n    }\n  }\n"]))),A=(0,w.Ps)(a||(a=(0,h.Z)(["\n  fragment UserFields on User {\n    id\n    email\n    nameFirst\n    nameLast\n    fullName\n    phone\n    status\n  }\n"]))),q=(0,w.Ps)(u||(u=(0,h.Z)(["\n  mutation SendGoogleAuthCode($code: String!, $id: Int!, $type: String!) {\n    createGoogleToken(code: $code, id: $id, type: $type) {\n      success\n      tokens\n      error\n    }\n  }\n"]))),L=(0,w.Ps)(d||(d=(0,h.Z)(["\n  mutation GenerateMSURL($type: String!, $id: Int!) {\n    genenrateMSURL(id: $id, type: $type) {\n      url\n    }\n  }\n"]))),Z=(0,w.Ps)(l||(l=(0,h.Z)(["\n  mutation signoutMS($id: Int!, $type: String!, $email: String!) {\n    signoutMS(id: $id, type: $type, email: $email) {\n      error\n      msId\n      success\n    }\n  }\n"]))),j=(0,w.Ps)(p||(p=(0,h.Z)(["\n  query getAccountMeta($id: Int!) {\n    account: Account_by_pk(id: $id) {\n      meta\n    }\n  }\n"]))),x=(0,w.Ps)(m||(m=(0,h.Z)(["\n  query user($id: Int!) {\n    user: User_by_pk(id: $id) {\n      meta\n    }\n  }\n"]))),P=(0,w.Ps)(f||(f=(0,h.Z)(["\n  mutation updateAccount($accountId: Int!, $set: Account_set_input!) {\n    update_Account_by_pk(pk_columns: { id: $accountId }, _set: $set) {\n      id\n    }\n  }\n"]))),S=(0,w.Ps)(_||(_=(0,h.Z)(["\n  mutation updateUserMeta($userId: Int!, $meta: jsonb!) {\n    update_User_by_pk(pk_columns: { id: $userId }, _set: { meta: $meta }) {\n      id\n      meta\n    }\n  }\n"]))),O=(0,w.Ps)(g||(g=(0,h.Z)(['\n  query userDevices($accountId: Int!) {\n    users: User(\n      where: {\n        Account_Users: { accountId: { _eq: $accountId }, status: { _eq: "active" } }\n        UserDevices: { status: { _eq: "active" } }\n        status: { _eq: "active" }\n      }\n    ) {\n      id\n      fullName\n      devices: UserDevices(\n        order_by: { updatedAt: desc_nulls_last }\n        where: { status: { _eq: "active" } }\n        limit: 1\n      ) {\n        id\n        playerId\n      }\n    }\n  }\n']))),C=(0,w.Ps)($||($=(0,h.Z)(['\n  query GetAccountLocations($accountId: Int, $limit: Int, $offset: Int) {\n    location: Location(\n      offset: $offset\n      limit: $limit\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      id\n      name\n      accountLocations: Account_Locations {\n        id\n      }\n      addresses: Addresses(where: { entity: { _eq: "Location" }, registered: { _eq: true } }) {\n        id\n        status\n        address: Address {\n          id\n          name\n          addressLine1\n          postCode\n        }\n      }\n    }\n    meta: Location_aggregate(\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']))),D=(0,w.Ps)(y||(y=(0,h.Z)(["\n  mutation InsertUserAccountLocations(\n    $accountUserId: Int!\n    $objects: [User_Account_Location_insert_input!]!\n  ) {\n    delete_User_Account_Location(where: { accountUserId: { _eq: $accountUserId } }) {\n      affected_rows\n    }\n    insert_User_Account_Location(objects: $objects) {\n      affected_rows\n      returning {\n        id\n      }\n    }\n  }\n"])))},9638:function(n,e,t){t.d(e,{i:function(){return $}});var r=t(30266),o=t(80318),c=t(64687),i=t.n(c),s=t(93645),a=t(75709),u=t(27834),d=t(14347),l=t(83789),p=t(92809);function m(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function f(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?m(Object(t),!0).forEach((function(e){(0,p.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var _=function(n,e){var t=Object.values(n.integration.google).filter((function(n){return n.profile.email!==e}));return Object.assign({},n,{integration:f(f({},n.integration),{},{google:(0,l.Z)(t)})})},g=t(85893),$=function(n){var e=n.credentials,t=e.id,c=e.type,l=n.isLoggedIn,p=n.refetch,m=n.meta,f=n.email,$=(0,a.D)(u.a8,{onCompleted:p}),y=(0,o.Z)($,1)[0],h=(0,a.D)(u.$E,{onCompleted:p}),w=(0,o.Z)(h,1)[0],b=(0,a.D)(u.uz,{onCompleted:p}),I=(0,o.Z)(b,1)[0],v=function(){var n=(0,r.Z)(i().mark((function n(e){return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!e.code){n.next=8;break}if("admin"!==c){n.next=6;break}return n.next=4,y({variables:{code:e.code,id:t,type:c}});case 4:n.next=8;break;case 6:return n.next=8,y({variables:{code:e.code,id:t,type:c}});case 8:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}(),U=function(){var n=(0,r.Z)(i().mark((function n(){var e;return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:e=_(m,f),n.t0=c,n.next="admin"===n.t0?4:"user"===n.t0?7:10;break;case 4:return n.next=6,w({variables:{accountId:t,set:{meta:e}}});case 6:return n.abrupt("break",11);case 7:return n.next=9,I({variables:{userId:t,meta:e}});case 9:return n.abrupt("break",11);case 10:console.info("you need to provide account type");case 11:case"end":return n.stop()}}),n)})));return function(){return n.apply(this,arguments)}}();return l?(0,g.jsx)(s.GoogleLogout,{clientId:"69900974658-9rikek80a7b20gcigfeo3fv0r3qilqtp.apps.googleusercontent.com",onLogoutSuccess:U,onFailure:function(n){console.error("fail",n)},render:function(n){return(0,g.jsx)(d.Z,{context:"secondary",content:"Sign Out",onClick:n.onClick,size:"sm"})}}):(0,g.jsx)(s.GoogleLogin,{accessType:"offline",prompt:"select_account",clientId:"69900974658-9rikek80a7b20gcigfeo3fv0r3qilqtp.apps.googleusercontent.com",isSignedIn:!0,onSuccess:v,onFailure:v,render:function(n){return(0,g.jsx)(d.Z,{context:"secondary",content:"Sign In",onClick:n.onClick,size:"sm"})},responseType:"code",scope:"https://mail.google.com"})}},21899:function(n,e,t){t.d(e,{e:function(){return m}});var r=t(30266),o=t(80318),c=t(64687),i=t.n(c),s=t(75709),a=t(27834),u=t(14347),d=t(85893),l=function(n){var e=n.signOutHandler;return(0,d.jsx)(u.Z,{context:"secondary",content:"Sign Out",onClick:e,size:"sm"})},p=function(n){var e=n.handleLogin;return(0,d.jsx)(u.Z,{context:"secondary",content:"Sign In",onClick:e,size:"sm"})},m=function(n){var e=n.credentials,t=e.id,c=e.type,u=n.isLoggedIn,m=n.refetch,f=n.email,_=(0,s.D)(a.r1),g=(0,o.Z)(_,1)[0],$=(0,s.D)(a.MT,{onCompleted:m}),y=(0,o.Z)($,1)[0],h=function(){var n=(0,r.Z)(i().mark((function n(){var e,r,o,s,a;return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return e=function(n){var e=n.url,t=n.title,r=n.w,o=n.h,c=void 0!==window.screenLeft?window.screenLeft:window.screenX,i=void 0!==window.screenTop?window.screenTop:window.screenY,s=window.innerWidth?window.innerWidth:document.documentElement.clientWidth?document.documentElement.clientWidth:screen.width,a=window.innerHeight?window.innerHeight:document.documentElement.clientHeight?document.documentElement.clientHeight:screen.height,u=s/window.screen.availWidth,d=(s-r)/2/u+c,l=(a-o)/2/u+i,p=window.open(e,t,"\n\n        width=".concat(r/u,",\n        height=").concat(o/u,",\n        top=").concat(l,",\n        left=").concat(d,"\n        "));window.focus&&p.focus()},n.next=3,g({variables:{id:t,type:c}});case 3:if(!(r=n.sent).error){n.next=8;break}return n.abrupt("return",console.error("Error:",r.error));case 8:s=null===r||void 0===r||null===(o=r.data)||void 0===o?void 0:o.genenrateMSURL,(a=s.url)&&e({url:a,title:"microsoft",h:690,w:650});case 10:case"end":return n.stop()}}),n)})));return function(){return n.apply(this,arguments)}}(),w=function(){var n=(0,r.Z)(i().mark((function n(){return i().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,y({variables:{id:t,type:c,email:f}});case 2:case"end":return n.stop()}}),n)})));return function(){return n.apply(this,arguments)}}();return u?(0,d.jsx)(l,{signOutHandler:w}):(0,d.jsx)(p,{handleLogin:h})}}}]);